{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/agent/agent.component.html","webpack:///./src/app/agent/agent.component.scss","webpack:///./src/app/agent/agent.component.ts","webpack:///./src/app/agent/agent.service.ts","webpack:///./src/app/agent/edit-agent-dialog/edit-agent-dialog.component.html","webpack:///./src/app/agent/edit-agent-dialog/edit-agent-dialog.component.scss","webpack:///./src/app/agent/edit-agent-dialog/edit-agent-dialog.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/base/base.module.ts","webpack:///./src/app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component.html","webpack:///./src/app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component.scss","webpack:///./src/app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component.ts","webpack:///./src/app/campaigns/campaign.service.ts","webpack:///./src/app/campaigns/campaigns.component.html","webpack:///./src/app/campaigns/campaigns.component.scss","webpack:///./src/app/campaigns/campaigns.component.ts","webpack:///./src/app/campaigns/campaigns.module.ts","webpack:///./src/app/campaigns/new-campaign-dialog/new-campaign-dialog.component.html","webpack:///./src/app/campaigns/new-campaign-dialog/new-campaign-dialog.component.scss","webpack:///./src/app/campaigns/new-campaign-dialog/new-campaign-dialog.component.ts","webpack:///./src/app/client-information/client-information.component.html","webpack:///./src/app/client-information/client-information.component.scss","webpack:///./src/app/client-information/client-information.component.ts","webpack:///./src/app/client-information/client.service.ts","webpack:///./src/app/client-information/dialogs/add-sale-status.component.html","webpack:///./src/app/client-information/dialogs/add-sale-status.component.scss","webpack:///./src/app/client-information/dialogs/add-sale-status.component.ts","webpack:///./src/app/client-selector/client-selector.component.css","webpack:///./src/app/client-selector/client-selector.component.html","webpack:///./src/app/client-selector/client-selector.component.ts","webpack:///./src/app/core/agents/agents.service.ts","webpack:///./src/app/core/agents/dialogs/add-agent.component.html","webpack:///./src/app/core/agents/dialogs/add-agent.component.scss","webpack:///./src/app/core/agents/dialogs/add-agent.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/daily-sale-tracker/daily-sale-tracker.component.html","webpack:///./src/app/daily-sale-tracker/daily-sale-tracker.component.scss","webpack:///./src/app/daily-sale-tracker/daily-sale-tracker.component.ts","webpack:///./src/app/daily-sale-tracker/daily-sale-tracker.service.ts","webpack:///./src/app/daily-sale-tracker/dialogs/add-sale.component.html","webpack:///./src/app/daily-sale-tracker/dialogs/add-sale.component.scss","webpack:///./src/app/daily-sale-tracker/dialogs/add-sale.component.ts","webpack:///./src/app/daily-sale-tracker/dialogs/delete-sale.component.html","webpack:///./src/app/daily-sale-tracker/dialogs/delete-sale.component.ts","webpack:///./src/app/dashboard/chart-js-content.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dialogs/add-sale-dialog.component.html","webpack:///./src/app/dashboard/dialogs/add-sale-dialog.component.scss","webpack:///./src/app/dashboard/dialogs/add-sale-dialog.component.ts","webpack:///./src/app/fab-float-btn/fab-float-btn.component.html","webpack:///./src/app/fab-float-btn/fab-float-btn.component.scss","webpack:///./src/app/fab-float-btn/fab-float-btn.component.ts","webpack:///./src/app/fab-float-btn/fab-float-btn.module.ts","webpack:///./src/app/fab-float-btn/float-btn.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/loading-spinner/loading-spinner.component.css","webpack:///./src/app/loading-spinner/loading-spinner.component.html","webpack:///./src/app/loading-spinner/loading-spinner.component.ts","webpack:///./src/app/loading-spinner/loading-spinner.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/masks/ssn.directive.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/models/agent-sales.model.ts","webpack:///./src/app/models/campaign-filters.model.ts","webpack:///./src/app/models/daily-sale.model.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/models/role.model.ts","webpack:///./src/app/my-information/my-information.component.html","webpack:///./src/app/my-information/my-information.component.scss","webpack:///./src/app/my-information/my-information.component.ts","webpack:///./src/app/payroll/dialogs/change-agent.component.html","webpack:///./src/app/payroll/dialogs/change-agent.component.scss","webpack:///./src/app/payroll/dialogs/change-agent.component.ts","webpack:///./src/app/payroll/dialogs/reject-note.component.html","webpack:///./src/app/payroll/dialogs/reject-note.component.scss","webpack:///./src/app/payroll/dialogs/reject-note.component.ts","webpack:///./src/app/payroll/dialogs/sales-mapping.component.html","webpack:///./src/app/payroll/dialogs/sales-mapping.component.scss","webpack:///./src/app/payroll/dialogs/sales-mapping.component.ts","webpack:///./src/app/payroll/paste.directive.ts","webpack:///./src/app/payroll/payroll.component.html","webpack:///./src/app/payroll/payroll.component.scss","webpack:///./src/app/payroll/payroll.component.ts","webpack:///./src/app/payroll/payroll.service.ts","webpack:///./src/app/pipes/phone.pipe.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/public-home/public-home.component.html","webpack:///./src/app/public-home/public-home.component.scss","webpack:///./src/app/public-home/public-home.component.ts","webpack:///./src/app/scroll-lock.directive.ts","webpack:///./src/app/select-mapper/select-mapper.component.css","webpack:///./src/app/select-mapper/select-mapper.component.html","webpack:///./src/app/select-mapper/select-mapper.component.ts","webpack:///./src/app/session.service.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/models/state.model.ts","webpack:///./src/app/shared/moment-extensions.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.scss","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/app/sidenav/sidenav.service.ts","webpack:///./src/app/token.interceptor.ts","webpack:///./src/app/user-features/user-features.module.ts","webpack:///./src/app/user-features/user.service.ts","webpack:///./src/app/validators/required-validator.directive.ts","webpack:///./src/app/weather.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 d-flex align-items-baseline\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Search Agents\\\" (keyup)=\\\"searchAgents($event)\\\" />\\n            </mat-form-field>\\n            <button type=\\\"button\\\" class=\\\"mx-3\\\" mat-icon-button (click)=\\\"toggleSortUsers()\\\">\\n                <mat-icon>sort_by_alpha</mat-icon>\\n                <mat-icon>{{sortAscending ? 'arrow_drop_up' : 'arrow_drop_down'}}</mat-icon>\\n            </button>\\n            <mat-slide-toggle (change)=\\\"toggleAgents($event)\\\" [checked]=\\\"true\\\">\\n                {{ showInactive ? 'Hide Inactive' : 'Show Inactive' }}\\n            </mat-slide-toggle>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 py-2\\\" *ngFor=\\\"let user of users | async\\\">\\n            <div class=\\\"card hoverable\\\">\\n                <div \\n                    class=\\\"card-header text-white d-flex align-items-end justify-content-between\\\" \\n                    [ngClass]=\\\"{'bg-vs-primary': user.agent.isActive, 'bg-vs-muted': !user.agent.isActive}\\\"\\n                >\\n                    <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\n                        <li class=\\\"nav-item\\\">\\n                            <button mat-button class=\\\"nav-link\\\" [class.active]=\\\"user.display === 0\\\" (click)=\\\"user.display = 0\\\">Summary</button>\\n                        </li>\\n                        <li class=\\\"nav-item\\\" *ngIf=\\\"user.detail != null\\\">\\n                            <button mat-button class=\\\"nav-link\\\" [class.active]=\\\"user.display === 1\\\" (click)=\\\"user.display = 1\\\">Detail</button>\\n                        </li>\\n                        <li class=\\\"nav-item\\\">\\n                            <button mat-button class=\\\"nav-link\\\" [class.active]=\\\"user.display === 2\\\" (click)=\\\"user.display = 2\\\">Sales</button>\\n                        </li>\\n                    </ul>\\n                    <button class=\\\"p-0 hover-item\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"editAgent(user)\\\">\\n                        <mat-icon color=\\\"accent\\\">edit</mat-icon>\\n                    </button>\\n                </div>\\n                <div class=\\\"card-body\\\" [class.card-body-auto]=\\\"user.display === 2\\\">\\n                    <ng-container *ngIf=\\\"user.display === 0\\\">\\n                        <div class=\\\"d-flex flex-column justify-content-center align-items-center\\\" style=\\\"width:100%;height:100%;\\\">\\n                            <h3 class=\\\"card-title\\\" [class.text-muted]=\\\"!user.agent.isActive\\\">\\n                                {{user.firstName}} {{user.lastName}} <small *ngIf=\\\"!user.agent.isActive\\\">(Inactive)</small>\\n                            </h3>\\n                            <div class=\\\"d-flex align-items-center text-muted\\\">\\n                                <i class=\\\"material-icons\\\">account_box</i>\\n                                {{user.username}}\\n                            </div>\\n                            <div class=\\\"card-text\\\" *ngIf=\\\"user.detail\\\">Birthdate: {{user.detail.birthDate | date:'shortDate'}}</div>\\n                            <div class=\\\"card-text\\\">Anniversary: {{ user.createdAt | date:'shortDate' }}</div>\\n                        </div>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"user.display === 1\\\">\\n                        <p class=\\\"font-weight-light font-italic text-muted\\\">{{user.firstName}} {{user.lastName}}</p>\\n                        <p *ngIf=\\\"user.detail.street == null && user.detail.phone == null\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"editAgent(user)\\\">\\n                                Add Details\\n                            </button>\\n                        </p>\\n                        <div *ngIf=\\\"user.detail && user.detail.street != null\\\">\\n                            <span class=\\\"font-weight-bold\\\">Address: </span>\\n                            <address class=\\\"font-weight-light\\\">\\n                                {{user.detail.street}}\\n                                {{user.detail.street2}}\\n                                {{user.detail.city}} {{user.detail.state}} {{user.detail.zip}}\\n                            </address>\\n                        </div>\\n                        <div *ngIf=\\\"user.detail && user.detail.phone != null\\\">\\n                            <span class=\\\"font-weight-bold\\\">Phone: </span>\\n                            <span class=\\\"font-weight-light\\\">{{user.detail.phone | phone}}</span>\\n                        </div>\\n                        <div *ngIf=\\\"user.detail && user.detail.ssn != null && user.detail.ssn > 0\\\">\\n                            <span class=\\\"font-weight-bold\\\">SSN: </span>\\n                            <span class=\\\"font-weight-light\\\">{{replaceCharAt(user.detail.ssn, 0, 4, 'X')}}</span>\\n                        </div>\\n                        <div *ngIf=\\\"user.detail && user.detail.bankRouting\\\">\\n                            <span class=\\\"font-weight-bold\\\">Routing: </span>\\n                            <span class=\\\"font-weight-light\\\">{{user.detail.bankRouting}}</span>\\n                        </div>\\n                        <div *ngIf=\\\"user.detail && user.detail.bankAccount\\\">\\n                            <span class=\\\"font-weight-bold\\\">Account: </span>\\n                            <span class=\\\"font-weight-light\\\">{{user.detail.bankAccount}}</span>\\n                        </div>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"user.display === 2\\\" [formGroup]=\\\"user.pairingsForm\\\">\\n                        <div class=\\\"d-flex justify-content-between align-items-center mb-2\\\">\\n                            <p class=\\\"font-weight-light font-italic text-muted\\\">\\n                                {{user.firstName}} {{user.lastName}}\\n                            </p>\\n                            <button type=\\\"button\\\" \\n                                mat-button \\n                                class=\\\"float-right\\\" \\n                                (click)=\\\"addEmptyPairing(user.pairingsForm.controls['array'], user.agent.pairings)\\\"\\n                                [disabled]=\\\"disableAddPairingBtn\\\"\\n                            >\\n                                <mat-icon>add</mat-icon> Pairing\\n                            </button>\\n                        </div>\\n                        \\n                        <div formArrayName=\\\"array\\\" *ngIf=\\\"user.agent.pairings.length; else noPairings\\\">\\n                            <mat-card *ngFor=\\\"let pairing of user.agent.pairings; let i=index\\\">\\n                                <mat-card-content [formGroupName]=\\\"i\\\" class=\\\"mb-0\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <mat-form-field>\\n                                                <mat-select placeholder=\\\"Campaign\\\" formControlName=\\\"campaignId\\\" required>\\n                                                    <mat-option *ngFor=\\\"let campaign of campaigns\\\" [value]=\\\"campaign.campaignId\\\">\\n                                                        {{campaign.name}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                                <mat-error *ngIf=\\\"user.pairingsForm.controls['array'].controls[i].hasError('required')\\\">\\n                                                    Please select a campaign.\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col-md-6 d-flex\\\">\\n                                            <mat-form-field class=\\\"flex-grow-1\\\">\\n                                                <input matInput type=\\\"text\\\" placeholder=\\\"Code\\\" formControlName=\\\"salesId\\\" required #pairingRows />\\n                                                <mat-icon matSuffix\\n                                                    color=\\\"primary\\\"\\n                                                    class=\\\"clickable\\\"\\n                                                    *ngIf=\\\"user.pairingsForm.controls['array'].controls[i].value.salesPairingsId > 0 && user.pairingsForm.controls['array'].controls[i].dirty\\\"\\n                                                    (click)=\\\"savePairingUpdate(user.pairingsForm.controls['array'].controls[i], user)\\\"\\n                                                >save</mat-icon>\\n                                                <mat-error *ngIf=\\\"user.pairingsForm.controls['array'].controls[i].hasError('required')\\\">\\n                                                    Please enter a sales ID.\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                </mat-card-content>\\n                                <mat-card-actions class=\\\"d-flex\\\" *ngIf=\\\"pairing.salesPairingsId == null || pairing.salesPairingsId < 1\\\">\\n                                    <button type=\\\"button\\\" mat-button \\n                                        *ngIf=\\\"user.pairingsForm.controls['array'].controls[i].touched\\\" \\n                                        (click)=\\\"cancelNewPairing(user.pairingsForm.controls['array'].controls[i], user, i)\\\"\\n                                    >\\n                                        <mat-icon>clear</mat-icon> Cancel\\n                                    </button>\\n                                    <button type=\\\"button\\\" mat-button color=\\\"primary\\\" \\n                                        [disabled]=\\\"user.pairingsForm.invalid\\\" \\n                                        (click)=\\\"saveNewPairing(user.pairingsForm.controls['array'].controls[i], user)\\\"\\n                                    >\\n                                        <mat-icon>save</mat-icon> Save\\n                                    </button>\\n                                </mat-card-actions>\\n                            </mat-card>\\n                        </div>\\n                        <ng-template #noPairings>\\n                            <h5 class=\\\"text-muted\\\">\\n                                Click the <span class=\\\"font-italic\\\">+ Pairings</span> button to get started.\\n                            </h5>\\n                        </ng-template>\\n                    </ng-container>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<vs-float-button\\n  mat-icon=\\\"add\\\"\\n  (callback)=\\\"showAddAgent()\\\"\\n  [isOpen]=\\\"floatOpen$\\\"\\n></vs-float-button>\"","module.exports = \".card-body {\\n  height: 200px;\\n  overflow-y: auto; }\\n\\n.card-body-auto {\\n  height: auto !important;\\n  max-height: 400px;\\n  overflow-y: auto; }\\n\"","import {Component, OnInit, ViewChildren, QueryList, ElementRef, AfterViewInit, OnDestroy, ContentChildren, AfterContentInit, AfterContentChecked, AfterViewChecked, ChangeDetectorRef} from '@angular/core';\nimport {AgentService} from '@app/agent/agent.service';\nimport { IAgent, User, ICampaign } from '@app/models';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { MatDialog, MatInput, MatSelect, MatFormField, MatCard, MatSlideToggleChange } from '@angular/material';\nimport { AddAgentDialogComponent } from '@app/core/agents/dialogs/add-agent.component';\nimport { FloatBtnService } from '@app/fab-float-btn/float-btn.service';\nimport { map } from 'rxjs/operators';\nimport { FormGroup, FormBuilder, FormArray, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { EditAgentDialogComponent } from '@app/agent/edit-agent-dialog/edit-agent-dialog.component';\nimport { UserService } from '@app/user-features/user.service';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { MessageService } from '@app/message.service';\n\ninterface DataStore {\n    users:User[],\n    managers:IAgent[]\n}\n\nenum AgentDisplay {\n    Summary, \n    Detail\n}\n\ninterface UserView extends User {\n    display:AgentDisplay,\n    pairingsForm:FormGroup\n}\n\nconst PAIRING_KEYS:string[] = ['agentId', 'campaignId', 'clientId', 'salesId', 'salesPairingsId'];\n\n@Component({\n    selector: 'vs-agent',\n    templateUrl: './agent.component.html',\n    styleUrls: ['./agent.component.scss'],\n    providers: [FloatBtnService]\n})\nexport class AgentComponent implements OnInit, AfterViewChecked, OnDestroy {\n    user:User;\n    store:DataStore = {} as DataStore;\n    filteredUsers:User[];\n    users:Observable<UserView[]>;\n    users$:Subject<UserView[]> = new Subject<UserView[]>();\n    managers$:Subject<IAgent[]> = new Subject<IAgent[]>();\n    floatOpen$:Observable<boolean>;\n    form:FormGroup;\n\n    searchContext:string;\n    showSearchContextChip:boolean = false;\n    searchChipValue:string;\n\n    /** internal use only to sort users */\n    private _filteredUsers:UserView[];\n    sortAscending:boolean = true;\n\n    private _campaigns:ICampaign[];\n    campaigns$:Subject<ICampaign[]> = new Subject<ICampaign[]>();\n    campaigns:ICampaign[];\n    disableAddPairingBtn:boolean = false;\n    @ViewChildren('pairingRows') pairingRows:QueryList<ElementRef>;\n    private _pairingRowsSub:Subscription;\n\n    showInactive:boolean = true;\n\n    constructor(\n        private service:AgentService,\n        private session:SessionService,\n        private dialog:MatDialog,\n        private floatBtnService:FloatBtnService,\n        private campaignService:CampaignService,\n        private fb:FormBuilder,\n        private msg:MessageService,\n        private changeDetector:ChangeDetectorRef\n    ) {\n        this.floatOpen$ = this.floatBtnService.opened$.asObservable();\n        this.users = this.users$.asObservable();\n        this.users$.subscribe(next => this._filteredUsers = next);\n        this.campaigns$.subscribe(next => this.campaigns = next);\n    }\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.userItem.subscribe(user => {\n            if(user == null || this.user != null) return;\n            this.user = user;\n            this.refreshAgents();\n\n            this.campaignService.getCampaignsByClient(this.user.sessionUser.sessionClient)\n                .subscribe(campaigns => {\n                    this._campaigns = campaigns;\n                    this.campaigns$.next(this._campaigns);\n                });\n        });\n    }\n\n    ngAfterViewChecked() {\n        this._pairingRowsSub = this.pairingRows.changes.subscribe(next => {\n            if(!this.pairingRows.length || !this.disableAddPairingBtn) return;\n            this.pairingRows.last.nativeElement.focus();\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this._pairingRowsSub.unsubscribe();\n    }\n\n    showAddAgent():void {\n        this.floatBtnService.open();\n\n        this.dialog.open(AddAgentDialogComponent, {\n            width: '600px',\n            data: {\n                user: this.user\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            this.floatBtnService.close();\n            if(result == null || !result) return;\n            this.refreshAgents();\n        });\n    }\n\n    saveNewPairing(form:FormGroup, user:UserView) {\n        if(form.invalid) return;\n        this.disableAddPairingBtn = false;\n        let model = this.preparePairingFromForm(form);\n        model.agentId = model.agentId || user.agent.agentId;\n\n        const isDuplicateEntry = this.isDuplicateCampaignPairing(user.agent.pairings, model.campaignId);\n\n        if(isDuplicateEntry) return;\n\n        const isNewPairing:boolean = model.salesPairingsId == null || model.salesPairingsId < 1;\n        this.session.showLoader();\n\n        this.service.saveAgentSalesPairing(model, model.agentId)\n            .subscribe(result => {\n                user.agent.pairings[user.agent.pairings.length - 1] = result;\n\n                this.resetPairingFormGroup(form, result);\n                this.session.hideLoader();\n            });\n    }\n\n    /**\n     * Updates an existing sales pairing entity. This is used explicitly separate from the AgentComponent.saveNewPairing\n     * because it makes different changes to the UI.\n     * \n     * @param form:@type FormGroup Form that matches the corresponding ISalesPairing entity.\n     * @param user:@type UserView The agent that owns this entity.\n     */\n    savePairingUpdate(form:FormGroup, user:UserView) {\n        if(form.invalid) return;\n        let model = this.preparePairingFromForm(form);\n\n        this.session.showLoader();\n        this.service.saveAgentSalesPairing(model, model.agentId)\n            .subscribe(result => {\n                user.agent.pairings.forEach((p:ISalesPairing, i:number) => {\n                    if(p.salesPairingsId != result.salesPairingsId) return;\n                    user.agent.pairings[i] = result;\n                });\n\n                this.resetPairingFormGroup(form, result);\n                this.session.hideLoader();\n            });\n    }\n\n    toggleAgents(event:MatSlideToggleChange):void {\n        const showAll:boolean = event.checked;\n\n        if(showAll) {\n            this.users$.next(this.store.users as UserView[]);\n            this.showInactive = true;\n        } else {\n            let filtered:UserView[] = this.store.users.filter(u => {\n                return u.agent.isActive == true;\n            }) as UserView[];\n            this.users$.next(filtered);\n            this.showInactive = false;\n        }\n\n    }\n\n    private resetPairingFormGroup(form:FormGroup, pairing:ISalesPairing):void {\n        form.reset();\n        form.patchValue({\n            salesPairingsId: pairing.salesPairingsId,\n            salesId: pairing.salesId,\n            campaignId: pairing.campaignId,\n            clientId: pairing.clientId,\n            agentId: pairing.agentId\n        });\n    }\n\n    private isDuplicateCampaignPairing(pairings:ISalesPairing[], proposedCampaignId:number):boolean {\n        const existing = _.find(pairings, (p:ISalesPairing) => {\n            return p.campaignId == proposedCampaignId;\n        });\n\n        if(existing) \n            this.msg.addMessage('This agent already has a code for that campaign.', 'dismiss', 5000);\n\n        return existing != null;\n    }\n\n    cancelNewPairing(form:FormGroup, user:UserView, index:number) {\n        form.patchValue({\n            campaignId: null,\n            salesId: null\n        });\n        form.reset();\n        user.agent.pairings.splice(index, 1);\n        (<FormArray>form.parent).removeAt(index);\n        this.disableAddPairingBtn = false;\n    }\n\n    addEmptyPairing(formArray:FormArray, existingPairings:ISalesPairing[]):void {\n        this.disableAddPairingBtn = true;\n        if(existingPairings != null)\n            existingPairings.push({} as ISalesPairing);\n        else \n            existingPairings = [{} as ISalesPairing];\n        formArray.push(this.buildPairingsFormGroup(PAIRING_KEYS, {} as ISalesPairing));        \n\n        // set focus on this form new form element, so that the form scrolls to where it needs to \n        // for the user.\n    }\n\n    private preparePairingFromForm(form:FormGroup):ISalesPairing {\n        return {\n            salesPairingsId: form.value.salesPairingsId || 0,\n            agentId: form.value.agentId,\n            clientId: form.value.clientId || this.user.sessionUser.sessionClient,\n            campaignId: form.value.campaignId,\n            salesId: form.value.salesId\n        };\n    }\n\n    private createPairingsForm(pairings:ISalesPairing[]):FormGroup {\n        const formArray:FormArray = this.fb.array([]);\n        pairings.forEach(p => formArray.push(this.buildPairingsFormGroup(PAIRING_KEYS, p)));\n        return this.fb.group({array:formArray});\n    }\n\n    private buildPairingsFormGroup(keys:string[], p:ISalesPairing):FormGroup {\n        const group = this.fb.group({});\n        keys.forEach(k => {\n            let validatorFn:(control:AbstractControl) => {};\n            let formControl:FormControl;\n            if(k == 'salesId' || k == 'campaignId') {\n                validatorFn = Validators.required;\n                formControl = this.fb.control(p[k] || '', [validatorFn]);\n            } else {\n                formControl = this.fb.control(p[k] || '');\n            }\n            group.addControl(k, formControl);\n        });\n        return group;\n    }\n\n    private refreshAgents():void {\n        this.service.getAgentsByClient(this.user.sessionUser.sessionClient)\n            .pipe(map(this.setMoments))\n            .subscribe(users => {\n                _.remove(users, u => u.agent == null);\n\n                users.forEach((u:User, i:number) => {\n                    if(u.detail == null) \n                        users[i].detail = {\n                            userId: u.id,\n                            street: null, \n                            street2: null,\n                            city: null,\n                            state: null,\n                            zip: null,\n                            phone: null,\n                            birthDate: null,\n                            ssn: null,\n                            bankRouting: null,\n                            bankAccount: null\n                        }\n                    \n                    if(u.agent.pairings != null && u.agent.pairings.length)\n                        users[i].pairingsForm = this.createPairingsForm(u.agent.pairings);\n                    else\n                        users[i].pairingsForm = this.createPairingsForm([]);\n                });\n\n                this.store.users = _.orderBy(users, ['lastName', 'firstName'], ['asc', 'asc']);\n                this.users$.next(this.store.users as UserView[]);\n                this.setManagers(this.store.users);\n                this.session.hideLoader();\n            });\n    }\n\n    private setMoments(users:UserView[]):UserView[] {\n        if(!users)\n            return users;\n        users.forEach(user => {\n            if(user.agent == null) return;\n            user.agent.createdAt = moment(user.agent.createdAt);\n            user.display = AgentDisplay.Summary;\n        });\n        return users;\n    }\n\n    private setManagers(users:User[]):void {\n        this.store.managers = _.filter(users, user => {\n            return user.agent.isManager;\n        }) as IAgent[];\n        this.managers$.next(this.store.managers);\n    }\n\n    replaceCharAt(input:string, start:number, end:number, replaceChar:string) {\n        let counter = end - start;\n        let calculatedReplacement:string;\n        for(let i = 0; i < counter; i++) {\n            calculatedReplacement += replaceChar;\n        }\n\n        return input.substr(start, end) + calculatedReplacement + input.substr(end, calculatedReplacement.length);\n    }\n\n    editAgent(user:UserView):void {\n        let displayType = user.display;\n\n        this.dialog.open(EditAgentDialogComponent, {\n            width: '600px',\n            data: {\n                user: this.user,\n                agent: user,\n                managers: this.store.managers\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if(result == null) return; /** If the result is undefined, the user canceled the changes. */\n\n            this.session.showLoader();            \n            this.service.updateUserWithRelationships(this.user.sessionUser.sessionClient, result)\n                .subscribe((user:UserView) => {\n                    const idx = _.findIndex(this.store.users, {id:user.id});\n                    if(idx < 0) {\n                        // this will be for a new user\n                    } else {\n                        user.display = displayType || AgentDisplay.Summary;\n\n                        if(user.agent.pairings != null && user.agent.pairings.length)\n                            user.pairingsForm = this.createPairingsForm(user.agent.pairings);\n                        else\n                            user.pairingsForm = this.createPairingsForm([]);\n\n                        this.store.users[idx] = user;\n                        this.users$.next(this.store.users as UserView[]);\n                        this.setManagers(this.store.users);\n                        this.session.hideLoader();\n                    }\n                })\n        });    \n    }\n\n    searchAgents(event) {\n        this.searchContext = event.target.value;\n\n        let agentsResult = _.filter(this.store.users, (u:User) => {\n            return u.firstName.concat(u.lastName).toLowerCase().trim().includes(this.searchContext);\n        });\n\n        this.users$.next(agentsResult as UserView[]);\n    }\n\n    handleSearchContext() {\n        if(this.searchContext != null) {\n            this.searchChipValue = this.searchContext;\n            this.searchContext = null;\n            this.showSearchContextChip = true;\n        }            \n    }\n\n    removeSearchChip() {\n        this.searchChipValue = null;\n        this.showSearchContextChip = false;\n    }\n\n    toggleSortUsers() {\n        let direction = this.sortAscending ? 'desc' : 'asc';\n        this._filteredUsers = _.orderBy(this._filteredUsers, ['lastName', 'firstName'], [direction, 'asc']);\n        this.users$.next(this._filteredUsers);\n        this.sortAscending = !this.sortAscending;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {IAgent, User} from '@app/models';\nimport { Observable, throwError } from 'rxjs';\nimport { AuthService } from '@app/auth.service';\nimport { catchError } from 'rxjs/operators';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\n\ninterface DataStore {\n    agents: IAgent[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AgentService {\n    api:string;\n    store:DataStore;\n    constructor(private auth:AuthService, private http: HttpClient) {\n        this.api = this.auth.apiUrl + 'api' || '';\n    }\n\n    /**\n     * Gets a list of agents by the client id.\n     * \n     * @param clientId\n     */\n    getAgentsByClient(clientId:number):Observable<User[]> {\n        let url = `${this.api}/clients/${clientId}/agents`;\n        return this.http.get<User[]>(url)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    getAgentByUser(clientId:number, userId:number):Observable<User> {\n        return this.http.get<User>(`${this.api}/clients/${clientId}/users/${userId}/agents`)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    updateUserWithRelationships(clientId:number, user:User):Observable<User> {\n        let url = `${this.api}/clients/${clientId}/users/${user.id}`;\n        return this.http.post<User>(url, user)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    checkUsernameAvailability(username:string):Observable<boolean> {\n        return this.http.get<boolean>(`${this.api}/usernames?u=${username}`)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Return an array of sales pairings entities by agent id.\n     *\n     * @param agentId\n     * @param clientId\n     */\n    getAgentSalesPairings(agentId:number, clientId:number):Observable<ISalesPairing[]> {\n        return this.http.get<ISalesPairing[]>(`${this.api}/sales-pairings/clients/${clientId}/agents/${agentId}/sales-pairings`)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    getSalesPairingsByClient(clientId:number):Observable<ISalesPairing[]> {\n        return this.http.get<ISalesPairing[]>(`${this.api}/sales-pairings/clients/${clientId}`)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n    \n    /**\n     * Save a list of agent sales pairings.\n     *\n     * @param pairings\n     * @param agentId\n     */\n    saveAgentSalesPairings(pairings:ISalesPairing[], agentId:number):Observable<ISalesPairing[]> {\n        return this.http.post<ISalesPairing[]>(`${this.api}/sales-pairings/agents/${agentId}/sales-pairings`, { pairings: pairings })\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    saveAgentSalesPairing(pairing:ISalesPairing, agentId:number):Observable<ISalesPairing> {\n        const url = pairing.salesPairingsId > 0 \n            ? `${this.api}/agents/${agentId}/sales-pairings/${pairing.salesPairingsId}`\n            : `${this.api}/agents/${agentId}/sales-pairings`;\n        return this.http.post<ISalesPairing>(url, pairing)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    deleteAgentSalesPairings(pairingId:number):Observable<void> {\n        return this.http.delete<void>(`${this.api}/sales-pairings/${pairingId}`)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error:HttpErrorResponse) {\n        if(error.error instanceof ErrorEvent) {\n            console.log('Error occurred: ', error.error.message || error.message);\n        } else {\n            console.error(`Server returned error code ${error.status}: ${error.error}`);\n        }\n        return throwError('There was a network error. Please try again.');\n    }\n}\n","module.exports = \"<!-- <mat-dialog-container> -->\\n    <h3 mat-dialog-title>\\n        Edit Agent\\n        <button type=\\\"button\\\" class=\\\"float-right\\\" mat-icon-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">\\n            <mat-icon>clear</mat-icon>\\n        </button>\\n    </h3>\\n    <p class=\\\"text-muted\\\">\\n        All fields denoted with * are required.\\n    </p>\\n    <mat-dialog-content>\\n        <form [formGroup]=\\\"form\\\">\\n            <ng-container formGroupName=\\\"user\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\" required /> \\n                            <mat-error *ngIf=\\\"form.get('user').get('firstName').hasError('required')\\\">\\n                                Please enter a first name.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\" required />\\n                            <mat-error *ngIf=\\\"form.get('user').get('lastName').hasError('required')\\\">\\n                                Please enter a last name.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6 py-3\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" required readonly />\\n                            <mat-hint>Please contact a system admin to edit a username</mat-hint>\\n                            <mat-error *ngIf=\\\"form.get('user').get('username').hasError('required')\\\">\\n                                Please enter a username.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6 d-flex flex-column\\\">\\n                        <mat-checkbox formControlName=\\\"active\\\">Portal Access</mat-checkbox>\\n                        <span class=\\\"text-muted font-italic font-sm\\\">Allow user to login to online portal</span>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container formGroupName=\\\"detail\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"street\\\" placeholder=\\\"Street Address\\\" required />\\n                            <mat-error *ngIf=\\\"form.get('detail').get('street').hasError('required')\\\">\\n                                Please enter a street address.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"street2\\\" placeholder=\\\"Apt/Unit/Suite\\\" />\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"city\\\" placeholder=\\\"City\\\" required />\\n                            <mat-error *ngIf=\\\"form.get('detail').get('city').hasError('required')\\\">\\n                                Please enter a city.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\" required>\\n                                <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.abbreviation\\\">\\n                                    {{state.name}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"form.get('detail').get('state').hasError('required')\\\">\\n                                Please select a state.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"zip\\\" placeholder=\\\"Postal Code\\\" required />\\n                            <mat-error *ngIf=\\\"form.get('detail').get('zip').hasError('required')\\\">\\n                                Please enter a postal code.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input matInput [matDatepicker]=\\\"birthDatePicker\\\" placeholder=\\\"Birth Date\\\" formControlName=\\\"birthDate\\\" />\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"birthDatePicker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #birthDatePicker></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Social Security Number\\\" formControlName=\\\"ssn\\\" />\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required />\\n                            <mat-error *ngIf=\\\"form.get('detail').get('phone').hasError('required')\\\">\\n                                Please enter a phone number.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Bank Routing\\\" formControlName=\\\"routing\\\" />\\n                            <mat-hint>\\n                                Use if agent has direct deposit setup.\\n                            </mat-hint>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Bank Account\\\" formControlName=\\\"account\\\" />\\n                            <mat-hint>\\n                                Use if agent has direct deposit setup.\\n                            </mat-hint>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container formGroupName=\\\"agent\\\">\\n                <div class=\\\"row py-4\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"Manager\\\" formControlName=\\\"manager\\\" required>\\n                                <mat-option *ngFor=\\\"let manager of managers\\\" [value]=\\\"manager.id\\\">\\n                                    {{manager.firstName}} {{manager.lastName}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"form.get('agent').get('manager').hasError('required')\\\">\\n                                Please select a manager.\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <p class=\\\"text-muted\\\">\\n                            Select the manager that this agent reports to.\\n                        </p>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-checkbox formControlName=\\\"isManager\\\">Manager</mat-checkbox>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <p class=\\\"text-muted\\\">\\n                            This denotes the agent as a manager in the system, enabling their overrides and allowing you to assign\\n                            other users to them for payroll.\\n                        </p>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-checkbox formControlName=\\\"active\\\">Active Employee</mat-checkbox>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <p class=\\\"text-muted\\\">\\n                            If this is unchecked, the agent is considered \\\"terminated\\\" and will no longer show up in the system as \\n                            an active employee. This will affect payroll and if they are not active, their payroll will not be calculated. This \\n                            does <strong>NOT</strong> disable their login access, because terminated employees may need access to their historical\\n                            pay data for a determinate amount of time.\\n                        </p>\\n                    </div>\\n                </div>\\n            </ng-container>\\n        </form>\\n    </mat-dialog-content>\\n    <mat-dialog-actions>\\n        <button type=\\\"button\\\" mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n        <button type=\\\"button\\\" mat-button color=\\\"primary\\\" (click)=\\\"saveAgentChanges()\\\">Save</button>\\n    </mat-dialog-actions>\\n<!-- </mat-dialog-container> -->\"","module.exports = \":host mat-form-field {\\n  width: 100%; }\\n\"","import {Component, OnInit, Inject} from '@angular/core';\nimport {User} from '@app/models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { IState, States } from '@app/shared/models/state.model';\nimport { map } from 'rxjs/operators';\n\ninterface DialogData {\n    user: User, // the current logged in user\n    agent: User, // the agent we are going to be editing\n    managers:User[] \n}\n\n@Component({\n    selector: 'vs-edit-agent-dialog',\n    templateUrl: './edit-agent-dialog.component.html',\n    styleUrls: ['./edit-agent-dialog.component.scss']\n})\nexport class EditAgentDialogComponent implements OnInit {\n\n    form:FormGroup;\n    agent:User;\n    managers:User[];\n    states:IState[] = States.$get();\n\n    constructor(\n        private fb:FormBuilder, \n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        public ref:MatDialogRef<EditAgentDialogComponent>\n    ) {}\n\n    ngOnInit() {\n        this.agent = this.data.agent;\n        this.managers = this.data.managers;\n        this.managers.unshift({\n            id: -1,\n            firstName: 'No',\n            lastName: 'Manager'\n        } as User);\n\n        this.createForm();\n    }\n\n    onNoClick():void {\n        this.ref.close();\n    }\n\n    saveAgentChanges():void {\n        const updatedAgent = this.prepareModel();\n        this.ref.close(updatedAgent);\n    }\n\n    /** Creates a form that has separate form groups for the user entity, user_detail entity and the agent entity. */\n    private createForm():void {\n        this.form = this.fb.group({\n            user: this.fb.group({\n                firstName: this.fb.control(this.agent.firstName, [Validators.required]),\n                lastName: this.fb.control(this.agent.lastName, [Validators.required]),\n                username: this.fb.control(this.agent.username, [Validators.required]),\n                email: this.fb.control(this.agent.email, [Validators.required, Validators.email]),\n                active: this.fb.control(this.agent.active)\n            }),\n            detail: this.fb.group({\n                street: this.fb.control(this.agent.detail.street, [Validators.required]),\n                street2: this.fb.control(this.agent.detail.street2),\n                city: this.fb.control(this.agent.detail.city, [Validators.required]),\n                state: this.fb.control(this.agent.detail.state, [Validators.required]),\n                zip: this.fb.control(this.agent.detail.zip, [Validators.required, Validators.pattern('[0-9]+')]),\n                ssn: this.fb.control(this.agent.detail.ssn || ''),\n                birthDate: this.fb.control(this.agent.detail.birthDate, [Validators.required]),\n                phone: this.fb.control(this.agent.detail.phone, [Validators.required, Validators.pattern('[0-9]+')]),\n                routing: this.fb.control(this.agent.detail.bankRouting),\n                account: this.fb.control(this.agent.detail.bankAccount)\n            }),\n            agent: this.fb.group({\n                manager: this.fb.control(this.agent.agent.managerId, [Validators.required]),\n                isManager: this.fb.control(this.agent.agent.isManager),\n                active: this.fb.control(this.agent.agent.isActive)\n            })\n        })\n    }\n\n    private prepareModel():User {\n        return {\n            id: this.agent.id,\n            firstName: this.form.value.user.firstName,\n            lastName: this.form.value.user.lastName,\n            email: this.form.value.user.email,\n            username: this.form.value.user.username,\n            active: this.form.value.user.active,\n            detail: {\n                userDetailId: this.agent.detail.userDetailId || 0,\n                userId: this.agent.detail.userId,\n                street: this.form.value.detail.street,\n                street2: this.form.value.detail.street2,\n                city: this.form.value.detail.city,\n                state: this.form.value.detail.state,\n                zip: this.form.value.detail.zip,\n                ssn: +this.form.value.detail.ssn,\n                birthDate: this.form.value.detail.birthDate,\n                phone: +this.form.value.detail.phone,\n                bankRouting: this.form.value.detail.routing,\n                bankAccount: this.form.value.detail.account\n            },\n            agent: {\n                agentId: this.agent.agent.agentId || 0,\n                firstName: this.form.value.user.firstName,\n                lastName: this.form.value.user.lastName,\n                managerId: this.form.value.agent.manager,\n                isManager: this.form.value.agent.isManager,\n                isActive: this.form.value.agent.active\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyInformationComponent } from './my-information/my-information.component';\nimport { ClientInformationComponent } from './client-information/client-information.component';\nimport { PayrollComponent } from './payroll/payroll.component';\nimport { AppComponent } from './app.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { CampaignsComponent } from '@app/campaigns/campaigns.component';\n\nimport { DailySaleTrackerComponent } from '@app/daily-sale-tracker/daily-sale-tracker.component';\nimport { environment } from '@env/environment';\nimport { AgentComponent } from '@app/agent/agent.component';\nimport { PublicHomeComponent } from '@app/public-home/public-home.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: PublicHomeComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n    { path: 'my-information', component: MyInformationComponent, canActivate: [AuthGuard] },\n    { path: 'client-information', component: ClientInformationComponent, canActivate: [AuthGuard] },\n    { path: 'campaigns', component: CampaignsComponent, canActivate: [AuthGuard] },\n    { path: 'payroll-tools', component: PayrollComponent, canActivate: [AuthGuard] },\n    { path: 'agents', component: AgentComponent, canActivate: [AuthGuard] },\n    { path: 'daily-tracker', component: DailySaleTrackerComponent, canActivate: [AuthGuard] },\n    { path: '**', redirectTo: 'home' }\n]\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [\n    RouterModule.forRoot(\n      routes,\n      {\n        useHash: true,\n        // enableTracing: !environment.production // used to debug routing, consoles all router methods\n      }\n    )\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container *ngIf=\\\"_loggedIn; else loggedOut;\\\">\\n    <mat-sidenav #navigation mode=\\\"side\\\" class=\\\"sidenav\\\" autoFocus=\\\"false\\\">\\n        <side-nav></side-nav>\\n    </mat-sidenav>\\n    <!-- <mat-sidenav-content scrollLock [trapScroll]=\\\"_loading\\\" class=\\\"pb-4\\\"> -->\\n    <mat-sidenav-content class=\\\"pb-4\\\">\\n        <ngx-loading [show]=\\\"_loading\\\"></ngx-loading>\\n        <app-header></app-header>\\n        <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n<ng-template #loggedOut>\\n    <!-- <div scrollLock [trapScroll]=\\\"_loading\\\"> -->\\n    <div>\\n        <ngx-loading [show]=\\\"_loading\\\"></ngx-loading>\\n        <app-header></app-header>\\n        <router-outlet></router-outlet>\\n    </div>\\n</ng-template>\"","module.exports = \".mat-sidenav-content {\\n  height: 100vh; }\\n\\n.navigation {\\n  background-color: #fafafa; }\\n\\nhtml, body {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%; }\\n\\nmat-sidenav-container, .sidenav-content {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%; }\\n\\nmat-sidenav-layout {\\n  background: rgba(0, 0, 0, 0.03); }\\n\\n@media screen and (max-width: 480px) {\\n  .sidenav {\\n    width: 100%; } }\\n\\n@media screen and (min-width: 481px) {\\n  .sidenav {\\n    width: 300px; } }\\n\"","import {Component, OnInit, ViewChild, ChangeDetectorRef, AfterViewChecked, AfterViewInit, AfterContentInit} from '@angular/core';\nimport {Observable, Subscription, of} from 'rxjs';\nimport {SessionService} from './session.service';\nimport {MatSidenav} from '@angular/material';\nimport {environment} from '@env/environment.prod';\nimport {MomentExtensions} from '@app/shared/moment-extensions';\nimport {SidenavService} from '@app/sidenav/sidenav.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewChecked, AfterContentInit {\n    title = 'app';\n    loading:boolean = true;\n    loggedInStatus: Observable<boolean>;\n    loading$: Observable<boolean>;\n    opened$: Observable<boolean>;\n    _loading:boolean;\n    _loggedIn:boolean;\n\n    @ViewChild('navigation') public sidenav: MatSidenav;\n\n    routerSubscription:Subscription;\n\n    constructor(\n        private session: SessionService,\n        private cd: ChangeDetectorRef,\n        private sidenavService: SidenavService,\n        private breakpointObserver:BreakpointObserver,\n        private router:Router\n    ) {\n        let counter = 0;\n        // wire up our extension methods\n        MomentExtensions.init();\n        this.session.loading$.subscribe(next => {\n            // dev only bug -\n            // https://stackoverflow.com/questions/39787038/how-to-manage-angular2-expression-has-changed-after-it-was-checked-exception-w\n            if (!environment.production) this.cd.detectChanges();\n\n            if(next == null) return;\n            this.loading$ = of(next);\n            this._loading = next;\n        })\n        this.session.isLoginSubject.subscribe(next => {\n            if(next == null) return;\n            this.loggedInStatus = of(next);\n            this._loggedIn = next;\n        });\n\n        this.observeBreakpoints();\n    }\n\n    ngOnInit() {\n        this.session.loadUserStorageItem();\n    }\n\n    ngAfterContentInit() {\n        //Called after ngOnInit when the component's or directive's content has been initialized.\n        //Add 'implements AfterContentInit' to the class.\n        // this.loading = this.session.loadingState;\n    }\n\n    ngAfterViewChecked() {\n        // initialize our sidenav service\n        this.sidenavService.setSidenav(this.sidenav);\n\n        // dev only bug -\n        // https://stackoverflow.com/questions/39787038/how-to-manage-angular2-expression-has-changed-after-it-was-checked-exception-w\n        if (!environment.production) this.cd.detectChanges();\n    }\n\n    /**\n     * Observes the layout and if the viewport changes sizes to the size of a smartphone, \n     * this method calls a method to update services on the layout for mobile/desktop mode when applicable. \n     */\n    private observeBreakpoints():void {\n        this.breakpointObserver.observe([\n            Breakpoints.Handset\n        ]).subscribe(result => {\n            if(result.matches)\n                this.handleMobileViewport();\n            else\n                this.handleFullViewport();\n        });\n    }\n\n    private handleMobileViewport() {\n        this.routerSubscription = this.router.events.subscribe(() => {\n            this.sidenavService.close();\n        });\n    }\n\n    private handleFullViewport() {\n        if(this.routerSubscription != null) \n            this.routerSubscription.unsubscribe();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from './core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { MaterialModule } from './material/material.module';\nimport { ScrollLockDirective } from './scroll-lock.directive';\nimport { LoadingModule } from 'ngx-loading';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AgentComponent } from './agent/agent.component';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { PipesModule } from '@app/pipes/pipes.module';\nimport { EditAgentDialogComponent } from './agent/edit-agent-dialog/edit-agent-dialog.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { PublicHomeComponent } from './public-home/public-home.component';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    BrowserModule,\n    CoreModule,\n    MaterialModule,\n    LoadingModule,\n    AppRoutingModule,\n    FabFloatBtnModule,\n    PipesModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [\n    AppComponent,\n    SidenavComponent,\n    ScrollLockDirective,\n    HeaderComponent,\n    AgentComponent,\n    EditAgentDialogComponent,\n    PublicHomeComponent\n  ],\n  entryComponents: [\n    EditAgentDialogComponent\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service'\nimport { Observable ,  BehaviorSubject, of, Observer } from 'rxjs';\nimport { UserService } from './user-features/user.service';\nimport { User, ILocalStorage } from './models';\nimport { SessionService } from './session.service';\nimport * as moment from 'moment';\n\n\n/**\n * Design and built with help from: https://www.code-sample.com/2018/03/angular-5-auth-guard-and-route-guards.html\n *\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private user:User;\n  private authenticated: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private userService: UserService,\n    private session:SessionService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean> | boolean {\n    const url:string = state.url;\n    return Observable.create((observer:Observer<boolean>) => this.session.isUserAuthenticated()\n      .toPromise()\n      .then((store:ILocalStorage<User>) => {\n        if (store != null && store.expires > moment().valueOf()) {\n          observer.next(true);\n          observer.complete();\n        } else {\n          this.session.navigateQueue.push(url);\n          this.router.navigateByUrl('login');\n          observer.next(false);\n          observer.complete();\n        }\n      }));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { SessionService } from './session.service';\nimport { MessageService } from './message.service';\nimport { IClient } from './models';\nimport { IUserRole } from './models/role.model';\nimport { UserService } from './user-features/user.service';\nimport { environment } from 'environments/environment';\nimport { OAuthResponse } from '@app/models/auth-response.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  apiUrl:string = environment.apiUrl;\n  roles: IUserRole[];\n  redirectUrl: string = '/';\n  private selectedClient: BehaviorSubject<IClient> = new BehaviorSubject<IClient>(null);\n  loading = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private session: SessionService,\n    private userService: UserService,\n    private msg: MessageService\n  ) {}\n\n  /**\n   * User attempted oauth login. This could potentially offer oauth2 login services through\n   * other authentication methods like google/facebook.\n   *\n   * @param data\n   * @param callback\n   */\n  login(data: any) : Promise<any> {\n    this.loading = true;\n    this.session.clearStorage();\n    const url = this.apiUrl + 'oauth/token';\n\n    return this.http.post(url, data).toPromise();\n  }\n\n  ngLogin(data:{email:string, password:string}):Observable<OAuthResponse> {\n      return this.http.post<OAuthResponse>(`${this.apiUrl}api/authenticate`, data);\n  }\n\n  /**\n   * Log out. Clears session storage.\n   *\n   */\n  logout():Promise<string> {\n    return new Promise<string>(resolve => {\n      this.redirectUrl = this.router.routerState.snapshot.url;\n      this.session.logout();\n      this.userService.logout();\n\n      resolve(this.redirectUrl);\n    });\n  }\n\n  /**\n   * Get's user from the database by the username after they've been authenticated and issued\n   * a token.\n   *\n   * @param username\n   * @param callback\n   */\n  getUserSession(username: string, callback?: any) : Promise<any> {\n    const url = this.apiUrl + 'api/users/' + username + '/session';\n    return new Promise((resolve, reject) => {\n      this.http.get(url)\n        .toPromise()\n        .then(\n          result => {\n            this.populateUserRoles()\n              .then(data => this.roles = data);\n            resolve(result);\n          },\n          err => reject(err)\n        )\n    });\n  }\n\n  setSession(key: string, value: any): void {\n    this.session[key] = value;\n  }\n\n  /**\n   * Gets all user roles.\n   */\n  private populateUserRoles(): Promise<any> {\n    return this.http.get(this.apiUrl + 'api/utilities/get-user-roles').toPromise();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingSpinnerComponent } from '../loading-spinner/loading-spinner.component';\nimport { SelectMapperComponent } from '../select-mapper/select-mapper.component';\nimport { ClientInformationComponent } from '../client-information/client-information.component';\nimport { ClientSelectorComponent } from '../client-selector/client-selector.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ChartJsContent } from \"../dashboard/chart-js-content\";\nimport { LoginComponent } from '../login/login.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '@app/material/material.module';\nimport { AgentAddSaleDialog } from '@app/dashboard/dialogs/add-sale-dialog.component';\nimport { PortalModule } from '@angular/cdk/portal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PortalModule,\n    MaterialModule\n  ],\n  declarations: [\n    LoginComponent,\n    ChartJsContent,\n    DashboardComponent,\n    ClientSelectorComponent,\n    ClientInformationComponent,\n    SelectMapperComponent,\n    LoadingSpinnerComponent,\n    AgentAddSaleDialog\n  ],\n  entryComponents: [\n    AgentAddSaleDialog\n  ]\n})\nexport class BaseModule { }\n","module.exports = \"\\n<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Filters</h4>\\n    <button type=\\\"button\\\" mat-icon-button tabindex=\\\"-1\\\" (click)=\\\"onNoClick()\\\">\\n        <mat-icon>clear</mat-icon>\\n    </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\" class=\\\"pb-4\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h6>Active Status <small>Select to include:</small></h6>\\n                <mat-checkbox [(checked)]=\\\"showAllStatuses\\\" (change)=\\\"changeShowAll($event)\\\" color=\\\"primary\\\">Show All</mat-checkbox><br />\\n                <mat-checkbox formControlName=\\\"active\\\">Active</mat-checkbox><br />\\n                <mat-checkbox formControlName=\\\"inactive\\\">Inactive</mat-checkbox>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <mat-form-field>\\n                    <mat-label>Compensation</mat-label>\\n                    <span matPrefix>$ &nbsp;</span>\\n                    <input type=\\\"text\\\" matInput formControlName=\\\"compensation\\\" (change)=\\\"updateCompOperatorForm()\\\" />\\n                </mat-form-field>\\n\\n                <ng-container *ngIf=\\\"showCompOperator\\\">\\n                    <mat-form-field>\\n                        <mat-select formControlName=\\\"compOperator\\\">\\n                            <mat-option value=\\\"0\\\">=</mat-option>\\n                            <mat-option value=\\\"1\\\"><</mat-option>\\n                            <mat-option value=\\\"2\\\">></mat-option>\\n                            <mat-option value=\\\"3\\\"><=</mat-option>\\n                            <mat-option value=\\\"4\\\">>=</mat-option>\\n                        </mat-select>\\n                        <mat-hint>Filter compensation amount</mat-hint>\\n                    </mat-form-field>\\n                </ng-container>\\n            </div>\\n        </div>\\n    </form>\\n    <div class=\\\"float-right\\\">\\n        <button type=\\\"button\\\" mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n        <button type=\\\"button\\\" mat-button color=\\\"primary\\\" (click)=\\\"saveFilter()\\\">Save</button>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CampaignFilters, CompOperator } from '@app/models/campaign-filters.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport * as _ from 'lodash';\n\ninterface DialogData {\n    filter:CampaignFilters\n}\n\n@Component({\n    selector: 'app-campaign-filter-dialog',\n    templateUrl: './campaign-filter-dialog.component.html',\n    styleUrls: ['./campaign-filter-dialog.component.scss']\n})\nexport class CampaignFilterDialogComponent implements OnInit {\n    filter:CampaignFilters;\n    form:FormGroup;\n    showAllStatuses:boolean = true;\n    showCompOperator:boolean;\n    constructor(\n        private fb:FormBuilder, \n        @Inject(MAT_DIALOG_DATA) public data: any, \n        public ref: MatDialogRef<CampaignFilterDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.filter = _.cloneDeep(this.data.filter);\n        this.createForm();\n\n        this.showCompOperator = this.filter.compensation != null;\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    saveFilter():void {\n        if(this.form.invalid) return;\n        this.prepareModel();\n        this.ref.close(this.filter);        \n    }\n\n    updateCompOperatorForm():void {\n        this.showCompOperator = this.form.value.compensation != null;\n    }\n\n    changeShowAll(event):void {\n        this.showAllStatuses = event.checked;\n        \n        if(this.showAllStatuses) {\n            this.form.controls.active.patchValue(!this.showAllStatuses);\n            this.form.controls.active.disable();\n\n            this.form.controls.inactive.patchValue(!this.showAllStatuses);\n            this.form.controls.inactive.disable();\n        } else {\n            this.form.controls.active.enable();\n            this.form.controls.inactive.enable();\n        }\n        \n    }\n\n    private createForm() {\n        this.showAllStatuses = this.filter.activeStatus == null || this.filter.activeStatus === 'all';\n        this.form = this.fb.group({\n            active: this.fb.control({ value: this.filter.activeStatus === 'active', disabled: this.showAllStatuses }),\n            inactive: this.fb.control({ value: this.filter.activeStatus === 'inactive', disabled: this.showAllStatuses }),\n            compensation: this.fb.control(this.filter.compensation || ''),\n            compOperator: this.fb.control((this.filter.compOperator || CompOperator.Equals).toString(), [Validators.required]),\n            location: this.fb.control(this.filter.location)\n        });\n    }\n\n    private prepareModel():void {\n        if(this.showAllStatuses) {\n            this.filter.activeStatus = 'all';\n        } else if (this.form.value.active && !this.form.value.inactive) {\n            this.filter.activeStatus = 'active';\n        } else if (this.form.value.inactive && !this.form.value.active) {\n            this.filter.activeStatus = 'inactive';\n        } else if (this.form.value.active && this.form.value.inactive) {\n            this.filter.activeStatus = 'all';\n        }\n\n        this.filter.compensation = this.form.value.compensation;\n        this.filter.compOperator = this.form.value.compOperator;\n        this.filter.location = this.form.value.location;\n    }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { ICampaign } from '../models';\nimport { AuthService } from '../auth.service';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CampaignService {\n  private apiUrl:string;\n  private api:string;\n  campaign:ICampaign;\n\n  constructor(private http:HttpClient, private auth:AuthService) {\n    this.apiUrl = this.auth.apiUrl + 'api/' || '';\n    this.api = this.auth.apiUrl + 'api';\n  }\n\n  // TODO: do I even use this anywhere?\n  // getCampaignsByClient(clientId:number): Promise<any> {\n  //   return this.http.get(this.apiUrl + 'clients/' + clientId + '/campaigns').toPromise();\n  // }\n\n  /**\n   * Returns all active campaigns accessible by the current user\n   *\n   * @param clientId\n   */\n  getCampaigns(clientId:number, activeOnly:boolean = null):Promise<ICampaign[]> {\n    const url = activeOnly == null\n      ? `${this.apiUrl}campaigns/clients/${clientId}/active`\n      : `${this.apiUrl}campaigns/clients/${clientId}/active/${activeOnly}`;\n    return this.http.get<ICampaign[]>(url).toPromise();\n  }\n\n  getCampaignsByClient(clientId:number):Observable<ICampaign[]> {\n      return this.http.get<ICampaign[]>(`${this.api}/campaigns/clients/${clientId}`)\n        .pipe(\n            catchError(this.handleError)\n        );\n  }\n\n  /**\n   * Get campaign entities by agent.\n   * \n   * @param clientId \n   * @param agentId \n   */\n  getCampaignsByAgent(clientId:number, agentId:number):Observable<ICampaign[]> {\n    const url = `${this.apiUrl}campaigns/clients/${clientId}/agents/${agentId}`;\n    return this.http.get<ICampaign[]>(url)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Checks to see if a campaign already exists for this clients by name.\n   *\n   * @param clientId\n   * @param name\n   */\n  checkCampaignNameAvailability(clientId:number, name:string):Promise<boolean> {\n    return this.http.get<boolean>(this.apiUrl + 'campaigns/clients/' + clientId + '/campaign-name', {\n      params: {\n        name: name\n      }\n    }).toPromise();\n  }\n\n  /**\n   * Save a new/existing campaign entity.\n   *\n   * @param clientId\n   * @param campaignId\n   * @param dto\n   */\n  saveCampaign(clientId:number, campaignId:number, dto:ICampaign):Promise<ICampaign> {\n    let url = campaignId != null\n      ? this.apiUrl + 'campaigns/clients/' + clientId + '/campaigns/' + campaignId\n      : this.apiUrl + 'campaigns/clients/' + clientId + '/campaigns';\n\n    return this.http\n      .post<ICampaign>(\n        url,\n        { dto: dto }\n      ).toPromise();\n  }\n\n  private handleError(error:HttpErrorResponse) {\n    if(error.error instanceof ErrorEvent) {\n      // client side network error\n      console.log('Error occurred: ', error.error.message || error.message);\n    } else {\n      // backend returned server error\n      console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `)\n    }\n    return throwError('There was a network error. Please try again.');\n  }\n\n}\n","module.exports = \"<!-- <mat-card>\\n  <mat-card-content>\\n    <h2>{{user.selectedClient.name}}'s Campaigns</h2>\\n    <mat-tab-group class=\\\"campaign-tab-group\\\" [selectedIndex]=\\\"activeTab\\\">\\n      <mat-tab label=\\\"Active\\\">\\n        <div class=\\\"campaign-tab-content\\\">\\n          <div class=\\\"mat-elevation-z2 p-3 d-flex justify-content-center\\\" *ngIf=\\\"activeTableSource.length === 0\\\">\\n              <h5 class=\\\"mb-0\\\">No Active Campaigns</h5>\\n          </div>\\n          <div class=\\\"campaigns-table active mat-elevation-z8\\\" *ngIf=\\\"activeTableSource.length > 0\\\">\\n            <table mat-table #table [dataSource]=\\\"activeTableSource\\\" class=\\\"active-table\\\">\\n\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef>Name</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\" class=\\\"hover\\\">\\n                  {{item.name}}\\n                  <i class=\\\"material-icons clickable\\\" (click)=\\\"editCampaign(item)\\\">create</i>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"campaignId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Campaign ID</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.campaignId}}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"active\\\">\\n                <th mat-header-cell *matHeaderCellDef>Deactivate</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">\\n                  <button mat-icon-button>\\n                    <mat-icon aria-label=\\\"Deactivate\\\" color=\\\"warn\\\" (click)=\\\"switchActiveStatus(item)\\\">clear</mat-icon>\\n                  </button>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"createdAt\\\">\\n                <th mat-header-cell *matHeaderCellDef>Date Added</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.createdAt | date }}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"updatedAt\\\">\\n                <th mat-header-cell *matHeaderCellDef>Last Modified</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.updatedAt | date:'short'}}</td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"activeTableColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: activeTableColumns;\\\"></tr>\\n            </table>\\n          </div>\\n        </div>\\n      </mat-tab>\\n      <mat-tab label=\\\"Inactive\\\">\\n        <div class=\\\"campaign-tab-content\\\">\\n          <div class=\\\"mat-elevation-z2 p-3 d-flex justify-content-center\\\" *ngIf=\\\"inactiveTableSource.length === 0\\\">\\n            <h5 class=\\\"mb-0\\\">No Inactive Campaigns</h5>\\n          </div>\\n          <div class=\\\"campaigns-table active mat-elevation-z8\\\" *ngIf=\\\"inactiveTableSource.length > 0\\\">\\n            <table mat-table #table [dataSource]=\\\"inactiveTableSource\\\" class=\\\"active-table\\\">\\n\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef>Name</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.name}}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"campaignId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Campaign ID</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.campaignId}}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"active\\\">\\n                <th mat-header-cell *matHeaderCellDef>Activate</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">\\n                  <button mat-icon-button>\\n                    <mat-icon aria-label=\\\"Activate\\\" color=\\\"primary\\\" (click)=\\\"switchActiveStatus(item)\\\">check_cirle_outline</mat-icon>\\n                  </button>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"createdAt\\\">\\n                <th mat-header-cell *matHeaderCellDef>Date Added</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.createdAt | date }}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"updatedAt\\\">\\n                <th mat-header-cell *matHeaderCellDef>Last Modified</th>\\n                <td mat-cell *matCellDef=\\\"let item\\\">{{item.updatedAt | date:'short'}}</td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"activeTableColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: activeTableColumns;\\\"></tr>\\n            </table>\\n          </div>\\n        </div>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </mat-card-content>\\n</mat-card> -->\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n            <h6 class=\\\"display-4\\\">Campaign Management</h6>\\n        </div>\\n        <div class=\\\"col-md-2 d-flex justify-content-end align-items-center\\\">\\n            <button type=\\\"button\\\" \\n                mat-icon-button \\n                color=\\\"primary\\\" \\n                (click)=\\\"setFilters()\\\" \\n                [class.filter-active]=\\\"filterActive\\\"\\n            >\\n                <mat-icon>filter_list</mat-icon>\\n            </button>\\n            <button type=\\\"button\\\"\\n                class=\\\"ml-2\\\"\\n                mat-flat-button\\n                color=\\\"primary\\\"\\n                [matBadge]=\\\"numFilters\\\"\\n                matBadgePosition=\\\"after\\\"\\n                matBadgeColor=\\\"accent\\\"\\n                [matBadgeHidden]=\\\"!filterActive\\\"\\n                matBadgeOverlap=\\\"true\\\"\\n                (click)=\\\"clearFilters()\\\"\\n                *ngIf=\\\"filterActive\\\"\\n            >\\n                Clear Filters\\n            </button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 my-2\\\" *ngFor=\\\"let c of (campaigns | async); let i = index\\\">\\n            <div class=\\\"card hoverable\\\">\\n                <!-- <div class=\\\"card-header text-center\\\">{{c.name}}</div> -->\\n                <div class=\\\"card-body px-3 pt-1 pb-2\\\" [ngClass]=\\\"c.active ? 'border-top-info' : 'border-top-light'\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-10 d-flex align-items-center\\\">\\n                            <h5 class=\\\"card-title mb-0\\\" [class.text-muted]=\\\"!c.active\\\">{{c.name}}</h5>\\n                        </div>\\n                        <div class=\\\"col-md-2 d-flex align-items-start justify-content-end\\\">\\n                            <button mat-icon-button type=\\\"button\\\" [matMenuTriggerFor]=\\\"menu\\\" class=\\\"float-right\\\" [class.text-muted]=\\\"!c.active\\\">\\n                                <mat-icon>more_vert</mat-icon>\\n                            </button>\\n                            <mat-menu #menu>\\n                                <button mat-menu-item (click)=\\\"editCampaign(c)\\\" *ngIf=\\\"c.active\\\">Edit</button>\\n                                <button mat-menu-item (click)=\\\"switchActiveStatus(c, i)\\\">{{c.active ? 'Deactivate' : 'Activate'}}</button>\\n                            </mat-menu>\\n                        </div>\\n                    </div>\\n                    \\n                    <div \\n                        class=\\\"card-text my-2\\\" \\n                        *ngIf=\\\"c.mdDetails != null; else noDetail\\\" \\n                        [innerHTML]=\\\"sanitize(c.mdDetails)\\\"\\n                        [class.campaign-body]=\\\"c.mdDetails != null\\\"\\n                    ></div>\\n                    <ng-template #noDetail>\\n                        <div \\n                            class=\\\"card-text font-italic text-muted my-2\\\"\\n                            [class.campaign-body]=\\\"c.mdDetails != null\\\"\\n                        >No details saved.</div>\\n                    </ng-template>\\n\\n                </div>\\n                <div class=\\\"card-footer d-flex bg-light\\\" [ngClass]=\\\"c.compensation != null ? 'justify-content-between' : 'justify-content-end'\\\">\\n                    <small class=\\\"font-italic text-dark\\\" *ngIf=\\\"c.compensation != null\\\">Compensation: ${{c.compensation}}</small>\\n                    <small class=\\\"font-italic\\\" [ngClass]=\\\"!c.active ? 'text-muted' : 'text-info'\\\">\\n                        {{c.active ? 'Active' : 'Inactive'}}\\n                    </small>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n</div>\\n\\n<vs-float-button\\n  mat-icon=\\\"add\\\"\\n  (callback)=\\\"addCampaign()\\\"\\n  [isOpen]=\\\"floatIsOpen\\\"\\n></vs-float-button>\\n\"","module.exports = \".campaign-tab-group {\\n  border: 1px solid #e8e8e8; }\\n\\n.campaign-tab-content {\\n  padding: 16px; }\\n\\n.campaigns-table .active {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto; }\\n\\n.active-table {\\n  width: 100%; }\\n\\n.campaign-body {\\n  height: 200px;\\n  overflow-y: auto; }\\n\"","import {Component, OnInit, Output} from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {NewCampaignDialogComponent} from '@app/campaigns/new-campaign-dialog/new-campaign-dialog.component';\nimport {EventEmitter} from 'events';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {User, ICampaign} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {MessageService} from '@app/message.service';\nimport {UserRole} from '@app/models/role.model';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CampaignFilters, CompOperator } from '@app/models/campaign-filters.model';\nimport { CampaignFilterDialogComponent } from '@app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component';\n\ninterface DataStore {\n    campaigns: ICampaign[];\n}\n\n@Component({\n    selector: 'app-campaigns',\n    templateUrl: './campaigns.component.html',\n    styleUrls: ['./campaigns.component.scss']\n})\nexport class CampaignsComponent implements OnInit {\n    private readonly defaultFilter:CampaignFilters = {\n        activeStatus: 'all',\n        compOperator: CompOperator.Equals,\n        compensation: null,\n        location: { name: 'Michigan', abbreviation: 'MI' }\n    }   \n    filter:CampaignFilters;\n    filterActive:boolean;\n    numFilters:number = 0;\n    store:DataStore = {} as DataStore;\n    activeTab: number;\n    tableData: ICampaign[];\n\n    activeTableColumns = ['name', 'campaignId', 'active', 'createdAt', 'updatedAt'];\n    activeTableSource: ICampaign[] = [];\n    campaigns: Subject<ICampaign[]> = new Subject<ICampaign[]>();\n\n    inactiveTableSource: ICampaign[] = [];\n\n    floatBtnIsOpen$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    floatIsOpen: Observable<boolean>;\n\n    user: User;\n\n    constructor(\n        private dialog: MatDialog,\n        private session: SessionService,\n        private service: CampaignService,\n        private msg: MessageService,\n        private sanitizer:DomSanitizer\n    ) {\n        this.filter = this.defaultFilter;\n    }\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.userItem.subscribe((next: User) => {\n            if (next == null) return;\n            this.user = next;\n\n            // if the user isn't at least a company admin, then we are going to send them back to the page they\n            // were prior to reaching this point...\n            if (this.user.role.role < UserRole.companyAdmin)\n                this.session.navigateBack().then(result => {\n                    console.dir(result);\n                });\n\n            this.service\n                .getCampaigns(this.user.sessionUser.sessionClient, false)\n                .then((campaigns: ICampaign[]) => {\n                    this.store.campaigns = campaigns;\n                    this.campaigns.next(campaigns);\n                    this.session.hideLoader();\n\n                    // TODO: remove after restructuring\n                    this.tableData = campaigns;\n                    this.sortCampaignsByStatus();\n                    \n                })\n                .catch(this.msg.showWebApiError);\n        });\n\n        this.floatIsOpen = this.floatBtnIsOpen$.asObservable();\n    }\n\n    switchActiveStatus(item: ICampaign, index:number): void {\n        this.session.showLoader();\n        index = _.findIndex(this.store.campaigns, { campaignId:item.campaignId });\n        let pendingCampaign = this.store.campaigns[index];\n\n        pendingCampaign.active = !pendingCampaign.active;\n\n        this.service.saveCampaign(this.user.sessionUser.sessionClient, pendingCampaign.campaignId, pendingCampaign)\n            .then(updated => {\n                this.session.hideLoader();\n                this.store.campaigns.map(c => c.campaignId === item.campaignId ? updated : c);\n                this.campaigns.next(this.store.campaigns);\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    addCampaign(): void {\n        this.floatBtnIsOpen$.next(true);\n        // show dialog with form...\n        let ref = this.dialog.open(NewCampaignDialogComponent, {\n            width: '650px',\n            data: {\n                user: this.user\n            }\n        });\n\n        ref.afterClosed().subscribe((result: ICampaign) => {\n            this.floatBtnIsOpen$.next(false);\n            if (result == null) return;\n\n            // do whatever updates that need to happen right here after adding a new campaign\n            this.tableData.push(result);\n            this.sortCampaignsByStatus();\n            this.updateActiveTab();\n        });\n    }\n\n    editCampaign(item: ICampaign): void {\n        let ref = this.dialog.open(NewCampaignDialogComponent, {\n            width: '650px',\n            data: {\n                user: this.user,\n                campaign: item\n            }\n        });\n\n        ref.afterClosed().subscribe((result: ICampaign) => {\n            if (result == null) return;\n\n            for (let i = 0; i < this.tableData.length; i++) {\n                // if the campaign ids don't match, skip to the next iteration\n                if (this.tableData[i].campaignId != result.campaignId) continue;\n\n                this.tableData[i] = result;\n                this.sortCampaignsByStatus();\n                this.updateActiveTab();\n            }\n        });\n    }\n\n    setFilters():void {\n        this.dialog.open(CampaignFilterDialogComponent, {\n            width: '350px',\n            data: {\n                filter: this.filter\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if(result == null) return;\n            this.filter = result;\n            this.updateCampaignsByFilter();\n        });\n    }\n\n    updateCampaignsByFilter():void {\n        let result:ICampaign[];\n        this.numFilters = 0;\n\n        if(this.filter.activeStatus === 'all') {\n            result = this.store.campaigns;\n            this.numFilters++;\n        } else {\n\n            if(this.filter.activeStatus === 'active') {\n                result = _.filter(this.store.campaigns, (c:ICampaign) => {\n                    return c.active;\n                });\n                this.numFilters++;\n            } \n            \n            if (this.filter.activeStatus === 'inactive') {\n                result = _.filter(this.store.campaigns, (c:ICampaign) => {\n                    return !c.active;\n                });\n                this.numFilters++;\n            }\n\n        }\n\n        if(this.filter.compensation > 0) {\n            if(this.filter.compOperator == CompOperator.Equals) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation === this.filter.compensation;\n                });\n            } else if(this.filter.compOperator == CompOperator.GreaterThan) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation > this.filter.compensation;\n                });\n            } else if(this.filter.compOperator == CompOperator.GreaterThanEqualTo) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation >= this.filter.compensation;\n                });\n            } else if(this.filter.compOperator == CompOperator.LessThan) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation < this.filter.compensation;\n                });\n            } else if(this.filter.compOperator == CompOperator.LessThanEqualTo) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation <= this.filter.compensation;\n                });\n            }\n            this.numFilters++;\n        }\n\n        // if(this.filter.location != null) {\n            // add this... \n            // result = _.filter(result, (c:ICampaign) => {\n            //     return c.\n            // });\n        // }\n        if(result != null) this.campaigns.next(result);\n        this.filterActive = true;\n    }\n\n    clearFilters():void {\n        this.filterActive = false;\n        this.campaigns.next(this.store.campaigns);\n        this.filter = this.defaultFilter;\n        this.numFilters = 0;\n    }\n\n    sanitize(value:string):SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n\n    // PRIVATE METHODS\n\n    private sortCampaignsByStatus(): void {\n        this.activeTableSource = [];\n        this.inactiveTableSource = [];\n\n        for (let i = 0; i < this.tableData.length; i++) {\n            let item = this.tableData[i];\n            if (item.active) {\n                this.activeTableSource.push(item);\n            } else {\n                this.inactiveTableSource.push(item);\n            }\n        }\n\n        this.activeTableSource = _.sortBy(this.activeTableSource, ['name']);\n        this.inactiveTableSource = _.sortBy(this.inactiveTableSource, ['name']);\n    }\n\n    private updateActiveTab(): void {\n        if (this.activeTableSource.length === 0 && this.inactiveTableSource.length > 0) {\n            this.activeTab = 1;\n        } else if (this.inactiveTableSource.length === 0 && this.activeTableSource.length > 0) {\n            this.activeTab = 0;\n        }\n    }\n}\n\nconst TABLE_DATA: ICampaign[] = [\n    {campaignId: 1, clientId: 0, name: 'Consumers', active: true, createdAt: new Date(), updatedAt: new Date()},\n    {campaignId: 2, clientId: 0, name: 'DTE', active: true, createdAt: new Date(), updatedAt: new Date()},\n    {campaignId: 3, clientId: 0, name: 'Spark', active: false, createdAt: new Date(), updatedAt: new Date()}\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CampaignsComponent } from './campaigns.component';\nimport { MaterialModule } from '@app/material/material.module';\nimport { NewCampaignDialogComponent } from './new-campaign-dialog/new-campaign-dialog.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { QuillModule } from 'ngx-quill';\nimport { CampaignFilterDialogComponent } from './campaign-filter-dialog/campaign-filter-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    FabFloatBtnModule,\n    QuillModule\n  ],\n  declarations: [\n    CampaignsComponent,\n    NewCampaignDialogComponent,\n    CampaignFilterDialogComponent\n  ],\n  entryComponents: [\n    NewCampaignDialogComponent,\n    CampaignFilterDialogComponent\n  ]\n})\nexport class CampaignsModule { }\n","module.exports = \"\\n<div class=\\\"modal-header\\\">\\n    <h3 class=\\\"modal-title\\\">Add a Campaign</h3>\\n    <button type=\\\"button\\\" mat-icon-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">\\n        <mat-icon>clear</mat-icon>\\n    </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"saveCampaign()\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" />\\n                    <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n                        Please enter a name.\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-7 d-flex align-items-center\\\">\\n                <mat-checkbox hidden formControlName=\\\"active\\\">Active</mat-checkbox>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <mat-form-field>\\n                    <span matPrefix>$ &nbsp;</span>\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Compensation\\\" formControlName=\\\"compensation\\\" />\\n                    <mat-error *ngIf=\\\"form.get('compensation').hasError('pattern')\\\">\\n                        Please enter numbers only.\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <mat-accordion>\\n                    <mat-expansion-panel expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header>\\n                            <mat-panel-title>\\n                                Detail and Info\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n\\n                        <p class=\\\"font-italic text-muted\\\">\\n                            This is some brief information that describes the campaign and gives pertinent information to employees.\\n                        </p>\\n                        <quill-editor \\n                            [style]=\\\"{height: '200px'}\\\" \\n                            formControlName=\\\"mdDetails\\\" \\n                            (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                            [modules]=\\\"modules\\\"\\n                        ></quill-editor>\\n                    </mat-expansion-panel>\\n\\n                    <mat-expansion-panel>\\n                        <mat-expansion-panel-header>\\n                            <mat-panel-title>\\n                                How we get started\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n\\n                        <p class=\\\"font-italic text-muted\\\">\\n                            Onboarding. No problem. Let's tell the employees how to get it done. \\n                        </p>\\n                        <quill-editor \\n                            [style]=\\\"{height: '200px'}\\\" \\n                            formControlName=\\\"mdOnboarding\\\" \\n                            (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                            [modules]=\\\"modules\\\"\\n                        ></quill-editor>\\n                    </mat-expansion-panel>\\n\\n                    <mat-expansion-panel>\\n                        <mat-expansion-panel-header>\\n                            <mat-panel-title>\\n                                Additional Info\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n\\n                        <p class=\\\"font-italic text-muted\\\">\\n                            Is there additional information you need to share about this campaign? (Restrictions, permit necessities, etc)\\n                        </p>\\n                        <quill-editor \\n                            [style]=\\\"{height: '200px'}\\\" \\n                            formControlName=\\\"mdOther\\\" \\n                            (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                            [modules]=\\\"modules\\\"\\n                        ></quill-editor>\\n                    </mat-expansion-panel>\\n                </mat-accordion>\\n            </div>\\n        </div>\\n\\n        <!-- <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <p class=\\\"h6\\\">Details and Info</p>\\n                <p class=\\\"font-italic text-muted\\\">\\n                    This is some brief information that describes the campaign and gives pertinent information to employees.\\n                </p>\\n                <quill-editor \\n                    [style]=\\\"{height: '200px'}\\\" \\n                    formControlName=\\\"mdDetails\\\" \\n                    (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                    [modules]=\\\"modules\\\"\\n                ></quill-editor>\\n            </div>\\n        </div> -->\\n        <!-- <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <p class=\\\"h6\\\">How to get started</p>\\n                <p class=\\\"font-italic text-muted\\\">\\n                    Onboarding. No problem. Let's tell the employees how to get it done. \\n                </p>\\n                <quill-editor \\n                    [style]=\\\"{height: '200px'}\\\" \\n                    formControlName=\\\"mdOnboarding\\\" \\n                    (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                    [modules]=\\\"modules\\\"\\n                ></quill-editor>\\n            </div>\\n        </div> -->\\n        <!-- <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <p class=\\\"h6\\\">Additional Info</p>\\n                <p class=\\\"font-italic text-muted\\\">\\n                    Is there additional information you need to share about this campaign? (Restrictions, permit necessities, etc)\\n                </p>\\n                <quill-editor \\n                    [style]=\\\"{height: '200px'}\\\" \\n                    formControlName=\\\"mdOther\\\" \\n                    (onContentChanged)=\\\"quillContentChanged($event)\\\"\\n                    [modules]=\\\"modules\\\"\\n                ></quill-editor>\\n            </div>\\n        </div> -->\\n    </form>\\n    <div class=\\\"float-right\\\">\\n        <button mat-button type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"saveCampaign()\\\">Save</button>\\n    </div>\\n</div>\"","module.exports = \":host .mat-dialog-container {\\n  padding-top: 0.75rem !important; }\\n\"","import {Component, OnInit, Inject, ViewChild, OnChanges} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {User, ICampaign} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {MessageService} from '@app/message.service';\nimport { QuillEditorComponent } from 'ngx-quill';\n\ninterface DialogData {\n    user:User,\n    campaign:ICampaign\n}\n\n@Component({\n    selector: 'app-new-campaign-dialog',\n    templateUrl: './new-campaign-dialog.component.html',\n    styleUrls: ['./new-campaign-dialog.component.scss']\n})\nexport class NewCampaignDialogComponent implements OnInit {\n    user: User;\n    campaign: ICampaign;\n    form: FormGroup;\n    @ViewChild('editor') editor: QuillEditorComponent\n\n    // set to true if an existing campaign has been opened\n    hasExistingCampaign: boolean = false;\n    modules:any = {\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n            [{ 'font': [] }],\n            [{ 'color': [], 'background': [] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // headings\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }], // lists\n            [{ 'align': [] }],\n            ['blockquote'],\n            [{ 'indent': '-1'}, { 'indent': '+1' }], // indentations\n            ['link', 'image'] // media\n        ]\n    }\n\n    constructor(\n        public diagRef: MatDialogRef<NewCampaignDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private fb: FormBuilder,\n        private service: CampaignService,\n        private session: SessionService,\n        private msg: MessageService\n    ) {\n        this.hasExistingCampaign = this.data.campaign != null;\n\n        if (!this.hasExistingCampaign) {\n            this.createForm();\n            this.campaign = this.createEmptyCampaign();\n        } else {\n            this.campaign = data.campaign;\n            this.createForm(this.campaign);\n        }\n\n        this.user = this.data.user;\n    }\n\n    ngOnInit() {\n        this.session.loadTokenStorageItem();\n    }\n\n    onNoClick():void {\n        this.diagRef.close();\n    }\n\n    /**\n     * Save a new/existing campaign entity to the database.\n     *\n     */\n    saveCampaign(): void {\n        // If this dialog had an existing campaign passed to it when it opened\n        // we are going to skip checking if one exists, so that we don't get an error\n        // telling us we can't update.\n        if (this.hasExistingCampaign) {\n            this.campaign = this.prepareCampaign();\n\n            this.service\n                .saveCampaign(this.user.sessionUser.sessionClient, this.campaign.campaignId, this.campaign)\n                .then((updated: ICampaign) => {\n                    this.diagRef.close(updated);\n                })\n                .catch(this.msg.showWebApiError);\n        } else {\n            this.service\n                .checkCampaignNameAvailability(1, this.form.controls.name.value)\n                .then((exists: boolean) => {\n                    if (exists) {\n                        this.msg.addMessage('Name already exists.', 'dismiss', 6000);\n                        return;\n                    }\n\n                    this.campaign = this.prepareCampaign();\n\n                    // FINISH THE METHOD HERE TO SAVE THE NEW CAMPAIGN\n                    this.service\n                        .saveCampaign(this.user.sessionUser.sessionClient, null, this.campaign)\n                        .then(campaign => {\n                            this.diagRef.close(campaign);\n                        })\n                        .catch(this.msg.showWebApiError);\n                })\n                .catch(this.msg.showWebApiError);\n        }\n    }\n\n    cancel(): void {\n        this.diagRef.close(null);\n    }\n\n    quillContentChanged(event) {\n        // console.dir(this.form.value);\n    }\n\n    // PRIVATE METHODS\n\n    private prepareCampaign(): ICampaign {\n        const form = this.form.value;\n        return {\n            campaignId: this.campaign.campaignId || null,\n            clientId: this.user.sessionUser.sessionClient,\n            name: form.name,\n            active: form.active,\n            compensation: form.compensation,\n            mdDetails: form.mdDetails,\n            mdOnboarding: form.mdOnboarding,\n            mdOther: form.mdOther\n        };\n    }\n\n    private createForm(campaign: ICampaign = null): void {\n        this.form = this.fb.group({\n            name: this.fb.control(campaign == null ? '' : campaign.name, [Validators.required]),\n            active: this.fb.control(campaign == null ? true : campaign.active),\n            compensation: this.fb.control(campaign == null ? '' : campaign.compensation || '', [Validators.pattern(/(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/)]),\n            mdDetails: this.fb.control(campaign == null ? '' : campaign.mdDetails || ''),\n            mdOnboarding: this.fb.control(campaign == null ? '' : campaign.mdOnboarding || ''),\n            mdOther: this.fb.control(campaign == null ? '' : campaign.mdOther || '')\n        });\n    }\n\n    private createEmptyCampaign(): ICampaign {\n        return <ICampaign>{\n            campaignId: null,\n            clientId: null,\n            name: null,\n            active: true,\n            compensation: null,\n            mdDetails: null,\n            mdOnboarding: null,\n            mdOther: null\n        };\n    }\n}\n","module.exports = \"\\n\\n<div>\\n  <mat-card>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"save(f)\\\">\\n      <mat-card-header class=\\\"justify-content-between\\\">\\n        <mat-card-title>\\n          <h3>Organization Details</h3>\\n        </mat-card-title>\\n        <mat-slide-toggle\\n          [ngClass]=\\\"{'float-right': true, 'text-muted': !editMode, 'text-light': editMode}\\\"\\n          [checked]=\\\"editMode\\\"\\n          (change)=\\\"changeEditMode(f)\\\"\\n          [disabled]=\\\"f.touched\\\"\\n          color=\\\"primary\\\"\\n        ></mat-slide-toggle>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"flex-column\\\">\\n        <mat-form-field>\\n          <mat-label>Company Name</mat-label>\\n          <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"client.name\\\" matInput [disabled]=\\\"!editMode\\\" />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>Street Address</mat-label>\\n          <input type=\\\"text\\\" matInput [value]=\\\"client.street\\\" [disabled]=\\\"!editMode\\\" />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>City</mat-label>\\n          <input type=\\\"text\\\" matInput [value]=\\\"client.city\\\" [disabled]=\\\"!editMode\\\" />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>State</mat-label>\\n          <mat-select placeholder=\\\"State\\\" [disabled]=\\\"!editMode\\\" (change)=\\\"onStateChange($event)\\\" [(value)]=\\\"client.state\\\">\\n            <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">\\n              {{state}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"d-flex justify-content-between mb-0\\\">\\n        <button mat-button type=\\\"button\\\" *ngIf=\\\"editMode\\\" (click)=\\\"cancel(f)\\\">Cancel</button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" *ngIf=\\\"editMode\\\">Save</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card>\\n  <!-- <mat-card>\\n    <mat-card-header class=\\\"justify-content-between\\\">\\n      <mat-card-title>\\n        <h4>Settings</h4>\\n      </mat-card-title>\\n      <mat-slide-toggle\\n        [ngClass]=\\\"{'float-right': true, 'text-muted': !editOptions, 'text-light': editOptions}\\\"\\n        [checked]=\\\"editOptions\\\"\\n        (change)=\\\"changeOptionsMode()\\\"\\n        color=\\\"primary\\\"\\n      ></mat-slide-toggle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-checkbox\\n        [(ngModel)]=\\\"client.options.hasOnboarding\\\"\\n        matTooltip=\\\"Enables the onboarding feature on the user's profile.\\\"\\n        [matTooltipPosition]=\\\"tooltipPosition\\\"\\n        [disabled]=\\\"!editOptions\\\"\\n      >Onboarding</mat-checkbox>\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"d-flex justify-content-end mx-1 mb-0\\\">\\n      <button\\n        mat-raised-button\\n        type=\\\"button\\\"\\n        color=\\\"primary\\\"\\n        *ngIf=\\\"editOptions\\\"\\n        (click)=\\\"saveOptions()\\\"\\n      >Save</button>\\n    </mat-card-actions>\\n  </mat-card> -->\\n  <mat-card class=\\\"mat-elevation-z8\\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h4>Sale Status Configuration</h4>\\n      </mat-card-title>\\n      <mat-card-subtitle>\\n        The following is your organization's sale statuses. These should be updated to be used on your invoices based on the campaigns\\n        you work with.\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n\\n    <mat-card-content class=\\\"status-table\\\">\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"showAddSaleStatusDialog()\\\" color=\\\"primary\\\" class=\\\"ml-4 mr-2\\\">\\n        <mat-icon>add</mat-icon> Add\\n      </button>\\n      <mat-checkbox [(ngModel)]=\\\"showAllStatuses\\\" (change)=\\\"filterStatuses()\\\" [disabled]=\\\"!hasInactiveStatuses\\\" class=\\\"mx-2 mt-1\\\">Show All</mat-checkbox>\\n      <table mat-table [dataSource]=\\\"saleStatuses$\\\">\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayColumns\\\"></tr>\\n\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef>Name</th>\\n          <td mat-cell *matCellDef=\\\"let item\\\">\\n            {{item.name}}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"isActive\\\">\\n          <th mat-header-cell *matHeaderCellDef>Active</th>\\n          <td mat-cell *matCellDef=\\\"let item\\\">\\n            <mat-checkbox [(ngModel)]=\\\"item.isActive\\\" (change)=\\\"updateActiveStatus(item)\\\">Active</mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n      </table>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"mat-form-field {\\n  display: block; }\\n\\nmat-card {\\n  margin: 1rem 0 1rem 0; }\\n\\n:host ::ng-deep .mat-slide-toggle-thumb {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n:host ::ng-deep .mat-slide-toggle-thumb::before {\\n    font-size: .8rem;\\n    font-family: \\\"Material Icons\\\";\\n    content: \\\"\\\\e3c9\\\"; }\\n\\n.status-table table {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, IClient, IClientOption, SaleStatus } from '../models/index';\nimport { Validators, NgForm, FormGroup, FormBuilder } from '@angular/forms';\nimport { MessageService } from '../message.service';\nimport { ClientService } from './client.service';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\nimport { UserService } from '../user-features/user.service';\nimport { SessionService } from '@app/session.service';\nimport { MatDialog } from '@angular/material';\nimport { AddSaleStatusDialog } from '@app/client-information/dialogs/add-sale-status.component';\n\n@Component({\n  selector: 'app-client-information',\n  templateUrl: './client-information.component.html',\n  styleUrls: ['./client-information.component.scss']\n})\nexport class ClientInformationComponent implements OnInit {\n  user: User;\n  clients: IClient[];\n  client: IClient;\n  editMode: boolean;\n  editOptions: boolean;\n  displayColumns:string[] = ['name', 'isActive'];\n  saleStatusForm:FormGroup;\n  saleStatuses$:BehaviorSubject<SaleStatus[]> = new BehaviorSubject([]);\n\n  tooltipPosition: string = 'after';\n\n  allStatuses:SaleStatus[];\n  showAllStatuses:boolean;\n  hasInactiveStatuses:boolean;\n\n  states: string[] = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'];\n\n  constructor(\n    private msg: MessageService,\n    private clientService: ClientService,\n    private userService: UserService,\n    private session:SessionService,\n    private fb:FormBuilder,\n    private dailog:MatDialog\n  ) {\n    this.client = this.setEmptyClient();\n  }\n\n  ngOnInit() {\n    this.session.loadTokenStorageItem();\n    this.userService.user.subscribe((next:User) => {\n      if(next == null) return;\n      this.user = next;\n      this.client = this.user.sessionUser.client;\n      this.clients = this.user.clients;\n\n      this.clientService.getSaleStatuses(this.client.clientId)\n        .subscribe(statuses => {\n          this.allStatuses = statuses;\n          this.evaluateShowAllStatus();\n          const activeStatuses = _.filter(statuses, (s:SaleStatus) => { return s.isActive; });\n          this.saleStatuses$.next(activeStatuses);\n          this.createSaleStatusForm();\n\n          let defaults:SaleStatus[] = [];\n          _.forEach(statuses, (s:SaleStatus) => {\n            if(s.clientId > 0) return;\n            defaults.push(s);\n          });\n\n          if(defaults.length > 0) {\n            this.clientService.setDefaultStatuses(this.client.clientId, defaults)\n              .subscribe(results => {\n                this.saleStatuses$.next(results);\n              });\n          }\n        });\n    });\n  }\n\n  filterStatuses():void {\n    const filteredStatusList = this.showAllStatuses\n      ? this.allStatuses\n      : _.filter(this.allStatuses, (s:SaleStatus) => { return s.isActive; });\n    this.saleStatuses$.next(filteredStatusList);\n  }\n\n  save(f: NgForm) {\n    if(f.valid) {\n      if(this.client.clientId > 0) {\n        this.clientService.updateClient(this.client);\n        this.editMode = !this.editMode;\n        if(this.client.clientId > 0) f.reset();\n      }\n    }\n  }\n\n  cancel(f: NgForm) {\n    this.client = this.user.sessionUser.client;\n    this.editMode = !this.editMode;\n    f.reset();\n  }\n\n  changeEditMode(f: NgForm): void {\n    if(!f.dirty) {\n      this.editMode = !this.editMode;\n    } else {\n      f.reset();\n    }\n  }\n\n  onStateChange($evt) {\n    this.client.state = $evt.value;\n  }\n\n  changeOptionsMode() {\n    this.editOptions = !this.editOptions;\n  }\n\n  saveOptions() {\n    this.clientService.updateClientOptions(this.user.sessionUser.client.options);\n  }\n\n  updateActiveStatus(saleStatus:SaleStatus):void {\n    this.clientService.updateSaleStatus(saleStatus.clientId, saleStatus)\n      .subscribe(item => {\n        this.msg.addMessage('Successfully updated!', 'dismiss', 2500);\n\n        this.allStatuses.map(s => {\n          if(s.saleStatusId != item.saleStatusId) return s;\n          s = item;\n          return s;\n        });\n        this.evaluateShowAllStatus();\n      });\n  }\n\n  showAddSaleStatusDialog():void {\n    const ref = this.dailog.open(AddSaleStatusDialog, {\n      width: '400px'\n    });\n\n    ref.afterClosed().subscribe(result => {\n      if(result == null) return;\n      const dto:SaleStatus = {\n        saleStatusId: null,\n        name: result.name,\n        isActive: result.isActive,\n        clientId: this.client.clientId\n      };\n      this.clientService.createSaleStatus(this.client.clientId, dto)\n        .subscribe(result => {\n          this.msg.addMessage('Successfully saved status.', 'dismiss', 3000);\n          this.allStatuses.push(result);\n          this.allStatuses = _.sortBy(this.allStatuses, ['name']);\n          this.evaluateShowAllStatus();\n        });\n    });\n  }\n\n  private evaluateShowAllStatus():void {\n    this.hasInactiveStatuses = _.find(this.allStatuses, (s:SaleStatus) => { return !s.isActive; }) != null;\n    this.showAllStatuses = this.hasInactiveStatuses\n      ? this.showAllStatuses\n      : false;\n  }\n\n\n  private setEmptyClient():IClient {\n    return {\n      clientId: 0,\n      active: false,\n      city: null,\n      name: null,\n      options: <IClientOption>{\n        clientId: 0,\n        hasOnboarding: false,\n        optionsId: 0\n      },\n      phone: null,\n      state: null,\n      street: null,\n      taxid: null,\n      zip: null\n    }\n  }\n\n  private createSaleStatusForm():FormGroup {\n    const statuses = this.saleStatuses$.getValue();\n    let formArray:FormGroup[] = [];\n    if(statuses.length > 0) {\n      statuses.forEach(s => {\n        formArray.push(this.createSaleFormGroup(s));\n      });\n      formArray.push(this.createSaleFormGroup());\n    } else {\n      formArray.push(this.createSaleFormGroup());\n    }\n    return this.fb.group({\n      statuses: formArray\n    });\n  }\n\n  private createSaleFormGroup(status:SaleStatus = null):FormGroup {\n    status = status == null\n      ? { saleStatusId: null, name: null, isActive: false, clientId: null }\n      : status;\n    return this.fb.group({\n      name: this.fb.control(status.name || '', [Validators.required]),\n      isActive: this.fb.control(status.isActive)\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { User, IClient, IClientOption, ICampaign, SaleStatus } from '../models';\nimport { MessageService } from '../message.service';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user-features/user.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { SessionService } from '../session.service';\n\ninterface DataStore {\n  client: IClient,\n  options: IClientOption,\n  campaigns: ICampaign[]\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n  private url: string;\n  client: Observable<IClient>;\n  private client$: BehaviorSubject<IClient>;\n  options: Observable<IClientOption>;\n  private options$: BehaviorSubject<IClientOption>;\n  campaigns: Observable<ICampaign[]>;\n  private campaigns$: BehaviorSubject<ICampaign[]>;\n\n  private user: User;\n\n  dataStore: DataStore = {\n    client: <IClient>{},\n    options: <IClientOption>{},\n    campaigns: <ICampaign[]>[]\n  };\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private auth: AuthService,\n    private userService: UserService,\n    private msg: MessageService,\n    private session:SessionService\n  ) {\n    this.url = this.auth.apiUrl;\n    this.client$ = new BehaviorSubject<IClient>(null);\n    this.options$ = new BehaviorSubject<IClientOption>(null);\n    this.campaigns$ = new BehaviorSubject<ICampaign[]>(null);\n    this.client = this.client$.asObservable();\n    this.options = this.options$.asObservable();\n    this.campaigns = this.campaigns$.asObservable();\n\n    this.userService.user.subscribe((next: User) => {\n      if(next == null) return;\n      this.user = next;\n\n      // store client\n      this.dataStore.client = next.sessionUser.client;\n      this.client$.next(this.dataStore.client);\n\n      // store client options\n      this.dataStore.options = next.sessionUser.client.options;\n      this.options$.next(this.dataStore.options);\n\n      // this.loadCampaigns();\n    });\n  }\n\n  updateClient(client: IClient): void {\n    this.http.post(this.url + 'api/clients/' + client.clientId, client)\n      .subscribe((data: IClient) => {\n        this.dataStore.client = data;\n        this.client$.next(Object.assign({}, this.dataStore.client));\n      },\n      err => console.dir(err)\n    );\n  }\n\n  loadClientOptions(): void {\n    this.http.get(this.url + 'api/clients/' + this.user.sessionUser.sessionClient)\n      .subscribe((options: IClientOption) => {\n        this.dataStore.options = options;\n        this.options$.next(this.dataStore.options);\n      },\n      err => console.dir(err)\n    );\n  }\n\n  updateClientOptions(options: IClientOption): void {\n    this.http.post(this.url + 'api/clients/' + options.clientId + '/client-options', options)\n      .subscribe((next: IClientOption) => {\n        this.dataStore.options = next;\n        this.dataStore.client.options = this.dataStore.options;\n        this.options$.next(this.dataStore.options);\n        this.client$.next(this.dataStore.client);\n        this.user.sessionUser.client = this.dataStore.client;\n        this.userService.cacheUser(this.user);\n      },\n      err => console.dir(err)\n    );\n  }\n\n  loadCampaigns(): void {\n    this.http.get(this.url + 'api/clients/' + this.user.sessionUser.sessionClient + '/campaigns')\n      .subscribe((next: ICampaign[]) => {\n        this.dataStore.campaigns = next;\n        this.campaigns$.next(this.dataStore.campaigns);\n      });\n  }\n\n  getSaleStatuses(clientId:number):Observable<SaleStatus[]> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses`;\n    return this.http.get<SaleStatus[]>(url);\n  }\n\n  updateSaleStatus(clientId:number, dto:SaleStatus):Observable<SaleStatus> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses/${dto.saleStatusId}`;\n    return this.http.post<SaleStatus>(url, dto);\n  }\n\n  setDefaultStatuses(clientId:number, dtoList:SaleStatus[]):Observable<SaleStatus[]> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses/all`;\n    return this.http.post<SaleStatus[]>(url, dtoList);\n  }\n\n  createSaleStatus(clientId:number, dto:SaleStatus):Observable<SaleStatus> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses`;\n    return this.http.post<SaleStatus>(url, dto);\n  }\n\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h3 class=\\\"modal-title\\\">Add Sale Status</h3>\\n    <span class=\\\"clickable float-right\\\">\\n        <i class=\\\"material-icons\\\" (click)=\\\"onNoClick()\\\">clear</i>\\n    </span>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n        <mat-form-field class=\\\"wp-100\\\" [hideRequiredMarker]=\\\"true\\\">\\n        <input matInput placeholder=\\\"Status Description\\\" formControlName=\\\"name\\\" required />\\n        </mat-form-field>\\n    </form>\\n    <div class=\\\"float-right\\\">\\n        <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n        <button mat-raised-button [mat-dialog-close]=\\\"form.value\\\" color=\\\"primary\\\" [disabled]=\\\"form.invalid || form.pristine\\\">Save</button>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ClientService } from \"@app/client-information/client.service\";\nimport { SaleStatus } from \"@app/models\";\n\ninterface DialogData {\n  existing?:SaleStatus\n}\n\n@Component({\n  selector: 'add-sale-status-dialog',\n  templateUrl: './add-sale-status.component.html',\n  styleUrls: ['./add-sale-status.component.scss']\n})\nexport class AddSaleStatusDialog implements OnInit {\n\n  form:FormGroup;\n\n  constructor(\n    public ref:MatDialogRef<AddSaleStatusDialog>,\n    @Inject(MAT_DIALOG_DATA) public data:DialogData,\n    private fb:FormBuilder,\n    private clientService:ClientService\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  onNoClick():void {\n    this.ref.close();\n  }\n\n  private createForm():void {\n    this.form = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      isActive: this.fb.control(true)\n    });\n  }\n\n  private resetForm():void {\n    this.form.patchValue({\n      name: null,\n      isActive: true\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div>\\n  <h2 mat-dialog-title>Current Client</h2>\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <mat-select [(ngModel)]=\\\"user.sessionUser.sessionClient\\\">\\n        <mat-option *ngFor=\\\"let c of data.clients\\\" [value]=\\\"c.clientId\\\">{{c.name}}</mat-option>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"clientControl.hasError('required')\\\">Please choose a client.</mat-error>\\n    </mat-form-field>\\n  </mat-dialog-content>\\n  <mat-dialog-actions class=\\\"d-flex justify-content-between\\\">\\n    <button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClientChange()\\\">Change Client</button>\\n  </mat-dialog-actions>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport { AuthService } from '../auth.service';\nimport { User, IClient } from '../models/index';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { UserService } from '../user-features/user.service';\n\n@Component({\n  selector: 'app-client-selector',\n  templateUrl: './client-selector.component.html',\n  styleUrls: ['./client-selector.component.css']\n})\nexport class ClientSelectorComponent implements OnInit {\n  user: User;\n  clientControl: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(\n    public dialogRef: MatDialogRef<ClientSelectorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: User,\n    public auth: AuthService,\n    public userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.userService.user.subscribe((next: User) => {\n      this.user = next;\n    });\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  onClientChange() {\n    this.userService.updateUser(this.user, null);\n    this.cancel();\n  }\n\n  compareFn: ((f1: any, f2: any) => boolean)|null = this.compareByValue;\n\n  compareByValue(f1: any, f2: any) {\n    return f1 && f2 && f1.clientId === f2.clientId;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { IAgent, User } from '@app/models';\n\nimport { environment } from 'environments/environment';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RoleType } from '@app/models/role.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgentsService {\n\n  private api = environment.apiUrl + 'api/';\n\n  constructor(private http:HttpClient) { }\n\n  /**\n   * Get all agents by active status.\n   *\n   * @param activeOnly\n   */\n  getAgents(activeOnly:boolean = true):Promise<IAgent[]> {\n    return this.http.get(this.api + 'agents/statuses/' + activeOnly)\n      .toPromise()\n      .then((agents:IAgent[]) => {\n        return agents;\n      })\n      .catch(e => {\n        console.dir(e);\n        return null;\n      });\n  }\n\n  /**\n   * Return a list of agents by the client id.\n   * \n   * @param clientId \n   */\n  getAgentsByClient(clientId:number):Observable<User[]> {\n    const url = `${this.api}clients/${clientId}/agents`;\n    return this.http.get<User[]>(url)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * updates an agent entity\n   *\n   * @param agent\n   */\n  updateAgent(agent:IAgent):Promise<IAgent> {\n    return this.http.post(this.api + 'agents/' + agent.agentId, agent)\n      .toPromise()\n      .then((agent:IAgent) => {\n        return agent;\n      });\n  }\n\n  /**\n   * Return an array of sales pairings entities by agent id.\n   *\n   * @param agentId\n   * @param clientId\n   */\n  getAgentSalesPairings(agentId:number, clientId:number):Promise<ISalesPairing[]> {\n    return this.http.get(this.api + 'clients/' + clientId + '/agents/' + agentId + '/sales-pairings')\n      .toPromise()\n      .then((salesPairings:ISalesPairing[]) => {\n        return salesPairings;\n      });\n  }\n\n  /**\n   * Save a list of agent sales pairings.\n   *\n   * @param pairings\n   * @param agentId\n   */\n  saveAgentSalesPairings(pairings:ISalesPairing[], agentId:number):Promise<ISalesPairing[]> {\n    return this.http.post(this.api + 'agents/' + agentId + '/sales-pairings', { pairings: pairings })\n      .toPromise()\n      .then((pairings:ISalesPairing[]) => {\n        return pairings;\n      });\n  }\n\n  deleteAgentSalesPairings(pairingId:number):Promise<void> {\n    return this.http.delete(this.api + 'sales-pairings/' + pairingId)\n      .toPromise()\n      .then(() => { return; });\n  }\n\n  getRoleTypes(includeInactive:boolean = false):Observable<RoleType[]> {\n      return this.http.get<RoleType[]>(`${this.api}role-types?inactive=${includeInactive}`);\n  }\n\n  private handleError(error:HttpErrorResponse) {\n    if(error.error instanceof ErrorEvent) {\n      // client side network error\n      console.log('Error occurred: ', error.error.message || error.message);\n    } else {\n      // backend returned server error\n      console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `)\n    }\n    return throwError('There was a network error. Please try again.');\n  }\n}\n","module.exports = \"\\n<mat-horizontal-stepper  #addAgent>\\n  <mat-step [stepControl]=\\\"userForm\\\">\\n    <form [formGroup]=\\\"userForm\\\">\\n      <ng-template matStepLabel>User Login Info</ng-template>\\n\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" required />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required (blur)=\\\"checkUsernameAvailability()\\\" />\\n        <mat-error *ngIf=\\\"userForm.get('username').hasError('unavailable')\\\">\\n            Sorry, that username is unavailable. \\n            <ng-container *ngIf=\\\"suggestedUsername.length && suggestedUsername != attemptedUsername\\\">\\n                What about <strong>{{suggestedUsername}}</strong>?\\n            </ng-container> \\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required #emailInput />\\n        <mat-error *ngIf=\\\"userForm.get('email').hasError('notUnique')\\\">\\n            Users cannot share email addresses. This one has already been used. Please try again. \\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"clickable\\\" (click)=\\\"copyPasswordText(userForm.value.password)\\\">\\n        <input matInput\\n          class=\\\"clickable\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Random Password\\\"\\n          formControlName=\\\"password\\\"\\n          readonly\\n        />\\n        <mat-icon matSuffix>filter_none</mat-icon>\\n        <mat-hint align=\\\"start\\\">\\n          Click to Copy\\n        </mat-hint>\\n      </mat-form-field>\\n      <div class=\\\"d-flex justify-content-end pt-4\\\">\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"detailForm\\\">\\n    <form [formGroup]=\\\"detailForm\\\">\\n      <ng-template matStepLabel>Detail Info</ng-template>\\n\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Street\\\" formControlName=\\\"street\\\" required />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Street 2\\\" formControlName=\\\"street2\\\" />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\" required />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\" required>\\n          <mat-option *ngFor=\\\"let s of states\\\" [value]=\\\"s.abbreviation\\\">{{s.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Postal Code\\\" formControlName=\\\"zip\\\" required />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput\\n          [matDatepicker]=\\\"birthDate\\\"\\n          placeholder=\\\"Date of Birth\\\"\\n          formControlName=\\\"birthDate\\\"\\n          required\\n        />\\n        <mat-datepicker-toggle matSuffix [for]=\\\"birthDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #birthDate></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput\\n          type=\\\"text\\\"\\n          placeholder=\\\"Phone No\\\"\\n          (keypress)=\\\"phoneNoKeyPress($event)\\\"\\n          formControlName=\\\"phone\\\"\\n          required\\n        />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Social Security Number\\\" formControlName=\\\"ssn\\\" />\\n        <mat-hint align=\\\"start\\\" class=\\\"text-muted font-italic\\\">Optional</mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput\\n          type=\\\"text\\\"\\n          placeholder=\\\"Bank Routing\\\"\\n          formControlName=\\\"bankRouting\\\"\\n          (keyup)=\\\"validateVerifyRouting()\\\"\\n        />\\n        <mat-hint align=\\\"start\\\" class=\\\"text-muted font-italic\\\">Optional</mat-hint>\\n      </mat-form-field>\\n      <mat-form-field [hidden]=\\\"!(detailForm.value.bankRouting > 0)\\\">\\n        <input matInput\\n          type=\\\"text\\\"\\n          placeholder=\\\"Verify Routing\\\"\\n          formControlName=\\\"verifyRouting\\\"\\n          [required]=\\\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\\\"\\n          (keyup)=\\\"compareRouting()\\\"\\n        />\\n        <mat-error *ngIf=\\\"detailForm.get('verifyRouting').getError('notEqual')\\\">\\n          Routing numbers must match.\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput\\n          type=\\\"text\\\"\\n          placeholder=\\\"Bank Account\\\"\\n          formControlName=\\\"bankAccount\\\"\\n          [required]=\\\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\\\"\\n          (keyup)=\\\"validateVerifyAccount()\\\"\\n        />\\n        <mat-hint\\n          align=\\\"start\\\"\\n          class=\\\"text-muted font-italic\\\"\\n          [hidden]=\\\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\\\"\\n        >Optional</mat-hint>\\n      </mat-form-field>\\n      <mat-form-field [hidden]=\\\"!(detailForm.value.bankAccount > 0)\\\">\\n        <input matInput\\n          type=\\\"text\\\"\\n          placeholder=\\\"Verify Account\\\"\\n          formControlName=\\\"verifyAccount\\\"\\n          [required]=\\\"detailForm.value.bankAccount > 0 && detailForm.get('bankAccount').valid\\\"\\n          (keyup)=\\\"compareAccounts()\\\"\\n        />\\n        <mat-error *ngIf=\\\"detailForm.get('verifyAccount').getError('notEqual')\\\">\\n          Account numbers must match.\\n        </mat-error>\\n      </mat-form-field>\\n      <div class=\\\"d-flex justify-content-between pt-4\\\">\\n        <button mat-button matStepperPrevious>Previous</button>\\n        <button mat-button matStepperNext (click)=\\\"test()\\\">Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"agentForm\\\">\\n    <form [formGroup]=\\\"agentForm\\\">\\n      <ng-template matStepLabel>Permissions</ng-template>\\n\\n      <mat-form-field class=\\\"pt-3\\\">\\n          <mat-select placeholder=\\\"User Role\\\" [formControl]=\\\"roleType\\\" required>\\n              <mat-option *ngFor=\\\"let type of roleTypes\\\" [value]=\\\"type.id\\\">\\n                  {{type.type | titlecase}}\\n              </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"roleType.hasError('required')\\\">\\n              Please select a role for the new user.\\n          </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Manager\\\" formControlName=\\\"managerId\\\" required>\\n          <mat-option *ngFor=\\\"let m of managers\\\" [value]=\\\"m.agentId\\\">\\n            {{m.firstName}} {{m.lastName}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-hint>Who will the agent report to?</mat-hint>\\n      </mat-form-field>\\n\\n      <mat-checkbox\\n        formControlName=\\\"isManager\\\"\\n        matTooltip=\\\"Is this agent a manager?\\\"\\n      >Enable Manager Access</mat-checkbox>\\n\\n      <mat-divider></mat-divider>\\n\\n      <div class=\\\"text-muted font-sm font-italic mt-4\\\">\\n        Sales ID(s) can be added by saving the new agent and then clicking <span class=\\\"font-weight-bold\\\">edit</span> on\\n        their agent card after this dialog is closed.\\n      </div>\\n    </form>\\n    <div class=\\\"d-flex justify-content-between pt-4\\\">\\n      <button mat-button matStepperPrevious>Previous</button>\\n      <button mat-button (click)=\\\"saveNewUserAgentEntity()\\\">Save</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\"","module.exports = \"form {\\n  min-width: 200px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\nmat-form-field {\\n  width: 100%; }\\n\"","import {Component, Inject, OnInit, ViewChildren, QueryList, AfterContentInit, AfterContentChecked, AfterViewChecked, ViewChild, ElementRef} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA, MatInput} from '@angular/material';\nimport {User, IUserDetail, IAgent} from '@app/models';\nimport {FormGroup, FormBuilder, Validators, FormControl, NgControl} from '@angular/forms';\nimport {IState, States} from '@app/shared/models/state.model';\nimport {MessageService} from '@app/message.service';\nimport {AgentsService} from '@app/core/agents/agents.service';\n\nimport * as _ from 'lodash';\nimport {UserService} from '@app/user-features/user.service';\nimport {SessionService} from '@app/session.service';\nimport { catchError } from 'rxjs/operators';\nimport { RoleType } from '@app/models/role.model';\nimport { AgentService } from '@app/agent/agent.service';\nimport { Observable, of } from 'rxjs';\nimport { ValidatorError, ValidatorErrorDetail, LaravelErrorResponse } from '@app/models/validator-error.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ninterface IKeyValue {\n    key: string | number;\n    value: any;\n}\n\ninterface DataDialog {\n    user: User;\n}\n\n@Component({\n    selector: 'add-agent-dialog',\n    templateUrl: './add-agent.component.html',\n    styleUrls: ['./add-agent.component.scss']\n})\nexport class AddAgentDialogComponent implements OnInit {\n    user: User;\n    states: IState[];\n    userEntity: User;\n    detailEntity: IUserDetail;\n    agentEntity: IAgent;\n    userForm: FormGroup;\n    detailForm: FormGroup;\n    agentForm: FormGroup;\n    roleType:FormControl;\n\n    verifyAccount: number = null;\n    managers: IAgent[];\n    roleTypes:RoleType[];\n    usernameTaken:boolean = false;\n    attemptedUsername:string;\n    suggestedUsername:string;\n\n    @ViewChildren(MatInput) inputs:QueryList<MatInput>;\n\n    constructor(\n        public ref: MatDialogRef<AddAgentDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DataDialog,\n        private fb: FormBuilder,\n        private msg: MessageService,\n        private service:AgentService,\n        private agentsService: AgentsService,\n        private userService: UserService,\n        private session: SessionService\n    ) {\n        this.user = this.data.user;\n        this.states = States.$get();\n    }\n\n    ngOnInit() {\n        this.agentsService.getRoleTypes(true)\n            .subscribe(roleTypes => this.roleTypes = roleTypes);\n\n        this.createUserForm();\n        this.createDetailForm();\n        this.createAgentForm();\n        this.createRoleTypeForm();\n\n        // DO SOME MORE STUFF\n        this.agentsService\n            .getAgents()\n            .then(agents => {\n                this.managers = _.filter(agents, (a: IAgent) => {\n                    return a.isManager;\n                });\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    saveNewUserAgentEntity(): void {\n        if (this.userForm.invalid || this.detailForm.invalid || this.agentForm.invalid) return;\n\n        this.session.showLoader();\n\n        this.userEntity = {\n            firstName: this.userForm.value.firstName,\n            lastName: this.userForm.value.lastName,\n            username: this.userForm.value.username,\n            email: this.userForm.value.email,\n            password: this.userForm.value.password,\n            active: true\n        };\n\n        this.detailEntity = {\n            street: this.detailForm.value.street,\n            street2: this.detailForm.value.street2,\n            city: this.detailForm.value.city,\n            state: this.detailForm.value.state,\n            zip: this.detailForm.value.zip,\n            ssn: this.detailForm.value.ssn,\n            phone: this.detailForm.value.phone,\n            birthDate: this.detailForm.value.birthDate,\n            bankRouting: this.detailForm.value.bankRouting,\n            bankAccount: this.detailForm.value.bankAccount\n        };\n\n        this.agentEntity = {\n            firstName: this.userForm.value.firstName,\n            lastName: this.userForm.value.lastName,\n            managerId: this.agentForm.value.managerId,\n            isManager: this.agentForm.value.isManager\n        };\n\n        let role = this.roleType.value;\n\n        this.userService\n            .saveNewUserAgentEntity(this.userEntity, this.agentEntity, this.detailEntity, this.user.sessionUser.sessionClient, role)\n            .pipe(\n                catchError((resp:LaravelErrorResponse, caught:Observable<boolean>) => {\n                    let keys = Object.keys(resp.error.errors);\n                    let errorDisplaymsg:string = 'Errors: ';\n\n                    keys.forEach(key => {\n                        let propErrors:string[] = resp.error.errors[key];\n                        if(!_.isArray(propErrors)) return;\n                        propErrors.forEach((pe:string, i:number) => {\n                            errorDisplaymsg += `(${i + 1}) ${pe}`;\n                        });\n\n                        if(key == 'email') \n                            this.userForm.controls.email.setErrors({ notUnique: true });\n                    });\n\n                    this.msg.addMessage(errorDisplaymsg, 'dismiss');\n\n                    return of(false);\n                })\n            )\n            .subscribe(result => {\n                if(!result) return;\n                this.msg.addMessage('User added!', 'dismiss', 6000);\n                this.ref.close(result);\n            });\n    }\n\n    close(): void {\n        this.ref.close(this.data);\n    }\n\n    copyPasswordText(copy: string): void {\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = copy;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n\n        this.msg.addMessage('Password copied to your clipboard!', 'dismiss', 6000);\n    }\n\n    private createUserForm(): void {\n        let pw = this.makeUpperCaseRandomLetter(\n            Math.random()\n                .toString(36)\n                .slice(-8)\n        );\n\n        this.userForm = this.fb.group({\n            firstName: this.fb.control('', [Validators.required]),\n            lastName: this.fb.control('', [Validators.required]),\n            username: this.fb.control('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\n            email: this.fb.control('', [Validators.required, Validators.email]),\n            password: this.fb.control(pw, [Validators.required])\n        });\n    }\n\n    private makeUpperCaseRandomLetter(pw: string): string {\n        let kv = this.getRandomCharKeyValue(pw);\n        if (!/^[a-zA-Z]+$/.test(kv.value)) this.makeUpperCaseRandomLetter(pw);\n        kv.value = kv.value.toUpperCase();\n        return this.replaceAt(pw, +kv.key, kv.value);\n    }\n\n    private getRandomCharKeyValue(pw: string): IKeyValue {\n        let min = 0;\n        let max = pw.length - 1;\n        let key = Math.floor(Math.random() * (max - min + 1)) + min;\n        return {key: key, value: pw.charAt(key)};\n    }\n\n    private replaceAt(original: string, index: number, replacement: string): string {\n        return original.substr(0, index) + replacement + original.substr(index + replacement.length);\n    }\n\n    private createDetailForm(): void {\n        this.detailForm = this.fb.group({\n            street: this.fb.control('', [Validators.required]),\n            street2: this.fb.control('', []),\n            city: this.fb.control('', [Validators.required]),\n            state: this.fb.control('', [Validators.required]),\n            zip: this.fb.control('', [Validators.required, Validators.pattern(/^\\d{5}?$/)]),\n            ssn: this.fb.control('', [Validators.pattern(/^\\d{3}-?\\d{2}-?\\d{4}$/)]),\n            phone: this.fb.control('', [Validators.required, Validators.pattern(/^\\d{10}?$/)]),\n            birthDate: this.fb.control('', [Validators.required]),\n            bankRouting: this.fb.control('', []),\n            verifyRouting: this.fb.control('', []),\n            bankAccount: this.fb.control('', []),\n            verifyAccount: this.fb.control('', []),\n            saleOneId: this.fb.control('', []),\n            saleOneCampaignId: this.fb.control('', []),\n            saleTwoId: this.fb.control('', []),\n            saleTwoCampaignId: this.fb.control('', []),\n            saleThreeId: this.fb.control('', []),\n            saleThreeCampaignId: this.fb.control('', [])\n        });\n    }\n\n    test(): void {\n        // console.dir(this.detailForm);\n    }\n\n    validateVerifyAccount(): void {\n        if (this.detailForm.value.bankAccount > 0 && this.detailForm.controls.bankAccount.valid)\n            this.detailForm.controls.verifyAccount.setValidators(Validators.required);\n    }\n\n    validateVerifyRouting(): void {\n        if (this.detailForm.value.bankRouting > 0 && this.detailForm.controls.bankRouting.valid)\n            this.detailForm.controls.verifyRouting.setValidators(Validators.required);\n    }\n\n    compareAccounts(): void {\n        if (this.detailForm.value.bankAccount === this.detailForm.value.verifyAccount) return;\n        this.detailForm.controls.verifyAccount.setErrors({notEqual: true});\n    }\n\n    compareRouting(): void {\n        if (this.detailForm.value.bankRouting === this.detailForm.value.verifyRouting) return;\n        this.detailForm.controls.verifyRouting.setErrors({notEqual: true});\n    }\n\n    phoneNoKeyPress(event: any) {\n        if (event.charCode !== 0) {\n            const pattern = /[0-9\\+\\-\\ ]/;\n            const inputChar = String.fromCharCode(event.charCode);\n            if (!pattern.test(inputChar)) {\n                // invalid character, prevent input\n                event.preventDefault();\n            }\n        }\n    }\n\n    checkUsernameAvailability():void {\n        let usernameInput = _.find(this.inputs.toArray(), (input:MatInput) => {\n            return input.ngControl.name === 'username';\n        }) as MatInput;\n\n        const username:string = usernameInput.value;\n        this.attemptedUsername = username;\n        if(username.length < 1) return;\n\n        if(this.userForm.controls.username.errors != null && this.userForm.controls.username.errors.unavailable) {\n            this.userForm.patchValue({ username: username });\n        } else {\n            this.service.checkUsernameAvailability(username)\n                .subscribe(available => {\n                    this.usernameTaken = !available;\n\n                    if(!available) {\n                        this.userForm.get('username').setErrors({ unavailable: true });\n\n                        let lastSection = this.userForm.value.firstName.substr(0, 2).toLowerCase();\n                        this.suggestedUsername = this.userForm.value.lastName.substr(0, 5).toLowerCase() + lastSection;\n\n                        usernameInput.focus();\n                        usernameInput.value = this.suggestedUsername;\n                    }\n                });\n        }\n        \n    }\n\n    private createAgentForm(): void {\n        this.userEntity =\n            this.userEntity == null\n                ? <User>{\n                      firstName: null,\n                      lastName: null\n                  }\n                : this.userEntity;\n\n        this.agentForm = this.fb.group({\n            // firstName: this.fb.control(this.userEntity.firstName, [Validators.required]),\n            // lastName: this.fb.control(this.userEntity.lastName, [Validators.required]),\n            managerId: this.fb.control('', [Validators.required]),\n            isManager: this.fb.control('', [])\n        });\n    }\n\n    private createRoleTypeForm():void {\n        this.roleType = this.fb.control('', [Validators.required]);\n    }\n}\n","import { NgModule, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from '../auth.guard';\nimport { TokenInterceptor } from '../token.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { MomentModule } from 'angular2-moment';\nimport { SharedModule } from '@app/shared';\nimport { MessagesComponent } from '@app/messages/messages.component';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { AddAgentDialogComponent } from '@app/core/agents/dialogs/add-agent.component';\nimport { AddSaleStatusDialog } from '@app/client-information/dialogs/add-sale-status.component';\nimport { AddSaleDialog } from '@app/daily-sale-tracker/dialogs/add-sale.component';\nimport { DailySaleTrackerComponent } from '@app/daily-sale-tracker/daily-sale-tracker.component';\nimport { DeleteSaleDialog } from '@app/daily-sale-tracker/dialogs/delete-sale.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    SharedModule,\n    ReactiveFormsModule,\n    MomentModule,\n    FabFloatBtnModule\n  ],\n  declarations: [\n    MessagesComponent,\n    AddAgentDialogComponent,\n    AddSaleStatusDialog,\n    AddSaleDialog,\n    DailySaleTrackerComponent,\n    DeleteSaleDialog\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  entryComponents: [\n    AddAgentDialogComponent,\n    AddSaleStatusDialog,\n    AddSaleDialog,\n    DeleteSaleDialog\n  ]\n})\nexport class CoreModule {\n\n  /**\n   * Make sure CoreModule is imported only by one NgModule - the AppModule\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule:CoreModule\n  ) {\n    if(parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule.');\n    }\n  }\n}\n","module.exports = \"\\n<mat-card class=\\\"page-header-accent\\\">\\n    <mat-card-header>\\n        <mat-card-title>\\n            <h3>Sales Tracker</h3>\\n        </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-subtitle>\\n        <mat-form-field class=\\\"mx-1\\\">\\n            <input matInput [matDatepicker]=\\\"trackerStart\\\" placeholder=\\\"Start Date\\\" [(value)]=\\\"startDate\\\"\\n                (dateChange)=\\\"handleDateChange($event, true)\\\" />\\n            <mat-datepicker-toggle matSuffix [for]=\\\"trackerStart\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #trackerStart [startAt]=\\\"startDate\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"mx-1\\\">\\n            <input matInput [matDatepicker]=\\\"trackerEnd\\\" placeholder=\\\"End Date\\\" [(value)]=\\\"endDate\\\" (dateChange)=\\\"handleDateChange($event, false)\\\" />\\n            <mat-datepicker-toggle matSuffix [for]=\\\"trackerEnd\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #trackerEnd [startAt]=\\\"endDate\\\"></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"mx-1\\\" *ngIf=\\\"selectedCampaign != null\\\">\\n            <mat-select placeholder=\\\"Select Campaign\\\" [value]=\\\"selectedCampaign.campaignId\\\" (selectionChange)=\\\"changeSelectedCampaignId($event)\\\">\\n                <mat-option *ngFor=\\\"let c of campaigns\\\" [value]=\\\"c.campaignId\\\">\\n                    {{ c.name }}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <button type=\\\"button\\\" mat-button color=\\\"primary\\\" class=\\\"mx-4\\\" (click)=\\\"showAddSaleDialog()\\\">\\n            Add Sale\\n        </button>\\n    </mat-card-subtitle>\\n</mat-card>\\n\\n<mat-card>\\n    <mat-card-content>\\n\\n        <!-- NO TABLE DATA VIEW -->\\n        <div class=\\\"row justify-content-center no-data-message\\\" *ngIf=\\\"!(dataSource$.getValue() != null && dataSource$.getValue().length); else hasTableData;\\\">\\n            <div class=\\\"col-md-6 text-center\\\">\\n                <h4>\\n                    Looks like you don't have any sales or this time period. Adjust the date range above or add a sale.\\n                </h4>\\n                <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"showAddSaleDialog()\\\">Add Sale</button>\\n            </div>\\n        </div>\\n\\n        <!-- TABLE -->\\n        <ng-template #hasTableData>\\n            <form [formGroup]=\\\"form\\\">\\n                <table mat-table [dataSource]=\\\"sales\\\" multiTemplateDataRows formArrayName=\\\"sales\\\" *ngIf=\\\"dataSource$.getValue() != null && dataSource$.getValue().length > 0\\\">\\n\\n                    <ng-container matColumnDef=\\\"saleDate\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Date</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\" class=\\\"pl-0 pr-1\\\">\\n                            <button type=\\\"button\\\" mat-icon-button (click)=\\\"expandedRowHover(item)\\\" *ngIf=\\\"item.remarks.length > 0\\\">\\n                                <mat-icon>{{showNotes ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}}</mat-icon>\\n                            </button>\\n                            {{ item.saleDate | date:'shortDate' }}\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- agent dropdown -->\\n                    <ng-container matColumnDef=\\\"agentId\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Agent</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\" class=\\\"px-1\\\">\\n                            {{getAgentName(item.agentId)}}\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- account number  -->\\n                    <ng-container matColumnDef=\\\"podAccount\\\">\\n                        <th mat-header-cell *matHeaderCellDef>POD/Account</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            {{item.podAccount}}\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- customer first name -->\\n                    <ng-container matColumnDef=\\\"firstName\\\">\\n                        <th mat-header-cell *matHeaderCellDef>First Name</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            {{item.firstName}}\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- customer last name -->\\n                    <ng-container matColumnDef=\\\"lastName\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Last Name</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            {{item.lastName}}\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- sale status -->\\n                    <ng-container matColumnDef=\\\"status\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Status</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            <mat-form-field appearance=\\\"outline\\\">\\n                                <mat-select formControlName=\\\"status\\\" required (selectionChange)=\\\"updateExistingSalesRow(i)\\\">\\n                                    <mat-option *ngFor=\\\"let s of statuses | async\\\" [value]=\\\"s.saleStatusId\\\">\\n                                        {{s.name}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- paid status -->\\n                    <ng-container matColumnDef=\\\"paidStatus\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Paid Status</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            <mat-form-field appearance=\\\"outline\\\">\\n                                <mat-select formControlName=\\\"paidStatus\\\" required (selectionChange)=\\\"updateExistingSalesRow(i)\\\">\\n                                    <mat-option *ngFor=\\\"let p of paidStatusOptions\\\" [value]=\\\"p.id\\\">\\n                                        {{p.name}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- activity date -->\\n                    <ng-container matColumnDef=\\\"activityDate\\\">\\n                        <th mat-header-cell *matHeaderCellDef>Activity</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\" [formGroupName]=\\\"i\\\">\\n                            <ng-container *ngIf=\\\"form.controls['sales'].controls[i].controls.activityDate.value != null; else nullActivity\\\">\\n                                {{form.controls['sales'].controls[i].controls.activityDate.value}}\\n                            </ng-container>\\n                            <ng-template #nullActivity>\\n                                <span class=\\\"text-muted font-italic\\\">(No date)</span>\\n                            </ng-template>\\n                        </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"save\\\">\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\\n                        <td mat-cell *matCellDef=\\\"let item; let i=dataIndex\\\">\\n                            <div class=\\\"table-shrink\\\" class=\\\"hover-item\\\">\\n                                <button mat-icon-button (click)=\\\"editExistingSale(i)\\\">\\n                                    <mat-icon>edit</mat-icon>\\n                                </button>\\n                                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteSale(i)\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                </button>\\n                            </div>\\n                        </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n                        <td mat-cell *matCellDef=\\\"let item; let i = dataIndex\\\" [attr.colspan]=\\\"displayColumns.length\\\">\\n                            <div class=\\\"element-detail\\\" [@detailExpand]=\\\"item == expandedElement ? 'expanded' : 'collapsed'\\\">\\n                                <mat-list>\\n                                    <h3 mat-subheader>Notes</h3>\\n                                    <mat-list-item *ngIf=\\\"item.remarks.length == 0; else hasRemarks\\\">\\n                                        <mat-icon mat-list-icon>error_outline</mat-icon>\\n                                        <h4 mat-line>Sorry, no notes for this sale exist.</h4>\\n                                    </mat-list-item>\\n                                    <ng-template #hasRemarks>\\n                                        <mat-list-item *ngFor=\\\"let r of item.remarks\\\">\\n                                            <mat-icon mat-list-icon>folder</mat-icon>\\n                                            <h4 mat-line class=\\\"white-space-normal\\\">{{r.description}}</h4>\\n                                            <p mat-line>{{r.updatedAt | date:'shortDate'}}</p>\\n                                        </mat-list-item>\\n                                    </ng-template>\\n                                </mat-list>\\n                            </div>\\n                        </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayColumns; sticky: true\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayColumns; let i=index\\\" class=\\\"element-row hoverable\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let expandedRow; columns: ['expandedDetail']\\\" class=\\\"detail-row\\\"></tr>\\n                </table>\\n            </form>\\n        </ng-template>\\n\\n\\n    </mat-card-content>\\n</mat-card>\\n\\n<vs-float-button mat-icon=\\\"add\\\" (callback)=\\\"showAddSaleDialog()\\\" [isOpen]=\\\"floatIsOpen\\\"></vs-float-button>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.no-data-message {\\n  padding: 1rem 0; }\\n\\nbutton.edit {\\n  opacity: 0; }\\n\\ntr:hover > * > button.edit {\\n  -webkit-animation: fadeIn 0.8s forwards;\\n          animation: fadeIn 0.8s forwards; }\\n\\ntr > * > button.fade-in {\\n  -webkit-animation: fadeIn 0.8s forwards;\\n          animation: fadeIn 0.8s forwards; }\\n\\n@-webkit-keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(50px);\\n            transform: translateY(50px); }\\n  30% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0); } }\\n\\n@keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(50px);\\n            transform: translateY(50px); }\\n  30% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0); } }\\n\\n.element-detail {\\n  max-height: 25vh;\\n  overflow: hidden;\\n  overflow-y: auto;\\n  display: flex; }\\n\\n.detail-row {\\n  height: 0; }\\n\\n:host ::ng-deep .mat-form-field-infix {\\n  min-width: 100px !important;\\n  max-width: 180px !important;\\n  width: 0 auto; }\\n\\n:host ::ng-deep .mat-header-cell:last-child, .mat-cell:last-child {\\n  padding: 0; }\\n\\n.table-shrink {\\n  min-width: 50px !important;\\n  max-width: 100px !important;\\n  width: 0 auto; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {DailySale, IAgent, SaleStatus, User, ICampaign, Remark, PaidStatusType} from '@app/models';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {AgentsService} from '@app/core/agents/agents.service';\nimport {MessageService} from '@app/message.service';\nimport {Observable, of, BehaviorSubject} from 'rxjs';\nimport {DataSource} from '@angular/cdk/table';\nimport {ClientService} from '@app/client-information/client.service';\nimport {UserService} from '@app/user-features/user.service';\nimport {DailySaleTrackerService} from './daily-sale-tracker.service';\nimport {MatDatepickerInputEvent, MatDialog, MatSelectChange} from '@angular/material';\nimport {Moment} from 'moment';\nimport {AddSaleDialog} from '@app/daily-sale-tracker/dialogs/add-sale.component';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {States, IState} from '@app/shared/models/state.model';\nimport {FormGroup, FormBuilder, FormArray, Validators, FormControl} from '@angular/forms';\nimport {DeleteSaleDialog} from '@app/daily-sale-tracker/dialogs/delete-sale.component';\nimport {trigger, style, state, transition, animate} from '@angular/animations';\nimport {FloatBtnService} from '@app/fab-float-btn/float-btn.service';\n\ninterface DataStore {\n    statuses: SaleStatus[];\n    sales: DailySale[];\n}\n\ninterface PaidStatus {\n    id: number | string;\n    name: string;\n}\n\n@Component({\n    selector: 'vs-daily-sale-tracker',\n    templateUrl: './daily-sale-tracker.component.html',\n    styleUrls: ['./daily-sale-tracker.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n        ])\n    ],\n    providers: [FloatBtnService]\n})\nexport class DailySaleTrackerComponent implements OnInit {\n    paidStatusOptions: PaidStatus[] = [\n        {id: 0, name: 'Unpaid'},\n        {id: 1, name: 'Paid'},\n        {id: 2, name: 'Chargeback'},\n        {id: 3, name: 'Repaid'}\n    ];\n    states: IState[] = States.$get();\n    displayColumns: string[] = [\n        'saleDate',\n        'agentId',\n        'podAccount',\n        'firstName',\n        'lastName',\n        'status',\n        'paidStatus',\n        'activityDate',\n        'save'\n    ];\n\n    private store: DataStore = {\n        statuses: null,\n        sales: null\n    };\n\n    userInfo: User;\n    dataSource$: BehaviorSubject<DailySale[]> = new BehaviorSubject<DailySale[]>(null);\n    sales: Observable<DailySale[]>;\n    agents: IAgent[];\n    startDate: moment.Moment;\n    endDate: moment.Moment;\n    statuses: BehaviorSubject<SaleStatus[]> = new BehaviorSubject<SaleStatus[]>(null);\n    campaigns: ICampaign[];\n    selectedCampaign: ICampaign;\n    tableEmpty: boolean;\n    floatIsOpen: Observable<boolean>;\n    form: FormGroup;\n    expandedElement: DailySale;\n    showNotes: boolean = false;\n\n    constructor(\n        private agentService: AgentsService,\n        private clientService: ClientService,\n        private campaignService: CampaignService,\n        private userService: UserService,\n        private msg: MessageService,\n        private trackerService: DailySaleTrackerService,\n        private dialog: MatDialog,\n        private fb: FormBuilder,\n        private floatBtnService: FloatBtnService\n    ) {\n        this.dataSource$.subscribe(next => {\n            if (next == null) return;\n            this.sales = of(next);\n        });\n        this.floatIsOpen = this.floatBtnService.opened$.asObservable();\n    }\n\n    ngOnInit() {\n        this.createForm();\n        this.startDate = moment().add(-1, 'd');\n        this.endDate = moment();\n\n        this.userService.user.subscribe(u => {\n            this.userInfo = u;\n            this.clientService.getSaleStatuses(this.userInfo.sessionUser.sessionClient).subscribe(statuses => {\n                this.store.statuses = statuses;\n                this.statuses.next(statuses);\n            });\n\n            this.campaignService.getCampaigns(this.userInfo.sessionUser.sessionClient).then(campaigns => {\n                this.campaigns = _.sortBy(campaigns, ['name']);\n                this.campaigns.unshift({\n                    campaignId: 0,\n                    clientId: this.userInfo.sessionUser.sessionClient,\n                    name: 'All Campaigns',\n                    active: true\n                });\n\n                if (this.campaigns.length > 0) {\n                    this.selectedCampaign = this.campaigns[0];\n                } else {\n                    this.selectedCampaign = {\n                        campaignId: 0,\n                        clientId: null,\n                        name: null,\n                        active: false\n                    };\n                }\n\n                this.refreshDailySales(this.startDate, this.endDate);\n            });\n        });\n\n        this.agentService\n            .getAgents(true)\n            .then(agents => {\n                this.agents = agents;\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    handleDateChange($event: MatDatepickerInputEvent<Moment>, isStartDate: boolean): void {\n        const mDate = $event.value;\n\n        if (isStartDate) {\n            this.startDate = mDate;\n        } else {\n            this.endDate = mDate;\n        }\n\n        const start = this.startDate;\n        const end = this.endDate;\n\n        this.refreshDailySales(start, end);\n    }\n\n    expandedRowHover(row: any): void {\n        row.showNotes = row.showNotes == null ? true : !row.showNotes;\n        this.showNotes = !this.showNotes;\n        row = this.showNotes ? row : null;\n        setTimeout(() => {\n            this.expandedElement = row;\n        }, 250);\n    }\n\n    showAddSaleDialog(): void {\n        this.floatBtnService.open();\n        this.dialog\n            .open(AddSaleDialog, {\n                width: '800px',\n                data: {\n                    statuses: this.store.statuses,\n                    agents: this.agents,\n                    selectedCampaign: this.selectedCampaign,\n                    campaigns: this.campaigns,\n                    user: this.userInfo\n                }\n            })\n            .afterClosed()\n            .subscribe((result: any) => {\n                this.floatBtnService.close();\n                if (result == null) return;\n                let dto: DailySale = result;\n                dto.clientId = this.userInfo.sessionUser.sessionClient;\n                dto.saleDate = this.formatSqlDate(dto.saleDate as Moment, true);\n\n                this.trackerService.createDailySale(dto.clientId, dto).subscribe(() => {\n                    this.refreshDailySales(this.startDate, this.endDate);\n                });\n            });\n    }\n\n    changeSelectedCampaignId(event: MatSelectChange): void {\n        this.selectedCampaign = _.find(this.campaigns, {campaignId: event.value}) as ICampaign;\n\n        this.refreshDailySales(this.startDate, this.endDate);\n    }\n\n    castString(value: any): string {\n        return value + '';\n    }\n\n    formatSqlDate(date: Moment, withTimestamp: boolean = false): string {\n        if (withTimestamp) return date.format('YYYY-MM-DD HH:mm:ss');\n        return date.format('YYYY-MM-DD');\n    }\n\n    getFormGroup(name: string, index: number): FormGroup {\n        return this.form.get(name).get(index + '') as FormGroup;\n    }\n\n    getSalesControl(name: string, index: number): FormControl {\n        return this.form\n            .get('sales')\n            .get(index + '')\n            .get(name) as FormControl;\n    }\n\n    updateExistingSalesRow(index: number): void {\n        const sale: FormGroup = this.form.get('sales').get(index + '') as FormGroup;\n\n        // if the user chose a paid status of \"unpaid\", let's call the method to handle this\n        // which simply unsets the activity date\n        if (sale.value.paidStatus == PaidStatusType.unpaid) this.handleUnpaidSaleStatus(index);\n\n        let dto = this.prepareModel(sale, index);\n\n        let changeType, changeDate;\n        switch (sale.value.paidStatus) {\n            case PaidStatusType.chargeback:\n                changeType = 'Chargeback';\n                changeDate = dto.chargeDate;\n                break;\n            case PaidStatusType.paid:\n                changeType = 'Paid';\n                changeDate = dto.paidDate;\n                break;\n            case PaidStatusType.repaid:\n                changeType = 'Repaid';\n                changeDate = dto.repaidDate;\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                changeType = 'Unpaid';\n                changeDate = null;\n                break;\n        }\n\n        if (sale.value.paidStatus != PaidStatusType.unpaid) {\n            let changeDateTime = moment().toString();\n            let formattedChangeDate: string = moment(changeDate).format('MM-DD-YYYY');\n            let changeAgent = this.userInfo.firstName + ' ' + this.userInfo.lastName;\n            let remark = `Paid status was changed to: ${changeType} (${formattedChangeDate}) on ${changeDateTime} by: ${changeAgent}.`;\n\n            dto.remarks.push({\n                remarkId: null,\n                dailySaleId: dto.dailySaleId,\n                description: remark,\n                modifiedBy: this.userInfo.id\n            });\n        }\n\n        this.trackerService.updateDailySale(dto.clientId, dto).subscribe(result => {\n            this.store.sales[index] = result;\n            this.patchFormSaleValue(result, index);\n            this.msg.addMessage('Saved!', 'dismiss', 3000);\n        });\n    }\n\n    private handleUnpaidSaleStatus(index: number): void {\n        (<FormControl>this.form.get('sales').get(index + '')).patchValue({\n            activityDate: null\n        });\n    }\n\n    editExistingSale(index: number): void {\n        // this was checking form validity when we were completing the entire form right in the table\n        // but don't think i need this anymore\n        // const sale:FormGroup = this.form.get('sales').get(index+'') as FormGroup;\n        // if (sale.invalid) return;\n\n        let dto = this.store.sales[index];\n\n        let campaign:ICampaign;\n        if(this.selectedCampaign.campaignId < 1) {\n            campaign = _.find(this.campaigns, {campaignId: dto.campaignId});\n        } else {\n            campaign = this.selectedCampaign;\n        }\n\n        this.dialog\n            .open(AddSaleDialog, {\n                width: '800px',\n                data: {\n                    agents: this.agents,\n                    selectedCampaign: campaign,\n                    sale: dto,\n                    statuses: this.store.statuses,\n                    campaigns: this.campaigns,\n                    user: this.userInfo\n                }\n            })\n            .afterClosed()\n            .subscribe(dto => {\n                if (dto == null) return;\n\n                this.trackerService.updateDailySale(this.userInfo.sessionUser.sessionClient, dto).subscribe(sale => {\n                    this.store.sales[index] = sale;\n                    // this.patchFormSaleValue(sale, index);\n                    this.refreshDailySales(this.startDate, this.endDate);\n                    this.msg.addMessage('Saved!', 'dismiss', 3000);\n                });\n            });\n    }\n\n    deleteSale(index: number): void {\n        const sale: FormGroup = this.form.get('sales').get(index + '') as FormGroup;\n\n        if (this.showNotes) this.expandedRowHover(null);\n\n        this.dialog\n            .open(DeleteSaleDialog, {\n                width: '300'\n            })\n            .afterClosed()\n            .subscribe(result => {\n                if (result == null) return;\n                const dto: DailySale = this.prepareModel(sale);\n                if (dto.dailySaleId < 1) return;\n                this.trackerService\n                    .deleteDailySale(this.userInfo.sessionUser.sessionClient, dto.dailySaleId)\n                    .subscribe(() => {\n                        this.msg.addMessage('Successfully deleted sale.', 'dismiss', 3000);\n                        this.refreshDailySales(this.startDate, this.endDate);\n                    });\n            });\n    }\n\n    getAgentName(agentId: number): string {\n        const agent = _.find(this.agents, {agentId: agentId}) as IAgent;\n        return agent.firstName + ' ' + agent.lastName;\n    }\n\n    getSaleStatus(statusId: number): SaleStatus {\n        return (_.find(this.statuses.getValue(), {saleStatusId: statusId}) || {id: statusId, name: null}) as SaleStatus;\n    }\n\n    getPaidStatus(paidStatusId: number): PaidStatus {\n        return _.find(this.paidStatusOptions, {id: paidStatusId}) as PaidStatus;\n    }\n\n    private refreshDailySales(startDate: Moment, endDate: Moment): void {\n        let startRange = startDate.clone();\n        let endRange = endDate.clone();\n        startRange = startRange.add(-1, 'd');\n        endRange = endRange.add(1, 'd');\n\n        this.trackerService\n            .getDailySalesByDate(\n                this.userInfo.sessionUser.sessionClient,\n                this.selectedCampaign.campaignId,\n                this.formatSqlDate(startRange),\n                this.formatSqlDate(endRange)\n            )\n            .subscribe(sales => {\n                this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n                this.tableEmpty = sales.length < 1;\n                this.dataSource$.next(this.store.sales);\n                this.createForm();\n            });\n    }\n\n    private createForm(): void {\n        this.form = this.fb.group({\n            sales: this.createSalesFormArray()\n        });\n    }\n\n    private createSalesFormArray(): FormArray {\n        if (this.store.sales == null || this.store.sales.length < 1) return this.fb.array([]);\n        let result: FormArray = this.fb.array([]);\n        for (let i = 0; i < this.store.sales.length; i++) {\n            const d = this.store.sales[i];\n            result.push(\n                this.fb.group({\n                    dailySaleId: this.fb.control(d.dailySaleId || ''),\n                    agent: this.fb.control(d.agentId || '', [Validators.required]),\n                    account: this.fb.control(d.podAccount || '', [Validators.required]),\n                    firstName: this.fb.control(d.firstName || '', [Validators.required]),\n                    lastName: this.fb.control(d.lastName || '', [Validators.required]),\n                    street: this.fb.control(d.street || '', [Validators.required]),\n                    street2: this.fb.control(d.street2 || ''),\n                    city: this.fb.control(d.city || '', [Validators.required]),\n                    state: this.fb.control(d.state || '', [Validators.required]),\n                    zip: this.fb.control(d.zip || '', [Validators.required]),\n                    status: this.fb.control(d.status || '', [Validators.required]),\n                    paidStatus: this.fb.control(d.paidStatus, [Validators.required]),\n                    saleDate: this.fb.control(d.saleDate || '', [Validators.required]),\n                    activityDate: this.fb.control(this.calculateActivityDate(d)),\n                    remarks: this.createRemarksFormArray(d.remarks)\n                })\n            );\n        }\n        return result;\n    }\n\n    private calculateActivityDate(sale: DailySale): Date | string | Moment {\n        let activityDate: Date | string | Moment;\n\n        switch (sale.paidStatus) {\n            case PaidStatusType.paid:\n                activityDate = sale.paidDate;\n                break;\n            case PaidStatusType.chargeback:\n                activityDate = sale.chargeDate;\n                break;\n            case PaidStatusType.repaid:\n                activityDate = sale.repaidDate;\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                activityDate = null;\n                break;\n        }\n\n        return activityDate;\n    }\n\n    private setActivityDateProperty(\n        formPaidStatus: PaidStatusType,\n        modelField: string,\n        index: number\n    ): Date | string | Moment {\n        let actMo = moment(this.form.value.sales[index].activityDate);\n        if (modelField == 'paidDate' && formPaidStatus == PaidStatusType.paid && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        } else if (modelField == 'chargeDate' && formPaidStatus == PaidStatusType.chargeback && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        } else if (modelField == 'repaidDate' && formPaidStatus == PaidStatusType.repaid && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        }\n        return this.store.sales[index][modelField] || null;\n    }\n\n    private createRemarksFormArray(remarks: Remark[]): FormArray {\n        let result = this.fb.array([]);\n        remarks.forEach(r => {\n            result.push(this.fb.control(r.description || '', [Validators.required]));\n        });\n        return result;\n    }\n\n    private patchFormSaleValue(sale: DailySale, index: number): void {\n        this.form\n            .get('sales')\n            .get(index + '')\n            .patchValue({\n                dailySaleId: sale.dailySaleId,\n                agent: sale.agentId,\n                account: sale.podAccount,\n                firstName: sale.firstName,\n                lastName: sale.lastName,\n                street: sale.street,\n                street2: sale.street2,\n                city: sale.city,\n                state: sale.state,\n                zip: sale.zip,\n                status: sale.status,\n                paidStatus: +sale.paidStatus,\n                activityDate: this.calculateActivityDate(sale),\n                saleDate: sale.saleDate,\n                remarks: sale.remarks\n            });\n    }\n\n    private prepareModel(form: FormGroup, index: number = null): DailySale {\n        return {\n            dailySaleId: form.value.dailySaleId,\n            agentId: form.value.agent,\n            campaignId: this.resolveClientId(index),\n            clientId: this.userInfo.sessionUser.sessionClient,\n            firstName: form.value.firstName,\n            lastName: form.value.lastName,\n            street: form.value.street,\n            street2: form.value.street2,\n            city: form.value.city,\n            state: form.value.state,\n            zip: form.value.zip,\n            status: form.value.status,\n            paidStatus: form.value.paidStatus,\n            paidDate: this.setActivityDateProperty(form.value.paidStatus, 'paidDate', index),\n            chargeDate: this.setActivityDateProperty(form.value.paidStatus, 'chargeDate', index),\n            repaidDate: this.setActivityDateProperty(form.value.paidStatus, 'repaidDate', index),\n            remarks: this.prepareRemarks(index),\n            saleDate: form.value.saleDate,\n            podAccount: form.value.account\n        };\n    }\n\n    private resolveClientId(saleIndex: number): number {\n        if (this.selectedCampaign.campaignId > 0) return this.selectedCampaign.campaignId;\n        return this.store.sales[saleIndex].campaignId;\n    }\n\n    private prepareRemarks(index): Remark[] {\n        var result: Remark[] = [];\n        if (this.form.value.remarks == null) return [];\n        this.form.value.remarks.forEach((r: string) => {\n            result.push({\n                remarkId: null,\n                dailySaleId: this.store.sales[index].dailySaleId,\n                description: r,\n                modifiedBy: this.userInfo.id\n            });\n        });\n        return result;\n    }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '@app/auth.service';\nimport { Observable, throwError } from 'rxjs';\nimport { SaleStatus, DailySale, HttpErrorResponse } from '@app/models';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DailySaleTrackerService {\n\n  url:string;\n\n  constructor(private http:HttpClient, private auth:AuthService) {\n    this.url = `${this.auth.apiUrl}api`;\n  }\n\n  getDailySalesByDate(clientId:number, campaignId:number, startDate:string, endDate:string):Observable<DailySale[]> {\n    const url = `${this.url}/clients/${clientId}/daily-sales/campaigns/${campaignId}/from/${startDate}/to/${endDate}`;\n    return this.http.get<DailySale[]>(url);\n  }\n\n  getDailySalesByAgent(clientId:number, agentId:number, startDate:string, endDate:string):Observable<DailySale[]> {\n    const url = `${this.url}/clients/${clientId}/daily-sales/agents/${agentId}/from/${startDate}/to/${endDate}`;\n    return this.http.get<DailySale[]>(url)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  createDailySale(clientId:number, dto:DailySale):Observable<DailySale> {\n    const url = `${this.url}/clients/${clientId}/daily-sales`;\n    return this.http.post<DailySale>(url, dto);\n  }\n\n  checkUniquePodAccount(account:number):Observable<boolean> {\n      const url = `${this.url}/pods/${account}`;\n      return this.http.get<boolean>(url)\n        .pipe(\n            catchError(this.handleError)\n        );\n  }\n\n  updateDailySale(clientId:number, dto:DailySale):Observable<DailySale> {\n    const url = `${this.url}/clients/${clientId}/daily-sales/${dto.dailySaleId}`;\n    return this.http.post<DailySale>(url, dto)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteDailySale(clientId:number, dailySaleId:number):Observable<boolean> {\n    const url = `${this.url}/clients/${clientId}/daily-sales/${dailySaleId}`;\n    return this.http.delete<boolean>(url)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  private handleError(error:HttpErrorResponse) {\n    if(error.error instanceof ErrorEvent) {\n      // client side network error\n      console.log('Error occurred: ', error.error.message || error.message);\n    } else {\n      // backend returned server error\n      console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `)\n    }\n    return throwError('There was a network error. Please try again.');\n  }\n\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h3 class=\\\"modal-title\\\">\\n        {{existingSale != null && existingSale.dailySaleId > 0 ? 'Edit Sale' : 'Add Sale'}}\\n    </h3>\\n    <span class=\\\"clickable float-right\\\">\\n        <i class=\\\"material-icons\\\" (click)=\\\"onNoClick()\\\">clear</i>\\n    </span>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p class=\\\"text-muted\\\">\\n        All fields denoted with * are required.\\n    </p>\\n    <form [formGroup]=\\\"form\\\" class=\\\"add-daily-sale-form\\\">\\n\\n        <!-- CAMPAIGN ROW -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <!-- <input matInput placeholder=\\\"Campaign\\\" [value]=\\\"selectedCampaign.name\\\" /> -->\\n                    <mat-select placeholder=\\\"Campaign\\\" formControlName=\\\"campaign\\\" required>\\n                        <mat-option *ngFor=\\\"let c of campaigns\\\" [value]=\\\"c.campaignId\\\">\\n                            {{c.name}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('campaign').hasError('required') && (form.get('campaign').touched || submitted)\\\">\\n                        Please select a campaign\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- AGENT AND SALE DATE -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <mat-select placeholder=\\\"Agent\\\" formControlName=\\\"agent\\\" required>\\n                        <mat-option *ngFor=\\\"let a of agents\\\" [value]=\\\"a.agentId\\\">\\n                            {{a.firstName}} {{a.lastName}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('agent').hasError('required') && (form.get('agent').touched || submitted)\\\">\\n                        Please select an Agent\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"saleDatePicker\\\" placeholder=\\\"Sale Date\\\" formControlName=\\\"saleDate\\\"\\n                        required />\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"saleDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #saleDatePicker></mat-datepicker>\\n                    <mat-error *ngIf=\\\"form.get('saleDate').hasError('required') && (form.get('saleDate').touched || submitted)\\\">\\n                        Please select a sale date\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"POD/Account\\\" formControlName=\\\"account\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('account').hasError('required') && (form.get('account').touched || submitted)\\\">\\n                        Please enter a POD or Account No\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <mat-select placeholder=\\\"Sale Status\\\" formControlName=\\\"status\\\" required>\\n                        <mat-option *ngFor=\\\"let s of statuses\\\" [value]=\\\"s.saleStatusId\\\">\\n                            {{s.name}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('status').hasError('required') && (form.get('status').touched || submitted)\\\">\\n                        Please select a status\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <mat-select placeholder=\\\"Paid Status\\\" formControlName=\\\"paidStatus\\\" required>\\n                        <mat-option value=\\\"0\\\">Unpaid</mat-option>\\n                        <mat-option value=\\\"1\\\">Paid</mat-option>\\n                        <mat-option value=\\\"2\\\">Chargeback</mat-option>\\n                        <mat-option value=\\\"3\\\">Repaid</mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('paidStatus').hasError('required') && (form.get('paidStatus').touched || submitted)\\\">\\n                        Please select paid status\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"paidDatePicker\\\" formControlName=\\\"paidDate\\\" placeholder=\\\"Paid Date\\\" />\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"paidDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #paidDatePicker></mat-datepicker>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"chargebackDatePicker\\\" formControlName=\\\"chargeDate\\\" placeholder=\\\"Chargeback Date\\\" />\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"chargebackDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #chargebackDatePicker></mat-datepicker>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"repaidDatePicker\\\" formControlName=\\\"repaidDate\\\" placeholder=\\\"Repaid Date\\\" />\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"repaidDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #repaidDatePicker></mat-datepicker>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row my-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <span>Customer Information</span>\\n                <mat-divider></mat-divider>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER NAME -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('firstName').hasError('required') && (form.get('firstName').touched || submitted)\\\">\\n                        Please enter a first name\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('lastName').hasError('required') && (form.get('lastName').touched || submitted)\\\">\\n                        Please enter a last name\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER ADDRESS -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('address').hasError('required') && (form.get('address').touched || submitted)\\\">\\n                        Please enter a street address\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Apt/Suite/Unit\\\" formControlName=\\\"address2\\\" />\\n                    <mat-hint>Optional</mat-hint>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER ADDRESS CONT'D -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-7\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('city').hasError('required') && (form.get('city').touched || submitted)\\\">\\n                        Please enter a city\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n                <mat-form-field>\\n                    <mat-select formControlName=\\\"state\\\" placeholder=\\\"State\\\" required>\\n                        <mat-option *ngFor=\\\"let s of states\\\" [value]=\\\"s.abbreviation\\\">{{s.name}}</mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('state').hasError('required') && (form.get('state').touched || submitted)\\\">\\n                        Select a State\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Zip\\\" formControlName=\\\"zip\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('zip').hasError('required') && (form.get('zip').touched || submitted)\\\">\\n                        Please enter a zip code\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <mat-list formArrayName=\\\"remarks\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <h4 class=\\\"m-0\\\">\\n                            Activity\\n                        </h4>\\n                        <span *ngIf=\\\"remarks.length\\\">\\n                            <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"addRemark()\\\">\\n                                Add Remark\\n                            </button>\\n                        </span>\\n                    </div>\\n\\n                    <mat-form-field *ngIf=\\\"showAddRemarkInput\\\">\\n                        <textarea matInput placeholder=\\\"Enter Remark\\\" #remarkField [formControl]=\\\"getRemarkFormControl()\\\"></textarea>\\n                        <button mat-button type=\\\"button\\\" matSuffix mat-icon-button (click)=\\\"saveNewRemark()\\\">\\n                            <mat-icon inline=\\\"true\\\">save</mat-icon>\\n                        </button>\\n                        <button mat-button type=\\\"button\\\" matSuffix mat-icon-button (click)=\\\"cancelNewRemark()\\\">\\n                            <mat-icon inline=\\\"true\\\">clear</mat-icon>\\n                        </button>\\n                    </mat-form-field>\\n                    <mat-list-item *ngFor=\\\"let r of remarks; let i=index\\\" [formGroupName]=\\\"i\\\" [matTooltip]=\\\"r.description\\\">\\n                        <mat-icon mat-list-icon>note</mat-icon>\\n                        <h4 mat-line>{{r.user.firstName}} {{r.user.lastName}}</h4>\\n                        <p mat-line>{{r.description}}</p>\\n                        <p mat-line>{{r.updatedAt | date}}</p>\\n                        <mat-divider></mat-divider>\\n                    </mat-list-item>\\n                    <mat-list-item *ngIf=\\\"remarks.length < 1 && !showAddRemarkInput\\\" class=\\\"clickable\\\" (click)=\\\"addRemark()\\\">\\n                        <mat-icon mat-list-icon>note_add</mat-icon>\\n                        <h4 mat-line>Add a Remark</h4>\\n                    </mat-list-item>\\n\\n                </mat-list>\\n\\n            </div>\\n        </div>\\n\\n    </form>\\n    <div class=\\\"float-right\\\">\\n        <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n        <button mat-raised-button (click)=\\\"saveDialog()\\\" color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\n    </div>\\n</div>\"","module.exports = \".add-daily-sale-form mat-form-field {\\n  display: block; }\\n\\n.add-daily-sale-form /deep/ .mat-form-field-infix {\\n  width: 100%; }\\n\"","import { Component, OnInit, Inject, ViewChild, SimpleChanges } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTooltip } from \"@angular/material\";\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl } from \"@angular/forms\";\nimport { SaleStatus, IAgent, ICampaign, DailySale, User, Remark, PaidStatusType } from \"@app/models\";\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { IState, States } from \"@app/shared/models/state.model\";\nimport { Moment } from \"moment\";\nimport { CampaignService } from \"@app/campaigns/campaign.service\";\n\ninterface DialogData {\n  statuses:SaleStatus[],\n  agents:IAgent[],\n  selectedCampaign:ICampaign,\n  sale:DailySale,\n  campaigns:ICampaign[],\n  user:User\n}\n\ninterface ViewRemark extends Remark {\n  wordWrap?:boolean;\n}\n\n@Component({\n  selector: 'vs-add-daily-sale',\n  templateUrl: './add-sale.component.html',\n  styleUrls: ['./add-sale.component.scss']\n})\nexport class AddSaleDialog implements OnInit {\n  form:FormGroup;\n  statuses:SaleStatus[];\n  agents:IAgent[];\n  selectedCampaign:ICampaign;\n  today:moment.Moment;\n  states:IState[] = States.$get();\n  existingSale:DailySale;\n  remarks:ViewRemark[];\n  newRemarks:Remark[];\n  campaigns:ICampaign[];\n  user:User;\n  hideTooltip:boolean = false;\n  showAddRemarkInput:boolean = false;\n  newRemarkInputValue:FormControl;\n  submitted:boolean;\n  remarkControl:FormGroup;\n  isExistingSale:boolean;\n\n  constructor(\n    public ref:MatDialogRef<AddSaleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data:DialogData,\n    private fb:FormBuilder,\n    private campaignService:CampaignService\n  ) {}\n\n  ngOnInit() {\n    this.newRemarks = [];\n    this.today = moment();\n    this.existingSale = this.data.sale || {} as DailySale;\n    this.isExistingSale = this.data.sale != null;\n    this.remarks = this.data.sale != null\n      ? this.data.sale.remarks : [];\n    this.sortRemarks();\n    this.statuses = this.data.statuses;\n    this.agents = this.data.agents;\n    this.selectedCampaign = this.data.selectedCampaign;\n    this.user = this.data.user;\n\n    if (this.isExistingSale && this.data.campaigns == null) {\n      this.campaignService.getCampaigns(this.user.sessionUser.sessionClient, false)\n        .then(results => {\n          this.campaigns = results;\n        });\n    } else {\n      this.campaigns = _.cloneDeep(this.data.campaigns);\n      // remove \"all campaigns\" option, so that the user has to be pick a valid campaign\n      _.remove(this.campaigns, {'campaignId':0});\n    }\n\n    this.createForm();\n    this.submitted = true;\n  }\n\n  onNoClick():void {\n    this.ref.close();\n  }\n\n  saveDialog():void {\n    this.submitted = true;\n    this.form.updateValueAndValidity();\n    if(this.form.invalid) return;\n\n    const dto = this.prepareModel();\n    this.ref.close(dto);\n  }\n\n  getFormControlValidity(field:string):boolean {\n    return this.form.get(field).invalid && (this.form.get(field).touched || this.form.pending);\n  }\n\n  getRemarkAgent(id:number):IAgent {\n    return _.find(this.agents, { agentId: id }) || {} as IAgent;\n  }\n\n  addRemark():void {\n    this.remarkControl = this.fb.group({\n      remarkId: this.fb.control(''),\n      description: this.fb.control('', [Validators.required])\n    });\n    (<FormArray>this.form.get('remarks')).push(this.remarkControl);\n    this.showAddRemarkInput = true;\n  }\n\n  getRemarkFormControl():FormControl {\n    return this.remarkControl.get('description') as FormControl;\n  }\n\n  saveNewRemark():void {\n    const dto:Remark = {\n      remarkId: this.remarkControl.value.remarkId,\n      dailySaleId: this.existingSale.dailySaleId,\n      description: this.remarkControl.value.description,\n      modifiedBy: this.user.id,\n      createdAt: moment(),\n      updatedAt: moment(),\n      user: this.user\n    };\n    this.remarks.push(dto);\n    this.newRemarks.push(dto);\n    this.showAddRemarkInput = false;\n    this.sortRemarks();\n  }\n\n  cancelNewRemark():void {\n    this.showAddRemarkInput = false;\n  }\n\n  handlePaidStatusChange(event):void {\n    const selection:PaidStatusType = +event.value as PaidStatusType;\n    let newActivityValue;\n\n    switch(selection) {\n      case PaidStatusType.paid:\n        newActivityValue = this.existingSale.paidDate || null;\n        break;\n      case PaidStatusType.chargeback:\n        newActivityValue = this.existingSale.chargeDate || null;\n        break;\n      case PaidStatusType.repaid:\n        newActivityValue = this.existingSale.repaidDate || null;\n        break;\n      case PaidStatusType.unpaid:\n      default:\n        newActivityValue = null;\n        break;\n    }\n\n    this.form.patchValue({ activityDate: newActivityValue });\n  }\n\n  private createForm():void {\n    let campaignValue = this.existingSale.campaignId != null && this.existingSale.campaignId > 0\n      ? this.existingSale.campaignId\n      : this.selectedCampaign.campaignId > 0\n        ? this.selectedCampaign.campaignId\n        : '';\n    this.form = this.fb.group({\n      saleDate: this.fb.control(this.existingSale.saleDate || this.today, [Validators.required]),\n      agent: this.fb.control(this.existingSale.agentId || '', [Validators.required]),\n      campaign: this.fb.control({value: campaignValue, disabled:this.isExistingSale}, [Validators.required]),\n      account: this.fb.control(this.existingSale.podAccount || '', [Validators.required]),\n      firstName: this.fb.control(this.existingSale.firstName || '', [Validators.required]),\n      lastName: this.fb.control(this.existingSale.lastName || '', [Validators.required]),\n      address: this.fb.control(this.existingSale.street || '', [Validators.required]),\n      address2: this.fb.control(this.existingSale.street2 || ''),\n      city: this.fb.control(this.existingSale.city || '', [Validators.required]),\n      state: this.fb.control(this.existingSale.state || '', [Validators.required]),\n      zip: this.fb.control(this.existingSale.zip || '', [Validators.required]),\n      status: this.fb.control(this.existingSale.status || '', [Validators.required]),\n      paidStatus: this.fb.control(this.formatPaidStatus() || '', [Validators.required]),\n      paidDate: this.fb.control(this.existingSale.paidDate || ''),\n      chargeDate: this.fb.control(this.existingSale.chargeDate || ''),\n      repaidDate: this.fb.control(this.existingSale.repaidDate || ''),\n      remarks: this.createRemarksFormArray()\n    });\n  }\n\n  private createRemarksFormArray():FormArray {\n    let result = this.fb.array([]);\n    this.remarks.forEach(r => {\n      result.push(this.fb.group({\n        remarkId: this.fb.control(r.remarkId),\n        description: this.fb.control(r.description || '', [Validators.required])\n      }));\n    });\n    return result;\n  }\n\n  private prepareModel():DailySale {\n    return {\n      dailySaleId: this.existingSale.dailySaleId || null,\n      agentId: this.form.value.agent,\n      campaignId: this.form.value.campaign,\n      clientId: this.user.sessionUser.sessionClient,\n      firstName: this.form.value.firstName,\n      lastName: this.form.value.lastName,\n      street: this.form.value.address,\n      street2: this.form.value.address2,\n      city: this.form.value.city,\n      state: this.form.value.state,\n      zip: this.form.value.zip,\n      status: this.form.value.status,\n      paidStatus: this.form.value.paidStatus,\n      paidDate: this.setActivityDateProperty(this.form.value.paidStatus, 'paidDate'),\n      chargeDate: this.setActivityDateProperty(this.form.value.paidStatus, 'chargeDate'),\n      repaidDate: this.setActivityDateProperty(this.form.value.paidStatus, 'repaidDate'),\n      saleDate: this.form.value.saleDate,\n      podAccount: this.form.value.account,\n      remarks: this.newRemarks\n    }\n  }\n\n  private formatPaidStatus():string {\n    return this.existingSale.paidStatus != null ? this.existingSale.paidStatus+'' : null;\n  }\n\n  private calculateActivityDate(sale:DailySale):Date|string|Moment {\n    let activityDate:Date|string|Moment;\n\n    switch(sale.paidStatus) {\n      case PaidStatusType.paid:\n        activityDate = sale.paidDate;\n        break;\n      case PaidStatusType.chargeback:\n        activityDate = sale.chargeDate;\n        break;\n      case PaidStatusType.repaid:\n        activityDate = sale.repaidDate;\n        break;\n      case PaidStatusType.unpaid:\n      default:\n        activityDate = null;\n        break;\n    }\n\n    return activityDate;\n  }\n\n  private setActivityDateProperty(formPaidStatus:PaidStatusType, modelField:string):Date|string|Moment {\n    let actMo = moment(this.form.value.activityDate);\n    if (modelField == 'paidDate'\n      && formPaidStatus == PaidStatusType.paid\n      && actMo.isValid()\n    ) {\n      return actMo.format('YYYY-MM-DD');\n    } else if (modelField == 'chargeDate'\n      && formPaidStatus == PaidStatusType.chargeback\n      && actMo.isValid()\n    ) {\n      return actMo.format('YYYY-MM-DD');\n    } else if (modelField == 'repaidDate'\n      && formPaidStatus == PaidStatusType.repaid\n      && actMo.isValid()\n    ) {\n      return actMo.format('YYYY-MM-DD');\n    }\n    return this.existingSale[modelField] || null;\n  }\n\n  private sortRemarks():Remark[] {\n    return _.orderBy(this.remarks, ['updatedAt'], ['desc']) as Remark[];\n  }\n}\n","module.exports = \"\\n<h5>Delete this sale?</h5>\\n<p>Deleting a sale cannot be undone.</p>\\n\\n<div class=\\\"row justify-content-between\\\">\\n  <button mat-button (click)=\\\"onNoClick()\\\">No</button>\\n  <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Delete</button>\\n</div>\\n\"","import { Component } from \"@angular/core\";\nimport { MatDialogRef } from \"@angular/material\";\n\n\n@Component({\n  selector: 'delete-sale-dialog',\n  templateUrl: './delete-sale.component.html'\n})\nexport class DeleteSaleDialog {\n  constructor(private ref:MatDialogRef<DeleteSaleDialog>) {}\n\n  onNoClick():void {\n    this.ref.close();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n@Directive({\n    selector: 'chart-js-content, [chartJsContent], [chart-js-content]'\n})\nexport class ChartJsContent {\n    constructor(public _template: TemplateRef<any>) { }\n}","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <h4>Sales Analysis</h4>\\n                        <button mat-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"showAddSaleDialog()\\\">\\n                            <mat-icon inline=\\\"true\\\">add_circle</mat-icon> SALE\\n                        </button>\\n                    </div>\\n                </mat-card-title>\\n                <mat-card-content [class.justify-content-between]=\\\"isMobileLayout\\\">\\n                    <ng-container *ngIf=\\\"(user|async).role.role >= roleType.companyAdmin\\\">\\n                        <mat-form-field>\\n                            <mat-select [value]=\\\"selectedAgent.agentId\\\" (selectionChange)=\\\"handleAgentChange($event)\\\" placeholder=\\\"Currently Viewing:\\\">\\n                                <mat-option *ngFor=\\\"let a of (agents|async)\\\" [value]=\\\"a.agentId\\\">\\n                                    {{a.firstName}} {{a.lastName}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </ng-container>\\n                    <!-- <span *ngIf=\\\"(user|async).role.role < roleType.companyAdmin; else adminWorkspace\\\">Sales Analysis</span>\\n                    <ng-template #adminWorkspace>\\n                        <div class=\\\"h3\\\">\\n                            <mat-form-field class=\\\"vs-toolbar-select\\\">\\n                                <mat-select [value]=\\\"selectedAgent.agentId\\\" (selectionChange)=\\\"handleAgentChange($event)\\\">\\n                                    <mat-option *ngFor=\\\"let a of (agents|async)\\\" [value]=\\\"a.agentId\\\">\\n                                        {{a.firstName}} {{a.lastName}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            <span *ngIf=\\\"!isMobileLayout\\\">'s Sale Analysis</span>\\n                        </div>\\n                    </ng-template>\\n                    <span class=\\\"flex-spacer\\\" *ngIf=\\\"!isMobileLayout\\\"></span>\\n                    <button mat-raised-button type=\\\"button\\\" class=\\\"vs-toolbar-icon\\\" (click)=\\\"showAddSaleDialog()\\\">\\n                        <mat-icon inline=\\\"true\\\">add_circle</mat-icon> SALE\\n                    </button> -->\\n                </mat-card-content>\\n            </mat-card>\\n            <!-- <mat-toolbar color=\\\"primary\\\">\\n                <mat-toolbar-row [class.justify-content-between]=\\\"isMobileLayout\\\">\\n                    <span *ngIf=\\\"(user|async).role.role < roleType.companyAdmin; else adminWorkspace\\\">Sales Analysis</span>\\n                    <ng-template #adminWorkspace>\\n                        <span>{{(user|async).firstName}} {{(user|async).lastName}}'s Workspace</span>\\n                        <mat-form-field class=\\\"vs-toolbar-select\\\">\\n                            <mat-select [value]=\\\"selectedAgent.agentId\\\" (selectionChange)=\\\"handleAgentChange($event)\\\">\\n                                <mat-option *ngFor=\\\"let a of (agents|async)\\\" [value]=\\\"a.agentId\\\">\\n                                    {{a.firstName}} {{a.lastName}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        <span *ngIf=\\\"!isMobileLayout\\\">'s Sale Analysis</span>\\n                    </ng-template>\\n                    <span class=\\\"flex-spacer\\\" *ngIf=\\\"!isMobileLayout\\\"></span>\\n                    <mat-icon class=\\\"vs-toolbar-icon\\\">add_circle</mat-icon>\\n                    <button mat-raised-button type=\\\"button\\\" class=\\\"vs-toolbar-icon\\\" (click)=\\\"showAddSaleDialog()\\\">\\n                        <mat-icon inline=\\\"true\\\">add_circle</mat-icon> SALE\\n                    </button>\\n                </mat-toolbar-row>\\n            </mat-toolbar> -->\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <mat-card>\\n                <mat-card-content>\\n                    <canvas #chart>{{chartData}}</canvas>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <div class=\\\"row px-4\\\">\\n                        <div class=\\\"col-md-6\\\" [ngClass]=\\\"{'d-flex justify-content-center': isMobileLayout}\\\">\\n                            <mat-form-field>\\n                                <input matInput [matDatepicker]=\\\"startDatepicker\\\" placeholder=\\\"Start Date\\\" [value]=\\\"startDate\\\"\\n                                    (dateInput)=\\\"updateDashboard($event)\\\" [max]=\\\"endDate\\\" />\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"startDatepicker\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #startDatepicker></mat-datepicker>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6\\\" [ngClass]=\\\"{'d-flex justify-content-center': isMobileLayout}\\\">\\n                            <mat-form-field [class.float-right]=\\\"!isMobileLayout\\\">\\n                                <input matInput [matDatepicker]=\\\"endDatepicker\\\" placeholder=\\\"End Date\\\" [value]=\\\"endDate\\\"\\n                                    (dateInput)=\\\"updateDashboard($event, false)\\\" [min]=\\\"startDate\\\" />\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"endDatepicker\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #endDatepicker></mat-datepicker>\\n                            </mat-form-field>\\n                        </div>\\n\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-4 sale-stream-container\\\">\\n            <h5 class=\\\"mb-0\\\">Filter: </h5>\\n            <div class=\\\"card mb-2\\\">\\n                <mat-button-toggle-group #filterBy=\\\"matButtonToggleGroup\\\" (change)=\\\"handleFilter($event)\\\" [value]=\\\"selectedFilter\\\">\\n                    <mat-button-toggle value=\\\"-1\\\">\\n                        None\\n                    </mat-button-toggle>\\n                    <mat-button-toggle value=\\\"0\\\">\\n                        Unpaid\\n                    </mat-button-toggle>\\n                    <mat-button-toggle value=\\\"1\\\">\\n                        Paid\\n                    </mat-button-toggle>\\n                    <mat-button-toggle value=\\\"2\\\">\\n                        Chargeback\\n                    </mat-button-toggle>\\n                    <mat-button-toggle value=\\\"3\\\">\\n                        Repaid\\n                    </mat-button-toggle>\\n                </mat-button-toggle-group>\\n            </div>\\n            <div [class.sale-stream]=\\\"!isMobileLayout\\\">\\n                <div class=\\\"card my-1\\\" *ngFor=\\\"let s of (sales|async)\\\">\\n                    <div class=\\\"d-flex m-2\\\">\\n                        <div class=\\\"mx-2\\\">\\n                            <div><mat-icon>person</mat-icon></div>\\n                            <div *ngIf=\\\"isSalePaid(s.paidStatus)\\\" class=\\\"text-success\\\"><mat-icon>monetization_on</mat-icon></div>\\n                        </div>\\n                        <div class=\\\"flex-grow-1\\\">\\n                            <h5 class=\\\"card-title\\\">{{s.firstName}} {{s.lastName}}</h5>\\n                            <div class=\\\"card-text\\\">\\n                                <div>\\n                                    <span class=\\\"font-weight-bold\\\">Status:</span><br />\\n                                    {{getStatus(s.status).name}}\\n                                </div>\\n                                <div *ngIf=\\\"isSalePaid(s.paidStatus)\\\" class=\\\"text-muted font-italic\\\">\\n                                    <span>Paid:</span>\\n                                    <ng-container *ngIf=\\\"s.paidDate != null; else noPaidDate\\\">{{s.paidDate | date:'shortDate'}}</ng-container>\\n                                    <ng-template #noPaidDate>[No Paid Date]</ng-template>\\n                                </div>\\n                                <address class=\\\"mt-3\\\">\\n                                    {{s.street}} {{s.street2}} <br />\\n                                    {{s.city}}, {{s.state}} {{s.zip}}\\n                                </address>\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <span class=\\\"badge badge-pill\\\" [ngClass]=\\\"getBadgeColorFromPaidStatus(s.paidStatus)\\\">{{getPaidStatus(s.paidStatus)}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".sale-stream {\\n  max-height: 392px;\\n  overflow-y: scroll; }\\n\"","import { ChartJsContent } from './chart-js-content';\n\nimport {Component, OnInit, ViewChild, ViewContainerRef, ContentChild, Renderer2, AfterContentInit, TemplateRef} from '@angular/core';\nimport {Moment} from '../shared/moment-extensions';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {Observable, of, Subject} from 'rxjs';\nimport {User, IAgent, ICampaign, SaleStatus, DailySale, PaidStatusType} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {AgentsService} from '@app/core/agents/agents.service';\nimport {MatDialog, MatSelectChange, MatDatepickerInputEvent, MatButtonToggleChange} from '@angular/material';\nimport {AgentAddSaleDialog} from '@app/dashboard/dialogs/add-sale-dialog.component';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {ClientService} from '@app/client-information/client.service';\nimport {DailySaleTrackerService} from '@app/daily-sale-tracker/daily-sale-tracker.service';\nimport {Chart} from 'chart.js';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { MessageService } from '@app/message.service';\nimport { PortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { map } from 'rxjs/operators';\nimport { AgentService } from '@app/agent/agent.service';\n\ninterface DataStore {\n    user: User,\n    users:User[],\n    agents: IAgent[],\n    statuses: SaleStatus[],\n    sales: DailySale[],\n    campaigns: ICampaign[]\n}\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, AfterContentInit {\n    selectedFilter:PaidStatusType | string = '-1';\n    roleType = {\n        systemAdmin: 7,\n        companyAdmin: 6,\n        humanResources: 5,\n        regManager: 4,\n        manager: 3,\n        supervisor: 2,\n        user: 1\n    };\n    user: Observable<User>;\n    startDate: Moment;\n    endDate: Moment;\n    selectedAgent: IAgent;\n    agents: Observable<IAgent[]>;\n    campaigns: Observable<ICampaign[]>;\n    store: DataStore = {} as DataStore;\n    sales$:Subject<DailySale[]> = new Subject<DailySale[]>();\n    sales: Observable<DailySale[]>;\n\n    messages: any[];\n    chartData:any;\n    @ViewChild('chart') chartRef:any;\n    @ViewChild('chartTemplate') private chartTemplate:TemplateRef<any>;\n    @ViewChild('chartContainer', {read: 'ViewContainerRef'}) private vc:ViewContainerRef;\n    isMobileLayout: boolean;\n    portal:TemplatePortal;\n\n    constructor(\n        private session: SessionService,\n        private agentsService: AgentsService, /** we are going to deprecate this soon... 10/22/18 */\n        private dialog: MatDialog,\n        private campaignService: CampaignService,\n        private clientService: ClientService,\n        private dailySaleService: DailySaleTrackerService,\n        public breakpoints: BreakpointObserver,\n        private msg:MessageService,\n        private rend:Renderer2,\n        private agentService:AgentService\n    ) {\n        breakpoints.observe([\n            Breakpoints.HandsetLandscape, \n            Breakpoints.HandsetPortrait\n        ]).subscribe(result => {\n            this.isMobileLayout = result.matches;\n        });\n\n        this.sales = this.sales$.asObservable();\n    }\n\n    ngOnInit() {\n        // we must set the time to 0:00 in order to correctly do calculations, because momentjs \n        // will calculate and round the hours & minutes to the closest day otherwise. \n        const today = moment().hours(0).minutes(0).seconds(0);\n        this.startDate = today.clone().subtract(1, 'week');\n        this.endDate = today.clone().hours(11);\n\n        this.selectedAgent = {};\n        this.session.getUserItem().subscribe(u => {\n            this.store.user = u;\n            this.user = of(u);\n\n            if (u.role.role >= this.roleType.companyAdmin) {\n                this.agentsService.getAgentsByClient(u.sessionUser.sessionClient)\n                    .subscribe((users:User[]) => {\n                        this.store.users = users;\n                        this.store.agents = this.mapUserToAgent(users);\n                        this.agents = of(this.store.agents);\n                        this.selectedAgent = this.store.agents[0];\n                        \n                        this.loadSales();\n                    });\n            } else if (u.role.role == this.roleType.manager || u.role.role == this.roleType.supervisor) {\n\n                /** TODO: FIGURE OUT WHAT NEEDS TO HAPPEN HERE... HOW DO I GET JUST AGENTS FOR THIS USER */\n\n            } else {\n\n                if(this.store.user.agent == null) {\n                    this.agentService.getAgentByUser(this.store.user.sessionUser.sessionClient, this.store.user.id)\n                        .subscribe(agent => {\n                            this.selectedAgent = agent;\n                            \n                            /** After we've gotten a selected agent, let's load the sales */\n                            this.loadSales();\n                        });\n                } else {\n                    this.loadSales();\n                }\n\n            }\n\n        });\n\n        \n    }\n\n    /**\n     * This is our beef cake, work horse method right here that does all the heavy lifting.\n     * \n     * Make sure the user is set and selected agent is set before calling this. \n     */\n    private loadSales():void {\n        this.campaignService.getCampaignsByAgent(this.store.user.sessionUser.sessionClient, this.selectedAgent.agentId)\n            .subscribe(campaigns => {\n                this.store.campaigns = campaigns;\n                this.campaigns = of(campaigns);\n            });\n\n        this.dailySaleService.getDailySalesByAgent(\n            this.store.user.sessionUser.sessionClient,\n            this.selectedAgent.agentId,\n            this.startDate.toDateString(),\n            this.endDate.toDateString()\n        ).subscribe(sales => {\n            this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n            this.sales$.next(this.store.sales);\n\n            this.clientService.getSaleStatuses(this.store.user.sessionUser.sessionClient).subscribe(statuses => {\n                this.store.statuses = statuses;\n                this.createChart(sales);\n            });\n        })\n    }\n\n    ngAfterContentInit() {\n        let chart = this.rend.createElement('canvas');\n        chart.innerHTML = chart;\n\n        // this.portal = new TemplatePortal(this.chartRef.nativeElement, this.viewContainerRef, chart);\n    }\n\n    addChartElement() {\n        \n    }\n\n    mapUserToAgent(users:User[]):IAgent[] {\n        let result:IAgent[] = [];\n        for(let i = 0; i < users.length; i++) {\n            if(users[i].agent == null) continue;\n            result.push(users[i].agent);\n        }\n        return result;\n    }\n\n    getStatus(statusId: number): SaleStatus {\n        if (statusId == null) return {name: null, clientId: null, saleStatusId: null, isActive: null};\n        return (\n            _.find(this.store.statuses, {saleStatusId: statusId}) || {\n                name: null,\n                clientId: null,\n                saleStatusId: null,\n                isActive: null\n            }\n        );\n    }\n\n    getPaidStatus(paidStatusId: number): string {\n        if (paidStatusId == null) return null;\n        var result: string;\n        switch (paidStatusId) {\n            case PaidStatusType.paid:\n                result = 'Paid';\n                break;\n            case PaidStatusType.repaid:\n                result = 'Repaid';\n                break;\n            case PaidStatusType.chargeback:\n                result = 'Chargeback';\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                result = 'Unpaid';\n                break;\n        }\n        return result;\n    }\n\n    isSalePaid(paidStatus: number): boolean {\n        if (paidStatus == null) return false;\n        return paidStatus == PaidStatusType.paid || paidStatus == PaidStatusType.repaid;\n    }\n\n    getBadgeColorFromPaidStatus(payStatus:PaidStatusType):string {\n        if(payStatus == PaidStatusType.unpaid) {\n            return 'badge-warning';\n        } else if(payStatus == PaidStatusType.paid) {\n            return 'badge-success';\n        } else if(payStatus == PaidStatusType.chargeback) {\n            return 'badge-danger';\n        } else if(payStatus == PaidStatusType.repaid) {\n            return 'badge-success';\n        }\n    }\n\n    private createChart(sales: DailySale[]): void {\n        let chartDate = this.startDate.clone();\n        let labels = [],\n            suggestedMax: number = 0;\n\n        const numDays = this.calculateDuration();\n\n        for (let i = 0; i <= numDays; i++) {\n            let checkDate = chartDate.clone().add(i, 'days');\n            labels.push(checkDate.format('l'));\n\n            let salesCount: number = _.filter(sales, (s: DailySale) => {\n                return moment(s.saleDate).isSame(checkDate, 'day');\n            }).length;\n            if (salesCount > suggestedMax) suggestedMax = salesCount + 3;\n        }\n\n        this.createNewChart(suggestedMax, labels, sales);\n    }\n\n    private createNewChart(suggestedMax: number, labels: string[], sales: DailySale[]): void {\n        this.chartData = new Chart(this.chartRef.nativeElement, {\n            type: 'bar',\n            data: {\n                labels: labels,\n                datasets: this.createSaleDataArray(sales)\n            },\n            options: {\n                scales: {\n                    xAxes: [{stacked: true}],\n                    yAxes: [\n                        {\n                            stacked: true,\n                            beginAtZero: true,\n                            ticks: {\n                                suggestedMax: suggestedMax,\n                                min: 0,\n                                stepSize: 1\n                            }\n                        }\n                    ]\n                }\n            }\n        });\n    }\n\n    private updateAngularChartView() {\n        this.vc.detach();\n        this.vc.insert(this.chartTemplate.createEmbeddedView(null));\n    }\n\n    private updateChartDatasets(sales: DailySale[]): void {\n        // TODO: Chart.js Angular bug where the dom element doesn't actually get removed and unable to properly update \n        // the chart.\n        this.chartData.clear();\n        this.chartData.destroy();\n\n        const chartDate = this.startDate.clone();\n        let labels = [];\n        let suggestedMax = 0;\n\n        const numDays = this.calculateDuration();\n\n        for (let i = 0; i <= numDays; i++) {\n            let checkDate = chartDate.clone().add(i, 'days');\n            labels.push(checkDate.format('l'));\n\n            let salesCount: number = _.filter(sales, (s: DailySale) => {\n                return moment(s.saleDate).isSame(checkDate, 'day');\n            }).length;\n            if (salesCount > suggestedMax) suggestedMax = salesCount + 3;\n        }\n\n        this.createNewChart(suggestedMax, labels, sales);\n    }\n\n    private createSaleDataArray(sales: DailySale[]): any[] {\n        let chartDate = this.startDate.clone();\n        let salesData = [];\n\n        this.store.statuses.forEach((s: SaleStatus) => {\n            let columnData = {\n                label: s.name,\n                data: [],\n                backgroundColor: this.randomColor()\n            };\n\n            const numDays = this.calculateDuration();\n\n            // loop through seven days\n            for (let i = 0; i <= numDays; i++) {\n                let checkDate = chartDate.clone().add(i, 'days');\n                let filteredSales = _.filter(sales, (sale: DailySale) => {\n                    return sale.status == s.saleStatusId && moment(sale.saleDate).isSame(checkDate, 'day');\n                });\n                columnData.data.push({\n                    x: checkDate.format('l'),\n                    y: filteredSales.length || 0\n                });\n            }\n\n            salesData.push(columnData);\n        });\n\n        return salesData;\n    }\n\n    /**\n     * Custom method to find the duration including the start/end dates to display on the chart.\n     * \n     */\n    private calculateDuration():number {\n        let start:Moment = this.startDate.clone();\n        let end:Moment = this.endDate.clone();\n        return end.diff(start, 'days');\n    }\n\n    private randomColor(): string {\n        const r = Math.floor(Math.random() * 255);\n        const g = Math.floor(Math.random() * 255);\n        const b = Math.floor(Math.random() * 255);\n        return `rgba(${r}, ${g}, ${b}, 0.5)`;\n    }\n\n    updateDashboard(event: MatDatepickerInputEvent<Moment> = null, isStart: boolean = true): void {\n        \n        if(event != null && event.value != null) {\n            if (isStart) {\n                this.startDate = moment(event.value).hours(0).minutes(0).seconds(0);\n            } else {\n                this.endDate = moment(event.value).hours(11).minutes(0).seconds(0);\n            }\n        }\n\n        const startDate:string = (<Moment>this.startDate.clone()).toDateString();\n        const endDate:string = (<Moment>this.endDate.clone()).toDateString()\n\n        this.dailySaleService\n            .getDailySalesByAgent(\n                this.store.user.id,\n                this.selectedAgent.agentId,\n                startDate,\n                endDate\n            )\n            .subscribe(sales => {\n                this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n                this.handleFilter();\n            });\n    }\n\n    handleAgentChange(event: MatSelectChange): void {\n        this.selectedAgent = _.find(this.store.agents, {agentId: event.value}) as IAgent;\n        this.updateDashboard();\n    }\n\n    showAddSaleDialog(): void {\n        this.dialog\n            .open(AgentAddSaleDialog, {\n                width: '600px',\n                data: {\n                    user: this.store.user,\n                    agent: this.selectedAgent,\n                    campaigns: this.store.campaigns,\n                    statuses: this.store.statuses\n                }\n            })\n            .afterClosed()\n            .subscribe((result:DailySale) => {\n                if (result == null) return;\n\n                const newSale:boolean = result.dailySaleId == null || result.dailySaleId < 1;\n                \n                this.dailySaleService\n                    .createDailySale(this.store.user.sessionUser.sessionClient, result)\n                    .subscribe(sale => {\n                        let existing = _.findIndex(this.store.sales, {dailySaleId: sale.dailySaleId});\n\n                        if (newSale) {\n                            /** If the array in the store isn't instaniated */\n                            if(this.store.sales == null) this.store.sales = [];\n\n                            this.store.sales.push(sale);\n                            this.store.sales = _.orderBy(this.store.sales, ['saleDate'], ['desc']);\n                        } else {\n                            this.store.sales[existing] = sale;\n                        }\n\n                        this.handleFilter();\n                    });\n            });\n    }\n\n    handleFilter(event:MatButtonToggleChange = null) {\n        if(event != null) this.selectedFilter = event.value;\n\n        if(this.selectedFilter == -1) {\n            this.updateChartDatasets(this.store.sales);\n            this.sales$.next(this.store.sales);\n        } else {\n            let filteredSales = _.filter(this.store.sales, (sale:DailySale) => {\n                return sale.paidStatus == this.selectedFilter;\n            });\n\n            this.updateChartDatasets(filteredSales);\n            this.sales$.next(this.store.sales);\n        }\n    }\n\n}\n\n\n","module.exports = \"\\n<h3 mat-dialog-title>\\n    Add Sale\\n    <button type=\\\"button\\\" class=\\\"float-right\\\" mat-icon-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">\\n        <mat-icon>clear</mat-icon>\\n    </button>\\n</h3>\\n<p class=\\\"text-muted\\\">\\n    All fields denoted with * are required.\\n</p>\\n<mat-dialog-content class=\\\"add-daily-sale-form\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n        <!-- CAMPAIGN AND SALE DATE -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <mat-select placeholder=\\\"Campaign\\\" formControlName=\\\"campaignId\\\" required>\\n                        <mat-option *ngFor=\\\"let c of campaigns\\\" [value]=\\\"c.campaignId\\\">\\n                            {{c.name}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('campaignId').hasError('required') && (form.get('campaignId').touched || submitted)\\\">\\n                        Please select a campaign\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input \\n                        matInput\\n                        [matDatepicker]=\\\"saleDatepicker\\\"\\n                        placeholder=\\\"Sale Date\\\"\\n                        formControlName=\\\"saleDate\\\"\\n                        required\\n                    />\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"saleDatepicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #saleDatepicker></mat-datepicker>\\n                    <mat-error *ngIf=\\\"form.get('saleDate').hasError('required') && (form.get('saleDate').touched || submitted)\\\">\\n                        Please select a sale date\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row my-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <span>Customer Information</span>\\n                <mat-divider></mat-divider>\\n            </div>\\n        </div>\\n\\n        <!-- POD/ACCOUNT -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"POD/Account\\\" formControlName=\\\"podAccount\\\" (blur)=\\\"checkUniqueAccount()\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('podAccount').hasError('required') && (form.get('podAccount').touched || submitted)\\\">\\n                        Please enter a POD or Account No\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form.get('podAccount').hasError('notUnique') && (form.get('podAccount').touched || submitted)\\\">\\n                        Please enter a unique Account No\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER NAME  -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('firstName').hasError('required') && (form.get('firstName').touched || submitted)\\\">\\n                        Please enter a first name\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('lastName').hasError('required') && (form.get('lastName').touched || submitted)\\\">\\n                        Please enter a last name\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER ADDRESS -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Address\\\" formControlName=\\\"street\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('street').hasError('required') && (form.get('street').touched || submitted)\\\">\\n                        Please enter a street address\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Apt/Suite/Unit\\\" formControlName=\\\"street2\\\" />\\n                    <mat-hint>Optional</mat-hint>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <!-- CUSTOMER ADDRESS CON'T -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('city').hasError('required') && (form.get('city').touched || submitted)\\\">\\n                        Please enter a city\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                    <mat-select formControlName=\\\"state\\\" placeholder=\\\"State\\\" required>\\n                        <mat-option *ngFor=\\\"let s of states\\\" [value]=\\\"s.abbreviation\\\">\\n                            {{s.name}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"form.get('state').hasError('required') && (form.get('state').touched || submitted)\\\">\\n                        Please select a state\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Postal Code\\\" formControlName=\\\"zip\\\" required />\\n                    <mat-error *ngIf=\\\"form.get('zip').hasError('required') && (form.get('zip').touched || submitted)\\\">\\n                        Please enter a zip code\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n    </form>\\n</mat-dialog-content>\\n<mat-dialog-actions class=\\\"d-flex justify-content-between\\\">\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button\\n        mat-raised-button\\n        (click)=\\\"saveAgentSale()\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"form.invalid\\\"\\n    >Save</button>\\n</mat-dialog-actions>\"","module.exports = \".add-daily-sale-form mat-form-field {\\n  display: block; }\\n\\n.add-daily-sale-form /deep/ .mat-form-field-infix {\\n  width: 100%; }\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { IAgent, ICampaign, DailySale, User, SaleStatus, PaidStatusType } from \"@app/models\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { IState, States } from \"@app/shared/models/state.model\";\nimport { DailySaleTrackerService } from '@app/daily-sale-tracker/daily-sale-tracker.service';\nimport { MessageService } from '@app/message.service';\n\ninterface DialogData {\n    user:User,\n    agent:IAgent,\n    campaigns:ICampaign[],\n    statuses:SaleStatus[]\n}\n\n@Component({\n    selector: 'vs-agent-sale-dialog',\n    templateUrl: './add-sale-dialog.component.html',\n    styleUrls: ['./add-sale-dialog.component.scss']\n})\nexport class AgentAddSaleDialog implements OnInit {\n    user:User;\n    form:FormGroup;\n    agent:IAgent;\n    campaigns:ICampaign[];\n    statuses:SaleStatus[];\n    submitted:boolean;\n    states:IState[] = States.$get();\n\n    constructor(\n        public ref:MatDialogRef<AgentAddSaleDialog>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        private fb:FormBuilder,\n        private dailySaleService:DailySaleTrackerService\n    ) {}\n\n    ngOnInit() {\n        this.agent = this.data.agent || {} as IAgent;\n        this.campaigns = this.data.campaigns || [];\n        this.user = this.data.user || {} as User;\n        this.statuses = this.data.statuses || [];\n\n        this.createForm();\n    }\n\n    saveAgentSale():void {\n        this.submitted = true;\n\n        if (this.form.invalid) return;\n\n        this.ref.close(this.prepareModel());\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    checkUniqueAccount():void { \n        const account = this.form.value.podAccount;\n        if(account == null || account.length < 1) return;\n        this.dailySaleService.checkUniquePodAccount(account)\n            .subscribe((unique:boolean) => {\n                if(!unique)\n                    this.form.controls.podAccount.setErrors({ 'notUnique': true });\n            }); \n    }\n\n    private createForm():void { \n        this.form = new FormGroup({\n            saleDate: this.fb.control(moment().format('YYYY-MM-DD'), [Validators.required]),\n            agentId: this.fb.control(this.agent.agentId, [Validators.required]),\n            campaignId: this.fb.control({value:this.campaigns[0].campaignId, disabled: this.campaigns.length < 2}, [Validators.required]),\n            podAccount: this.fb.control('', [Validators.required]),\n            firstName: this.fb.control('', [Validators.required]),\n            lastName: this.fb.control('', [Validators.required]),\n            street: this.fb.control('', [Validators.required]),\n            street2: this.fb.control(''),\n            city: this.fb.control('', [Validators.required]),\n            state: this.fb.control('', [Validators.required]),\n            zip: this.fb.control('', [Validators.required])\n        });\n    }\n\n    private prepareModel():DailySale {\n        let pendingStatusQuery = _.find(this.statuses, (s:SaleStatus) => {\n            return s.name.toLowerCase() == 'pending';\n        }).saleStatusId;\n        return {\n            dailySaleId: null,\n            agentId: this.form.value.agentId,\n            campaignId: this.form.value.campaignId,\n            clientId: this.user.sessionUser.sessionClient,\n            firstName: this.form.value.firstName,\n            lastName: this.form.value.lastName,\n            street: this.form.value.street,\n            street2: this.form.value.street2,\n            city: this.form.value.city,\n            state: this.form.value.state,\n            zip: this.form.value.zip,\n            status: pendingStatusQuery || -1,\n            paidStatus: PaidStatusType.unpaid,\n            podAccount: this.form.value.podAccount,\n            remarks: [],\n            saleDate: this.form.value.saleDate\n        }\n    }\n}","module.exports = \"\\n<button\\n  mat-fab\\n  [ngClass]=\\\"{'vfb-resting': !(isOpen | async), 'vfb-open': (isOpen | async), 'bottom-left':bottomLeft, 'bottom-right':bottomRight, 'top-left':topLeft, 'top-right':topRight}\\\"\\n  [attr.color]=\\\"colorType\\\"\\n  color=\\\"accent\\\"\\n  [attr.disabled]=\\\"disabled\\\"\\n  (click)=\\\"onClick()\\\"\\n>\\n  <mat-icon [attr.aria-label]=\\\"ariaLabel\\\">{{matIcon}}</mat-icon>\\n</button>\\n\"","module.exports = \"/*-------------------------------*\\\\\\n  #VARS\\n\\\\*-------------------------------*/\\n/*-------------------------------*\\\\\\n  #BASE | Raw Styles\\n\\\\*-------------------------------*/\\n/**\\n * CORE BUTTON STYLES\\n */\\n.top-left, .top-right, .bottom-left, .bottom-right {\\n  margin: 25px;\\n  position: fixed;\\n  white-space: nowrap; }\\n/*-------------------------------*\\\\\\n  #BASE | Modifiers\\n\\\\*-------------------------------*/\\n.top-left {\\n  left: 0;\\n  top: 0; }\\n.top-right {\\n  right: 0;\\n  top: 0; }\\n.bottom-left {\\n  left: 0;\\n  bottom: 0; }\\n.bottom-right {\\n  right: 0;\\n  bottom: 0; }\\n/*------------------------------------*\\\\\\n    #BUTTONS | Modifiers\\n\\\\*------------------------------------*/\\n.vfb-resting, .vfb-active {\\n  -webkit-transform: scale(1) rotate(360deg);\\n  transform: scale(1) rotate(360deg);\\n  transition: -webkit-transform 150ms cubic-bezier(0.4, 0, 1, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 1, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 1, 1); }\\n.vfb-open {\\n  -webkit-transform: scale(1) rotate(45deg);\\n  transform: scale(1) rotate(45deg);\\n  transition: -webkit-transform 150ms cubic-bezier(0.4, 0, 1, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 1, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 1, 1); }\\n\"","import { Component, OnInit, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n  selector: 'vs-float-button',\n  templateUrl: './fab-float-btn.component.html',\n  styleUrls: ['./fab-float-btn.component.scss']\n})\nexport class FabFloatBtnComponent implements OnInit {\n  @Output() callback:EventEmitter<any> = new EventEmitter();\n  @Input() isOpen:Observable<boolean>;\n\n  colorType:string;\n  ariaLabel:string;\n  matIcon:string;\n  isMini:boolean;\n  disabled:string;\n  position:string;\n\n  topLeft:boolean;\n  topRight:boolean;\n  bottomLeft:boolean;\n  bottomRight:boolean;\n\n  buttonType:string;\n\n  constructor(el:ElementRef) {\n    let element = el.nativeElement;\n    this.colorType = element.getAttribute('color') || null;\n    this.ariaLabel = element.getAttribute('aria-label') || null;\n    this.matIcon = element.getAttribute('mat-icon') || null;\n    this.isMini = element.getAttribute('is-mini') != null ? true : false;\n    this.disabled = element.getAttribute('disabled') != null ? 'disabled' : 'false';\n    this.position = element.getAttribute('position');\n    this.topLeft = this.position == 'tl';\n    this.topRight = this.position == 'tr';\n    this.bottomLeft = this.position == 'bl';\n    this.bottomRight = this.position == 'br'\n      ? true\n      : (!this.topLeft && !this.topRight && !this.bottomLeft)\n      ? true\n      : false;\n  }\n\n  ngOnInit() {\n    this.buttonType = this.isMini ? 'mat-mini-fab' : 'mat-fab';\n  }\n\n  onClick():void {\n    // call the callback!\n    this.callback.emit('any');\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {FabFloatBtnComponent} from '@app/fab-float-btn/fab-float-btn.component';\nimport {CommonModule} from '@angular/common';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from '@app/material/material.module';\nimport {BrowserModule} from '@angular/platform-browser';\n\n@NgModule({\n    imports: [CommonModule, BrowserModule, BrowserAnimationsModule, MaterialModule],\n    declarations: [FabFloatBtnComponent],\n    exports: [FabFloatBtnComponent]\n})\nexport class FabFloatBtnModule {\n    constructor() {}\n}\n","import {Injectable} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class FloatBtnService {\n    private _opened:boolean;\n    opened$:Subject<boolean> = new Subject<boolean>();\n\n    constructor() {}\n\n    toggle(opened?:boolean):void {\n        let value = opened || !this._opened;\n        this._opened = value;\n        this.opened$.next(this._opened);\n    }\n\n    open():void {\n        this._opened = true;\n        this.opened$.next(true);\n    }\n\n    close():void {\n        this._opened = false;\n        this.opened$.next(false);\n    }\n}\n","module.exports = \".toolbar-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.toolbar-icon {\\n  padding: 0 14px;\\n}\\n\\n.mat-menu-item {\\n  font-size: .85rem;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mb-4\\\">\\n  <mat-toolbar-row>\\n    <span *ngIf=\\\"(loggedInStatus | async)\\\">\\n      <button mat-icon-button (click)=\\\"toggleSidenav()\\\">\\n        <mat-icon>{{(navOpen|async) ? 'arrow_back_ios' : 'menu'}}</mat-icon>\\n      </button>\\n    </span>\\n    <span routerLink=\\\"/\\\">{{menuTitle | async}}</span>\\n    <span class=\\\"toolbar-spacer\\\"></span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" *ngIf=\\\"(loggedInStatus | async); else loggedOut\\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\" class=\\\"mat-menu\\\">\\n      <button mat-menu-item *ngIf=\\\"(loggedInStatus | async) && showClientSelector\\\" (click)=\\\"openDialog()\\\">Change Client</button>\\n      <!-- <button mat-menu-item *ngIf=\\\"isAdmin\\\"></button> -->\\n      <button mat-menu-item (click)=\\\"onLogout()\\\" *ngIf=\\\"(loggedInStatus | async)\\\">Logout</button>\\n      <!-- <ng-template #loggedOut><button mat-menu-item routerLink=\\\"/login\\\"> Login </button></ng-template> -->\\n    </mat-menu>\\n    <ng-template #loggedOut>\\n        <button type=\\\"button\\\" mat-icon-button [routerLink]=\\\"['/login']\\\">\\n            <mat-icon>exit_to_app</mat-icon>\\n        </button>\\n    </ng-template>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\"","import {Component, OnInit, Input, AfterViewInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {SessionService} from '../session.service';\nimport {User} from '../models/user.model';\nimport {MatSidenav, MatDialog} from '@angular/material';\nimport {ClientSelectorComponent} from '../client-selector/client-selector.component';\nimport {Router} from '@angular/router';\nimport {UserService} from '../user-features/user.service';\nimport { SidenavService } from '@app/sidenav/sidenav.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, AfterViewInit {\n    private defaultTitle: string = 'Verostack Dynamics';\n\n    isLoggedIn: boolean;\n    user: User;\n    isAdmin: boolean;\n    menuTitle: BehaviorSubject<string> = new BehaviorSubject<string>(this.defaultTitle);\n    showClientSelector: boolean;\n    loggedInStatus: Observable<boolean>;\n    navOpen:Observable<boolean>;\n\n    constructor(\n        private authService: AuthService,\n        private userService: UserService,\n        private session: SessionService,\n        private dialog: MatDialog,\n        private router: Router,\n        private sidenavService:SidenavService\n    ) {\n        this.loggedInStatus = this.session.isLoginSubject.asObservable();\n        this.loggedInStatus.subscribe((authenticated: boolean) => {\n            if (!authenticated) {\n                this.menuTitle.next(this.defaultTitle);\n            }\n        });\n        this.session.userItem.subscribe((next: User) => {\n            this.user = next;\n            this.menuTitle.next(this.user.sessionUser.client.name);\n            if (this.user.clients.length > 1) this.showClientSelector = true;\n            this.isAdmin = this.user.role.role > 6;\n        });\n        this.navOpen = this.sidenavService.opened$.asObservable();\n    }\n\n    ngOnInit() {\n        this.session.getItem('user');\n    }\n\n    ngAfterViewInit() {\n        // this.sidenav.\n    }\n\n    onLogout() {\n        this.authService.logout().then((url: string) => {\n            this.session.navigateByUrl(url);\n        });\n    }\n\n    /**\n     * Uses session service to toggle side nav\n     */\n    toggleSidenav(): void {\n        this.sidenavService.toggle();\n    }\n\n    openDialog(): void {\n        let dialogRef = this.dialog.open(ClientSelectorComponent, {\n            width: '400px',\n            data: this.user\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            // console.log('dialog was closed');\n        });\n    }\n}\n","module.exports = \".spinner {\\n  position: fixed;\\n  padding: 0px;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  z-index: 9998;\\n  background: #000;\\n  opacity: 0.6;\\n  transition: opacity 0.3s linear;\\n}\\n\\n.center {\\n  margin: auto;\\n  width: 100%;\\n}\\n\\n.loading-text {\\n  position: fixed;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  padding: 0;\\n  margin: 0;\\n  color: #FFF;\\n  font-family: sans-serif;\\n  background: transparent;\\n  text-align: center;\\n  padding-top: 33%;\\n}\\n\\n.spinner img {\\n  position: fixed;\\n  padding: 0px;\\n  /* height: 100%; width: 100%; top: 0; left: 0; */\\n  z-index: 10;\\n  background: #000;\\n  opacity: 0.6;\\n  transition: opacity 0.3s linear;\\n}\\n\\n.hidden {\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: visibility 0s 0.3s, opacity 0.3s linear;\\n}\\n\\n.visible {\\n  visibility: visible;\\n}\\n\\n.lds-roller {\\n  display: inline-block;\\n  position: relative;\\n  width: 64px;\\n  height: 64px;\\n  left: 48%;\\n  top: 47%;\\n}\\n\\n.lds-roller div {\\n  -webkit-animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n          animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n  -webkit-transform-origin: 32px 32px;\\n          transform-origin: 32px 32px;\\n}\\n\\n.lds-roller div:after {\\n  content: \\\\\\\" \\\\\\\";\\n  display: block;\\n  position: absolute;\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 50%;\\n  background: #fff;\\n  margin: -3px 0 0 -3px;\\n}\\n\\n.lds-roller div:nth-child(1) {\\n  -webkit-animation-delay: -0.036s;\\n          animation-delay: -0.036s;\\n}\\n\\n.lds-roller div:nth-child(1):after {\\n  top: 50px;\\n  left: 50px;\\n}\\n\\n.lds-roller div:nth-child(2) {\\n  -webkit-animation-delay: -0.072s;\\n          animation-delay: -0.072s;\\n}\\n\\n.lds-roller div:nth-child(2):after {\\n  top: 54px;\\n  left: 45px;\\n}\\n\\n.lds-roller div:nth-child(3) {\\n  -webkit-animation-delay: -0.108s;\\n          animation-delay: -0.108s;\\n}\\n\\n.lds-roller div:nth-child(3):after {\\n  top: 57px;\\n  left: 39px;\\n}\\n\\n.lds-roller div:nth-child(4) {\\n  -webkit-animation-delay: -0.144s;\\n          animation-delay: -0.144s;\\n}\\n\\n.lds-roller div:nth-child(4):after {\\n  top: 58px;\\n  left: 32px;\\n}\\n\\n.lds-roller div:nth-child(5) {\\n  -webkit-animation-delay: -0.18s;\\n          animation-delay: -0.18s;\\n}\\n\\n.lds-roller div:nth-child(5):after {\\n  top: 57px;\\n  left: 25px;\\n}\\n\\n.lds-roller div:nth-child(6) {\\n  -webkit-animation-delay: -0.216s;\\n          animation-delay: -0.216s;\\n}\\n\\n.lds-roller div:nth-child(6):after {\\n  top: 54px;\\n  left: 19px;\\n}\\n\\n.lds-roller div:nth-child(7) {\\n  -webkit-animation-delay: -0.252s;\\n          animation-delay: -0.252s;\\n}\\n\\n.lds-roller div:nth-child(7):after {\\n  top: 50px;\\n  left: 14px;\\n}\\n\\n.lds-roller div:nth-child(8) {\\n  -webkit-animation-delay: -0.288s;\\n          animation-delay: -0.288s;\\n}\\n\\n.lds-roller div:nth-child(8):after {\\n  top: 45px;\\n  left: 10px;\\n}\\n\\n@-webkit-keyframes lds-roller {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes lds-roller {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\"","module.exports = \"<div #spinnerContainer [ngClass]=\\\"{'visible': showSpinner, 'hidden': !showSpinner, 'spinner': true, 'center': true}\\\" [innerHTML]=\\\"template\\\"></div>\\n<h1 [style.zIndex]=\\\"zIndex\\\" [ngClass]=\\\"{'visible': showSpinner, 'hidden': !showSpinner, 'loading-text': true}\\\"> {{loadingText}} </h1>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingSpinnerService } from './loading-spinner.service';\n\n@Component({\n  selector: 'vero-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  showSpinner: boolean;\n  loadingText = '';\n  zIndex = 9999;\n  template = \"\\n  <div class=\\\"lds-roller\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\";\n\n  constructor(private service: LoadingSpinnerService) { }\n\n  ngOnInit() {\n    this.service.showSpinner.subscribe((next: boolean) => {\n      this.showSpinner = next;\n    });\n  }\n\n  show(): void {\n    this.service.show();\n  }\n\n  hide(): void {\n    this.service.hide();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoadingSpinnerService {\n\n  showSpinner: Observable<boolean>;\n  private showSpinner$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor() {\n    this.showSpinner = this.showSpinner$.asObservable();\n  }\n\n  show(): void {\n    this.showSpinner$.next(true);\n  }\n\n  hide(): void {\n    this.showSpinner$.next(false);\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-sm-4\\\" [ngClass]=\\\"{'text-center': pageLoading}\\\">\\n    <div class=\\\"card\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"dist/assets/images/login.png\\\" alt=\\\"Login image\\\">\\n      <div class=\\\"card-body\\\">\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" novalidate class=\\\"login-container\\\">\\n          <mat-form-field floatLabel=\\\"true\\\" hintLabel=\\\"We'll never share your login credentials.\\\">\\n            <input matInput name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" placeholder=\\\"username\\\" required [disabled]=lockLoginInputs />\\n            <mat-error *ngIf=\\\"username.invalid\\\">{{getErrorMessage()}}</mat-error>\\n          </mat-form-field>\\n          <mat-form-field floatLabel=\\\"password\\\">\\n            <input matInput name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" placeholder=\\\"password\\\" required type=\\\"password\\\" [disabled]=lockLoginInputs />\\n            <mat-error *ngIf=\\\"password.invalid\\\">{{getErrorMessage()}}</mat-error>\\n          </mat-form-field>\\n          <button mat-button [disabled]=lockLoginInputs>Login</button>\\n        </form>\\n        <mat-progress-bar *ngIf=\\\"lockLoginInputs\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".card-img-top {\\n  margin: auto;\\n  width: 50%;\\n  padding: 10px 5px 0 5px; }\\n\\n.login-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.login-container > * {\\n  width: 100%; }\\n\\n.card {\\n  margin: 1.25rem; }\\n\"","import {Component, OnInit, AfterViewChecked} from '@angular/core';\nimport {FormControl, Validators, NgForm} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {SessionService} from '../session.service';\n\nimport * as moment from 'moment';\n\nimport {User, IToken, ILocalStorage} from '../models/index';\nimport {UserService} from '../user-features/user.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, AfterViewChecked {\n    pageLoading: boolean;\n    lockLoginInputs: boolean = false;\n    redirectQueue: string[] = [];\n\n    user: User;\n\n    username = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required]);\n\n    constructor(\n        public authService: AuthService,\n        private session: SessionService,\n        private userService: UserService    ) {}\n\n    ngOnInit() {\n        this.userService.user.subscribe((next: User) => {\n            this.user = next;\n            this.session.hideLoader();\n        });\n    }\n\n    ngAfterViewChecked() {}\n\n    ngOnDestroy() {\n        this.lockLoginInputs = false;\n    }\n\n    onSubmit(f: NgForm) {\n        this.session.showLoader();\n        // this.usernameInput = f.value.username;\n\n        let loginData:any = {\n            //   grant_type: 'password',\n            // client_id: 3,\n            //   client_secret: 'qHZzQxduSU92Vgb0hBwLcx4W4jjKWf5lykM0bxnm',\n            username: f.value.username,\n            password: f.value.password,\n            // scope: ''\n        };\n\n        if (f.form.valid) {\n            this.lockLoginInputs = true;\n            this.pageLoading = true;\n\n            this.authService.ngLogin(loginData).subscribe(response => {\n                this.pageLoading = false;\n                this.lockLoginInputs = false;\n\n                const sessionToken:ILocalStorage<IToken> = {\n                    data: { access_token: response.token } as IToken,\n                    expires: moment().valueOf() + 1000 * (60 * 24 * 3)\n                };\n\n                this.session.login(sessionToken);\n                this.userService.storeNgUser(response.user);\n            });\n\n            // this.authService\n            //     .login(loginData)\n            //     .then(data => {\n            //         this.pageLoading = false;\n            //         this.lockLoginInputs = false;\n\n            //         let token: ILocalStorage<IToken> = <ILocalStorage<IToken>>{\n            //             data: data,\n            //             expires: moment().valueOf() + 1000 * (60 * 24 * 3)\n            //         };\n\n            //         this.session.login(token);\n            //         this.userService.loadUser(this.usernameInput);\n            //         // TODO: this isn't working yet... need to re-work login routing\n            //         // this.session.navigateTo(this.session.navigateQueue[0]);\n            //     })\n            //     .catch(err => {\n            //         this.pageLoading = false;\n            //         this.lockLoginInputs = false;\n\n            //         this.session.clearStorage();\n            //         let friendlyResponse = ' Please check your credentials and try again.';\n            //         this.msg.addMessage(err.message + friendlyResponse, 'close');\n            //         this.session.hideLoader();\n            //     });\n        }\n    }\n\n    loginHandler() {\n        this.pageLoading = false;\n    }\n\n    getErrorMessage() {\n        return this.username.hasError('required')\n            ? 'You must enter a value'\n            : this.password.hasError('required')\n                ? 'You must enter a value'\n                : '';\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { NgControl, NgModel } from '@angular/forms';\n\n/**\n * https://stackoverflow.com/questions/37800841/input-mask-fields-in-angular2-forms\n * This isn't working yet, need to better understand how directives interact with input fields.\n *\n*/\n@Directive({\n  selector: '[ngModel][maskssn]',\n  host: {\n    '(ngModelChange)': 'onInputChange($event)',\n    '(keydown.baskspace)': 'onInputChange($event.target.value, true)'\n  }\n})\nexport class MaskSsn implements OnInit {\n  ssn: string;\n\n  constructor(public model: NgModel) {}\n\n  ngOnInit() {\n    if(this.model.model.length > 0 && this.model.model.length < 12) {\n      this.ssn = this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9);\n      this.model.valueAccessor.writeValue(this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9));\n    }\n  }\n\n  onInputChange(event, backspace) {\n    // remove all casting characters and set ssn value to new value\n    for(var i = 0; i < event.length; i++) {\n      let pos = event.charAt(i);\n      if(isNaN(parseInt(pos, 10))) {\n        event = event.replaceAt(pos, this.model.value.charAt(i));\n      }\n      this.ssn = event;\n    }\n\n    this.model.valueAccessor.writeValue(this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatBadgeModule,\n} from '@angular/material';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatMomentDateModule\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class MaterialModule { }\n","import {Injectable} from '@angular/core';\nimport {MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatSnackBarConfig} from '@angular/material';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {SessionService} from '@app/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessageService {\n    messages: string[] = [];\n    openBar: MatSnackBarRef<SimpleSnackBar> = null;\n\n    constructor(private bar: MatSnackBar, private session: SessionService) {}\n\n    /**\n     * @param message string\n     * @param action string @default 'dismiss'\n     * @param duration number @default null Results in message that will not disappear until \n     * explicitly closed by the user. \n     */\n    addMessage(message: string, action:string = 'dismiss', duration:number = null): void {\n        let options = duration > 0 ? {duration: duration} : {};\n        this.openBar = this.bar.open(message, action, options);\n        this.session.hideLoader();\n    }\n\n    dismissSnackBar = () => this.openBar.dismiss();\n\n    showWebApiError = (e: HttpErrorResponse): void => {\n        let msg = e != null ? e.error.message : e.statusText != null ? e.statusText : e.message;\n        this.openBar = this.bar.open(msg, 'dismiss');\n        this.session.hideLoader();\n    };\n\n    showObserverError<T>(e: any, caught: T): T {\n        let msg = e != null ? e.error.message : e.statusText != null ? e.statusText : e.message;\n        this.openBar = this.bar.open(msg, 'dismiss');\n        this.session.hideLoader();\n        return caught;\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: string[];\n\n  constructor(public messageService: MessageService, public bar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.messages = this.messageService.messages;\n  }\n\n}\n","import * as moment from 'moment';\n\nexport interface IAgentSale {\n  agentSalesId: number,\n  agentName?: string,\n  invoiceId: number,\n  agentId: number,\n  saleDate: string,\n  firstName: string,\n  lastName: string,\n  address: string,\n  city: string,\n  state: string,\n  postalCode: string,\n  statusType: number,\n  amount: number,\n  note: string,\n  createdAt?: Date,\n  updatedAt?: Date\n}\n\nexport class AgentSale implements IAgentSale {\n  agentSalesId = null;\n  agentName = null;\n  invoiceId = null;\n  agentId = null;\n  saleDate = null;\n  firstName = null;\n  lastName = null;\n  address = null;\n  city = null;\n  state = null;\n  postalCode = null;\n  statusType = null;\n  amount = null;\n  note = null;\n  createdAt = null;\n  updatedAt = null;\n\n  constructor(values:string[] = null) {\n\n    if(Array.isArray(values) && values.length > 7) {\n      this.saleDate = moment(values[0], 'MM-DD-YYYY').format('YYYY-MM-DD');\n      this.firstName = values[1];\n      this.lastName = values[2];\n      this.address = values[3];\n      this.city = values[4];\n      this.state = values[5] != null ? values[5].toUpperCase() : values[5];\n      this.postalCode = values[6];\n      this.statusType = (values[7].toLowerCase().replace(' ', '').indexOf('accept') > -1).toString();\n      this.amount = this.statusType == 'true' ? values[8] : 0;\n    }\n    return this;\n\n  }\n}\n","import { IState } from '@app/shared/models/state.model';\n\nexport type CampaignFilterActiveStatus = 'active' | 'inactive' | 'all';\n\nexport enum CompOperator {\n    Equals, LessThan, GreaterThan, LessThanEqualTo, GreaterThanEqualTo\n}\n\nexport interface CampaignFilters {\n    activeStatus: CampaignFilterActiveStatus,\n    compensation:number,\n    compOperator:CompOperator,\n    location:IState\n}","import { Moment } from \"moment\";\nimport { Remark } from \"@app/models\";\n\nexport enum PaidStatusType {\n  unpaid,\n  paid,\n  chargeback,\n  repaid\n}\n\nexport interface DailySale {\n  dailySaleId?:number,\n  agentId:number,\n  clientId:number,\n  campaignId:number,\n  podAccount:number,\n  firstName:string,\n  lastName:string,\n  street:string,\n  street2:string,\n  city:string,\n  state:string,\n  zip:number,\n  status:number,\n  paidStatus:number,\n  saleDate:Date | string | Moment,\n  paidDate?:Date | string | Moment,\n  chargeDate?:Date | string | Moment,\n  repaidDate?:Date | string | Moment,\n  lastTouchDate?:Date | string | Moment,\n  notes?:string\n  remarks:Remark[]\n}\n","\nexport * from './client.model';\nexport * from './sessionuser.model';\nexport * from './http-error.model';\nexport * from './token.model';\nexport * from './user.model';\nexport * from './weather.model';\nexport * from './onboarding.model';\nexport * from './user-details.model';\nexport * from './campaign.model';\nexport * from './payroll-map.model';\nexport * from './override.model';\nexport * from './agent.model';\nexport * from './expense.model';\nexport * from './override.model';\nexport { IAgentSale, AgentSale } from './agent-sales.model';\nexport * from './invoice.model';\nexport * from './local-storage.model';\nexport * from './daily-sale.model';\nexport * from './sale-status.model';\nexport * from './remark.model';\nexport * from './auth-response.model';\n","import {Moment} from '@app/shared/moment-extensions';\n\nexport interface IUserRole {\n    id: number;\n    type: string;\n    active: boolean;\n}\n\nexport interface IRole {\n    user_id: number;\n    role: number;\n    isSalesAdmin:boolean,\n    created_at: number;\n    updated_at: number;\n}\n\nexport interface RoleType {\n    id: number;\n    type: string;\n    active: boolean;\n    createdAt?: Date | Moment | string;\n    updatedAt?: Date | Moment | string;\n}\n\nexport enum UserRole {\n    user,\n    supervisor,\n    manager,\n    regionalManager,\n    humanResources,\n    companyAdmin,\n    systemAdmin\n}\n","module.exports = \"\\n<mat-card>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"save(f)\\\">\\n    <mat-card-header class=\\\"justify-content-between\\\">\\n      <mat-card-title>\\n        <h2>Welcome, {{welcome}}.</h2>\\n      </mat-card-title>\\n      <mat-card-subtitle>\\n        <p *ngIf=\\\"weather === undefined\\\" class=\\\"text-muted weather-placeholder\\\">Your weather is loading...</p>\\n        <p *ngIf=\\\"weather !== undefined\\\" class=\\\"weather-placeholder\\\">\\n          Today looks like a low of {{minTemp}} and high of {{maxTemp}} near {{weather.name}} <img src=\\\"https://openweathermap.org/img/w/{{weather.weather[0].icon}}.png\\\" />\\n        </p>\\n      </mat-card-subtitle>\\n      <mat-slide-toggle\\n        [ngClass]=\\\"{'float-right': true, 'text-muted': !editProfile, 'text-light': editProfile}\\\"\\n        [checked]=\\\"editProfile\\\"\\n        (change)=\\\"changeEditMode(f)\\\"\\n        [disabled]=\\\"f.touched\\\"\\n        color=\\\"primary\\\"\\n      ></mat-slide-toggle>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"flex-column\\\">\\n      <h5 class=\\\"mb-2\\\">User Details</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <mat-form-field>\\n                <mat-label>First Name</mat-label>\\n                <input type=\\\"text\\\" name=\\\"firstName\\\"\\n                  [ngModel]=\\\"(user$ | async).firstName\\\"\\n                  (ngModelChange)=\\\"user.firstName=$event\\\"\\n                  matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Last Name</mat-label>\\n                <input type=\\\"text\\\" name=\\\"lastName\\\"\\n                  [ngModel]=\\\"(user$ | async).lastName\\\"\\n                  (ngModelChange)=\\\"user.lastName=$event\\\"\\n                  matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Username</mat-label>\\n                <input type=\\\"text\\\" name=\\\"username\\\"\\n                  matInput\\n                  [ngModel]=\\\"(user$ | async).username\\\"\\n                  disabled\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Email</mat-label>\\n                <input type=\\\"text\\\" name=\\\"email\\\"\\n                  [(ngModel)]=\\\"user.email\\\"\\n                  [ngModel]=\\\"(user$ | async).email\\\"\\n                  (ngModelChange)=\\\"user.email=$event\\\"\\n                  matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <mat-form-field>\\n                <mat-label>Street Address</mat-label>\\n                <input type=\\\"text\\\" name=\\\"street\\\"\\n                  [ngModel]=\\\"(detail$ | async).street\\\"\\n                  (ngModelChange)=\\\"detail.street=$event\\\" matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Apt/Suite</mat-label>\\n                <input type=\\\"text\\\" name=\\\"street2\\\"\\n                  [ngModel]=\\\"(detail$ | async).street2\\\"\\n                  (ngModelChange)=\\\"detail.street2=$event\\\" matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>City</mat-label>\\n                <input type=\\\"text\\\" name=\\\"city\\\"\\n                  [ngModel]=\\\"(detail$ | async).city\\\"\\n                  (ngModelChange)=\\\"detail.city=$event\\\" matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>State</mat-label>\\n                <input type=\\\"text\\\" name=\\\"state\\\"\\n                  [ngModel]=\\\"(detail$ | async).state\\\"\\n                  (ngModelChange)=\\\"detail.state=$event\\\" matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Zip Code</mat-label>\\n                <input type=\\\"text\\\" name=\\\"zip\\\"\\n                  [ngModel]=\\\"(detail$ | async).zip\\\"\\n                  (ngModelChange)=\\\"detail.zip=$event\\\" matInput\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n              <mat-label>Phone Number</mat-label>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" matInput\\n                  [ngModel]=\\\"(detail$ | async).phone\\\"\\n                  (ngModelChange)=\\\"detail.phone=$event\\\"\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Date of Birth</mat-label>\\n                <input type=\\\"text\\\" name=\\\"birthDate\\\" matInput\\n                  [ngModel]=\\\"(detail$ | async).birthDate | date:'shortDate'\\\"\\n                  (ngModelChange)=\\\"detail.birthDate=$event\\\"\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Social Security Number</mat-label>\\n                <input type=\\\"text\\\" name=\\\"ssn\\\" matInput\\n                  [ngModel]=\\\"(detail$ | async).ssn\\\"\\n                  (ngModelChange)=\\\"detail.ssn=$event\\\"\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col-12\\\">\\n              <mat-form-field>\\n                <mat-label>Routing Number</mat-label>\\n                <input type=\\\"text\\\" name=\\\"routingNo\\\" matInput\\n                  [ngModel]=\\\"(detail$ | async).bankRouting\\\"\\n                  (ngModelChange)=\\\"detail.bankRouting=$event\\\"\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-label>Account Number</mat-label>\\n                <input type=\\\"text\\\" name=\\\"accountNo\\\" matInput\\n                  [ngModel]=\\\"(detail$ | async).bankAccount\\\"\\n                  (ngModelChange)=\\\"detail.bankAccount=$event\\\"\\n                  [disabled]=\\\"!editProfile\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"d-flex justify-content-between\\\">\\n      <button mat-button type=\\\"button\\\" *ngIf=\\\"editProfile\\\" (click)=\\\"cancel(f)\\\">Cancel</button>\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" *ngIf=\\\"editProfile\\\">Save</button>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\\n<mat-card *ngIf=\\\"client.clientId !== null && client.clientId > 0 && hasOnboarding\\\">\\n  <form #onboardingForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveOnboarding(onboardingForm)\\\">\\n    <mat-card-header class=\\\"justify-content-between\\\">\\n      <mat-card-title>\\n        <h3>Onboarding <small class=\\\"text-muted\\\">(coming soon)</small></h3>\\n      </mat-card-title>\\n      <!-- uncomment when onboarding stuff is ready -->\\n      <!-- <mat-slide-toggle class=\\\"float-right\\\" [checked]=\\\"editDetails\\\" (change)=\\\"changeOnboardingEditMode(onboardingForm)\\\" [disabled]=\\\"onboardingForm.touched\\\">Edit Mode</mat-slide-toggle> -->\\n    </mat-card-header>\\n    <mat-card-content class=\\\"flex-column\\\">\\n      <mat-form-field>\\n        <mat-label>Driver's License</mat-label>\\n        <input type=\\\"text\\\" name=\\\"license\\\" matInput [disabled]=\\\"!editDetails\\\" />\\n      </mat-form-field>\\n      <mat-checkbox disabled=\\\"true\\\">Direct Deposit Info</mat-checkbox>\\n      <mat-checkbox disabled=\\\"true\\\">ID Badge Image (headshot)</mat-checkbox>\\n      <mat-checkbox disabled=\\\"true\\\">Full Profile Image (full body)</mat-checkbox>\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"d-flex justify-content-between\\\">\\n      <button mat-button type=\\\"button\\\" *ngIf=\\\"editDetails\\\" (click)=\\\"cancelDetails(onboardingForm)\\\">Cancel</button>\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" *ngIf=\\\"editDetails\\\">Save</button>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\\n\"","module.exports = \".weather-placeholder {\\n  min-height: 50px; }\\n\\nmat-form-field.mat-form-field {\\n  display: block;\\n  font-size: 16px; }\\n\\nmat-card {\\n  margin: 1rem; }\\n\\nmat-checkbox {\\n  margin: 1rem; }\\n\\nh1, h2, h3, h4, h5 {\\n  color: #505050; }\\n\\n:host ::ng-deep .mat-slide-toggle-thumb {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n:host ::ng-deep .mat-slide-toggle-thumb::before {\\n    font-size: .8rem;\\n    font-family: \\\"Material Icons\\\";\\n    content: \\\"\\\\e3c9\\\"; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { User, IUserDetail, IWeather, IOnboarding, IClient, ICampaign } from '../models';\n\nimport * as moment from 'moment';\n\nimport { WeatherService } from '../weather.service';\nimport { UserService } from '../user-features/user.service';\nimport { MessageService } from '../message.service';\n\nimport { LoadingSpinnerService } from '../loading-spinner/loading-spinner.service';\nimport { CampaignService } from '../campaigns/campaign.service';\nimport { SessionService } from '../session.service';\nimport { Observable } from 'rxjs';\nimport { UserRole } from '@app/models/role.model';\n\n@Component({\n  selector: 'my-information',\n  templateUrl: './my-information.component.html',\n  styleUrls: ['./my-information.component.scss']\n})\nexport class MyInformationComponent implements OnInit {\n  user: User;\n  user$:Observable<User>;\n  detail$:Observable<IUserDetail>;\n  detail: IUserDetail = <IUserDetail>{};\n  weather: IWeather;\n  minTemp: string;\n  maxTemp: string;\n  editProfile: boolean = false;\n  editDetails: boolean;\n  joinDate: string;\n  welcome: string;\n  hasOnboarding: boolean = false;\n  onboarding: IOnboarding;\n\n  client: IClient = <IClient>{};\n\n  ssn: string = '123456789';\n\n  campaigns: ICampaign[] = [];\n  allCampaigns:ICampaign[] = [];\n\n  constructor(\n    private weatherApi: WeatherService,\n    private userService: UserService,\n    private msg: MessageService,\n    private spinner: LoadingSpinnerService,\n    private campaignService:CampaignService,\n    private session: SessionService\n  ) {\n    this.detail$ = this.userService.userDetail$.asObservable();\n    this.user$ = this.userService.user$.asObservable();\n  }\n\n  ngOnInit() {\n    this.session.showLoader();\n    this.user$.subscribe(user => {\n      this.user = user;\n\n      /** set onboarding options */\n      this.hasOnboarding = user.sessionUser.client.options != null && user.role.role >= UserRole.companyAdmin \n        ? user.sessionUser.client.options.hasOnboarding : false;\n\n      this.client = user.sessionUser.client;\n      this.welcome = user.firstName;\n      this.joinDate = moment(user.createdAt.date).format('MMMM Do, YYYY');\n\n      this.campaignService.getCampaigns(this.user.sessionUser.sessionClient)\n        .then((campaigns:ICampaign[]) => {\n          this.allCampaigns = campaigns;\n          this.session.hideLoader();\n        })\n        .catch(this.msg.showWebApiError);\n    });\n\n    // gets user's location from the browser\n    navigator.geolocation.getCurrentPosition(pos => {\n      this.initWeather(pos.coords.longitude, pos.coords.latitude);\n    });\n  }\n\n  initWeather(longitude: number, latitude: number): void {\n    this.weatherApi.getWeatherByGeoLocale(longitude, latitude)\n      .then((result: IWeather) => {\n        this.weather = result;\n        this.minTemp = this.convertToFahrenheit(this.weather.main.temp_min);\n        this.maxTemp = this.convertToFahrenheit(this.weather.main.temp_max);\n      });\n  }\n\n  convertToFahrenheit(temp: number): string {\n    let result = 1.8 * (temp - 273) + 32;\n    result = Math.round(result);\n    return result + 'F';\n  }\n\n  changeEditMode(f: NgForm): void {\n    if(!f.dirty) {\n      this.editProfile = !this.editProfile;\n    } else {\n      f.reset();\n    }\n  }\n\n  changeOnboardingEditMode(f: NgForm): void {\n    if(!f.dirty) {\n      this.editDetails = !this.editDetails;\n    } else {\n      f.reset();\n    }\n  }\n\n  save(f: NgForm) {\n    this.spinner.show();\n    // if account numbers are null, make them zeros to be inserted into db\n    this.formatBankAccountNumbers();\n\n    this.userService.updateUser(this.user, this.detail);\n    f.reset();\n    this.editProfile = !this.editProfile;\n    this.msg.addMessage('Saved successfully.', 'dismiss', 6000);\n  }\n\n  // need to finish this\n  cancel(f: NgForm): void {\n    this.userService.reloadUser();\n    this.editProfile = !this.editProfile;\n  }\n\n  cancelDetails(f: NgForm): void {\n    this.userService.reloadUserDetail();\n    this.editDetails = !this.editDetails;\n  }\n\n  saveOnboarding(f: NgForm) {\n    console.dir(f);\n  }\n\n  clearId(saleIdName: string, campaignName: string): void {\n    this.detail[saleIdName] = null;\n    this.detail[campaignName] = null;\n  }\n\n  private resetUserFormFields(f: NgForm, user: any) {\n    for(var key in f.value) {\n      if(!f.value.hasOwnProperty(key)) continue;\n      var obj = f.form.controls[key];\n      if(!obj.dirty) continue;\n      this.user[key] = user[key];\n      obj.markAsUntouched();\n    }\n  }\n\n  private formatBankAccountNumbers(pageLoad: boolean = false) {\n    if(pageLoad) {\n      this.detail.bankRouting = (this.detail.bankRouting === 0) ? null : this.detail.bankRouting;\n      this.detail.bankAccount = (this.detail.bankAccount === 0) ? null : this.detail.bankAccount;\n    } else {\n      this.detail.bankRouting = this.detail.bankRouting ? this.detail.bankRouting : 0;\n      this.detail.bankAccount = this.detail.bankAccount ? this.detail.bankAccount : 0;\n    }\n  }\n\n  private setEmptyUserDetail():IUserDetail {\n    return {\n      userDetailId: null,\n      userId: null,\n      street: null,\n      street2: null,\n      city: null,\n      state: null,\n      zip: null,\n      phone: null,\n      ssn: null,\n      birthDate: null,\n      bankRouting: null,\n      bankAccount: null,\n      saleOneId: null,\n      saleTwoId: null,\n      saleThreeId: null,\n      createdAt: null,\n      updatedAt: null\n    };\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <p>Would you like to clear the current sales?</p>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-between\\\">\\n  <button type=\\\"button\\\" mat-button (click)=\\\"closeDialog()\\\">No</button>\\n  <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"clearSales()\\\">Yes</button>\\n</div>\\n\"","module.exports = \"\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n@Component({\n  selector: 'changeAgentDialog',\n  templateUrl: './change-agent.component.html',\n  styleUrls: ['./change-agent.component.scss']\n})\nexport class ChangeAgentDialogComponent {\n\n  constructor(\n    private dialogRef: MatDialogRef<ChangeAgentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: any\n  ) {\n\n  }\n\n  clearSales(): void {\n    this.dialogRef.close(true);\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close(false);\n  }\n\n}\n","module.exports = \"\\n<h2 mat-dailog-title>Reject Notes</h2>\\n<mat-dialog-content>\\n  <mat-form-field class=\\\"reject-note\\\">\\n    <textarea matInput placeholder=\\\"Why was the sale rejected?\\\" [(ngModel)]=\\\"item.note\\\"></textarea>\\n  </mat-form-field>\\n</mat-dialog-content>\\n<mat-dialog-actions class=\\\"d-flex justify-content-between\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button [mat-dialog-close]=\\\"item\\\" color=\\\"primary\\\">Save</button>\\n</mat-dialog-actions>\\n\"","module.exports = \".reject-note {\\n  min-width: 300px;\\n  width: 100%; }\\n\"","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { IAgentSale } from \"../../models\";\n\n@Component({\n  selector: 'reject-note-dialog',\n  templateUrl: 'reject-note.component.html',\n  styleUrls: ['reject-note.component.scss']\n})\nexport class RejectNoteDialogComponent {\n\n  item: IAgentSale;\n  index:number;\n\n  constructor(\n    public dialogRef: MatDialogRef<RejectNoteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.item = data.item;\n      this.index = data.index;\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close({ item: this.item, index: this.index });\n  }\n}\n","module.exports = \"\\n<h2 mat-dialog-title>Map Columns</h2>\\n<mat-dialog-content>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Sales Agent <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.agentName\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Sale Date <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.saleDate\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Date Format <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"dateFormat\\\">\\n        <mat-option value=\\\"MM-DD-YYYY\\\">MM-DD-YYYY (01/01/2018)</mat-option>\\n        <mat-option value=\\\"M-D-YYYY\\\">M-D-YYYY (1/1/2018)</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>First Name <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.firstName\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Last Name <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.lastName\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Street <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.street\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>City <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.city\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>State <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.state\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Zip <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.zip\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Status <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.status\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"w-100 d-flex justify-content-between align-items-center\\\">\\n    <p>Amount <i class=\\\"material-icons md-18 mx-5\\\">arrow_forward</i></p>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select One\\\" [(value)]=\\\"mappings.amount\\\">\\n        <mat-option *ngFor=\\\"let opt of optionPairs\\\" [value]=\\\"opt.key\\\">\\n          {{opt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</mat-dialog-content>\\n<mat-dialog-actions class=\\\"d-flex justify-content-between\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button (click)=\\\"closeDialog()\\\" color=\\\"primary\\\">Save</button>\\n</mat-dialog-actions>\\n\"","module.exports = \".mat-dialog-content {\\n  font-size: .9rem; }\\n\\ndiv p {\\n  margin: 0; }\\n\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { IAgentSale, IPayrollMap } from '../../models';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\n\ninterface IMappingHeader {\n  agentName: string,\n  saleDate: string,\n  firstName: string,\n  lastName: string,\n  street: string,\n  city: string,\n  state: string,\n  zip: string,\n  status: string,\n  amount: string\n}\n\ninterface IOptionPairing {\n  key: string,\n  value: string,\n  index: number\n}\n\n@Component({\n  selector: 'sales-mapping',\n  templateUrl: 'sales-mapping.component.html',\n  styleUrls: ['sales-mapping.component.scss']\n})\nexport class SalesMappingComponent {\n  mappedItem: IPayrollMap;\n  options: string[];\n  optionPairs: IOptionPairing[] = [];\n\n  dict: any = {};\n  result: IAgentSale[] = [];\n  mappings: IMappingHeader;\n  rows: IAgentSale[];\n\n  dateFormat: string = 'M-D-YYYY';\n\n  constructor(public dialogRef: MatDialogRef<SalesMappingComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.rows = data.rows;\n    this.mappedItem = <IPayrollMap>{\n      agentId: null,\n      agentName: null,\n      entries: []\n    };\n    this.mappings = {\n      agentName: null,\n      saleDate: null,\n      firstName: null,\n      lastName: null,\n      street: null,\n      city: null,\n      state: null,\n      zip: null,\n      status: null,\n      amount: null\n    };\n    _.forEach(data.headers, (opt: string, idx: any) => {\n      let key = opt.replace(/ /g, '');\n      let value = opt.substring(0, 1).toUpperCase() + opt.substring(1);\n      this.optionPairs.push({ key: key, value: value, index: idx });\n    });\n    this.optionPairs.push({ key: null, value: '--- No Pairing ---', index: null });\n  }\n\n  closeDialog(): void {\n    _.forEach(this.rows, (row: IAgentSale, i: number) => {\n      let obj = <IAgentSale>{\n        agentSalesId: null,\n        agentId: null,\n        invoiceId: null,\n        agentName: null,\n        saleDate: null,\n        firstName: null,\n        lastName: null,\n        address: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        statusType: null,\n        amount: null\n      };\n      for(let h in this.mappings) {\n        if(this.mappings[h] !== null) {\n          let mapIndex = (<IOptionPairing>_.find(this.optionPairs, { 'key': this.mappings[h] })).index;\n          if(h == 'status') {\n            obj[h] = row[mapIndex].match(/accept/gi) !== null ? 'true' : 'false';\n          } else if (h === 'saleDate') {\n            obj[h] = moment(row[mapIndex], this.dateFormat).format('YYYY-MM-DD');\n          } else {\n            obj[h] = row[mapIndex];\n          }\n        }\n      }\n      if(Object.keys(obj).length > 0) this.result.push(obj);\n    });\n\n    this.mappedItem.entries = this.result;\n\n    this.dialogRef.close(this.mappedItem);\n  }\n\n}\n","import { Directive, ElementRef, Renderer, HostListener } from \"@angular/core\";\nimport { PayrollService } from \"@app/payroll/payroll.service\";\nimport { IAgentSale, AgentSale } from \"@app/models\";\nimport { MessageService } from \"@app/message.service\";\nimport { SessionService } from \"@app/session.service\";\n\nimport * as _ from 'lodash';\n\n\n@Directive({\n  selector: `[vs-paste]`\n})\nexport class VsPasteDirective {\n\n  result:IAgentSale[];\n  isEmpty:boolean;\n\n  constructor(\n    private el:ElementRef,\n    private renderer:Renderer,\n    private service:PayrollService,\n    private msg:MessageService,\n    private session:SessionService\n  ) {}\n\n  @HostListener('document:paste', ['$event'])\n  paste(event:any) {\n    event.preventDefault();\n    this.session.showLoader();\n    this.result = [];\n    const data = event.clipboardData.getData('text');\n    let rows = data.split(String.fromCharCode(13));\n\n    for(let i = 0; i < rows.length; i++) {\n      rows[i] = rows[i].split(String.fromCharCode(9));\n    }\n\n    for(let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      let agent = new AgentSale(row);\n      this.result.push(agent);\n    }\n\n    if(this.result.length < 2) {\n      let test = [];\n      for(let i = 0; i < this.result.length; i++) {\n        test = [...Object.values(this.result[i])];\n      }\n      _.remove(test, _.isNull);\n\n      if(_.isEmpty(test)) {\n        this.session.hideLoader();\n        this.msg.addMessage('Oops, please check the format of your invoice.', 'dismiss', 6000);\n        return;\n      }\n    }\n\n    this.result.push(this.service.insertSalesRow());\n    this.service.sales$.next(this.result);\n    this.session.hideLoader();\n    this.msg.addMessage('We have imported your invoice. Please check for accuracy.', 'dismiss', 6000);\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\" vs-paste>\\n  <div class=\\\"desktop-only\\\">\\n    <mat-card class=\\\"d-flex align-items-center align-center header-card\\\">\\n      <h3>Create a Paystub</h3>\\n      <span class=\\\"toolbar-spacer\\\"></span>\\n      <!-- <mat-icon\\n        class=\\\"toolbar-icon clickable\\\"\\n        *ngIf=\\\"invoice.agentId != null && invoice.campaignId != null\\\"\\n        (click)=\\\"clickFileUploader()\\\"\\n      >publish</mat-icon> -->\\n    </mat-card>\\n    <div class=\\\"d-flex justify-content-center card-container\\\">\\n      <mat-card class=\\\"sales-card\\\">\\n        <mat-card-header>\\n          <!-- <mat-card-title>\\n            Choose an Agent and Campaign to import your payfile.\\n          </mat-card-title> -->\\n        </mat-card-header>\\n        <mat-card-content class=\\\"d-flex justify-content-between\\\">\\n          <mat-form-field [hideRequiredMarker]=\\\"true\\\">\\n            <mat-select\\n              placeholder=\\\"Pick an Agent\\\"\\n              formControlName=\\\"agentId\\\"\\n              (selectionChange)=\\\"changeAgent()\\\"\\n              required\\n            >\\n              <mat-option *ngFor=\\\"let a of agents\\\" [value]=\\\"a.agentId\\\">{{a.firstName}} {{a.lastName}}</mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"form.get('agentId').touched && form.get('agentId').invalid\\\">Select an Agent</mat-error>\\n          </mat-form-field>\\n          <mat-form-field [hideRequiredMarker]=\\\"true\\\">\\n            <mat-select\\n              placeholder=\\\"Pick a Campaign\\\"\\n              formControlName=\\\"campaignId\\\"\\n              required\\n            >\\n              <mat-option *ngFor=\\\"let c of campaigns\\\" [value]=\\\"c.campaignId\\\">{{c.name}}</mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"form.get('campaignId').touched && form.get('campaignId').invalid\\\">Select a Campaign</mat-error>\\n          </mat-form-field>\\n          <mat-form-field [hideRequiredMarker]=\\\"true\\\">\\n            <input\\n              matInput\\n              [matDatepicker]=\\\"issueDate\\\"\\n              placeholder=\\\"Issue Date\\\"\\n              formControlName=\\\"issueDate\\\"\\n              required\\n            />\\n            <mat-datepicker-toggle matSuffix [for]=\\\"issueDate\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #issueDate></mat-datepicker>\\n            <mat-error *ngIf=\\\"form.get('issueDate').touched && form.get('issueDate').invalid\\\">Select an Issue Date</mat-error>\\n          </mat-form-field>\\n          <mat-form-field [hideRequiredMarker]=\\\"true\\\">\\n            <input\\n              matInput\\n              [matDatepicker]=\\\"weekending\\\"\\n              placeholder=\\\"Weekending\\\"\\n              formControlName=\\\"weekEnding\\\"\\n              required\\n            />\\n            <mat-datepicker-toggle matSuffix [for]=\\\"weekending\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #weekending></mat-datepicker>\\n            <mat-error *ngIf=\\\"form.get('weekEnding').touched && form.get('weekEnding').invalid\\\">Select a Weekending Date</mat-error>\\n          </mat-form-field>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n\\n    <!-- SALES CARD  -->\\n    <div class=\\\"d-flex justify-content-center card-container\\\">\\n      <mat-card class=\\\"sales-card\\\">\\n        <mat-card-header class=\\\"flex-column\\\">\\n          <mat-card-title class=\\\"d-flex justify-content-between align-items-center\\\">\\n            <h4>Sales Details</h4>\\n            <!-- <input type=\\\"file\\\"\\n              ng2FileSelect\\n              [hidden]=\\\"true\\\"\\n              id=\\\"file-uploader\\\"\\n              [uploader]=\\\"uploader\\\"\\n              (change)=\\\"chooseFile($event)\\\"\\n              vs-paste\\n            />\\n            <label\\n              for=\\\"file-uploader\\\"\\n              class=\\\"mat-button mat-raised-button mat-primary\\\"\\n              *ngIf=\\\"invoice.agentId != null && invoice.campaignId != null\\\"\\n            >Import File</label> -->\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"form-table sales-table\\\" formArrayName=\\\"sales\\\">\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns;sticky: true\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns; let idx = index\\\"></mat-row>\\n\\n            <ng-container matColumnDef=\\\"saleDate\\\">\\n              <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field class=\\\"max-width-90\\\">\\n                  <input matInput\\n                    [matDatepicker]=\\\"saleDatePicker\\\"\\n                    [value]=\\\"item.saleDate\\\"\\n                    (click)=\\\"saleDatePicker.open()\\\"\\n                    (dateChange)=\\\"saleDateEvent(item, $event)\\\"\\n                    formControlName=\\\"saleDate\\\"\\n                    required\\n                  >\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"saleDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #saleDatePicker></mat-datepicker>\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"firstName\\\">\\n              <mat-header-cell *matHeaderCellDef>First Name</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <input matInput\\n                    [value]=\\\"item.firstName\\\"\\n                    (change)=\\\"handleRowEdit('firstName', item, $event, i)\\\"\\n                    formControlName=\\\"firstName\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"lastName\\\">\\n              <mat-header-cell *matHeaderCellDef>Last Name</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <input matInput\\n                    [value]=\\\"item.lastName\\\"\\n                    (change)=\\\"handleRowEdit('lastName', item, $event, i)\\\"\\n                    formControlName=\\\"lastName\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"address\\\">\\n              <mat-header-cell *matHeaderCellDef>Address</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\">\\n                <mat-form-field class=\\\"custom-width w-140\\\" [formGroupName]=\\\"i\\\">\\n                  <input matInput\\n                    [value]=\\\"item.address\\\"\\n                    (change)=\\\"handleRowEdit('address', item, $event, i)\\\"\\n                    formControlName=\\\"address\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"city\\\">\\n              <mat-header-cell *matHeaderCellDef>City</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <input matInput\\n                    [value]=\\\"item.city\\\"\\n                    (change)=\\\"handleRowEdit('city', item, $event, i)\\\"\\n                    formControlName=\\\"city\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"state\\\">\\n              <mat-header-cell *matHeaderCellDef>State</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <mat-select\\n                    [value]=\\\"item.state\\\"\\n                    (change)=\\\"handleRowEdit('state', item, $event, i)\\\"\\n                    formControlName=\\\"state\\\"\\n                    required\\n                  >\\n                    <mat-option *ngFor=\\\"let s of states\\\" [value]=\\\"s.abbreviation\\\">\\n                      {{s.name}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"postalCode\\\">\\n              <mat-header-cell *matHeaderCellDef>Postal Code</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <input matInput\\n                    [value]=\\\"item.postalCode\\\"\\n                    (change)=\\\"handleRowEdit('postalCode', item, $event, i)\\\"\\n                    formControlName=\\\"postalCode\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"statusType\\\">\\n              <mat-header-cell *matHeaderCellDef>Status</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <mat-select\\n                    [value]=\\\"item.statusType\\\"\\n                    (change)=\\\"handleRowEdit('statusType', item, $event, i)\\\"\\n                    formControlName=\\\"statusType\\\"\\n                    required\\n                  >\\n                    <mat-option value=\\\"true\\\">Accepted</mat-option>\\n                    <mat-option value=\\\"false\\\">Rejected</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <mat-header-cell *matHeaderCellDef>Amount</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                <mat-form-field>\\n                  <input matInput\\n                    [value]=\\\"item.amount\\\"\\n                    (change)=\\\"handleRowEdit(item, $event, i)\\\"\\n                    formControlName=\\\"amount\\\"\\n                    required\\n                  >\\n                </mat-form-field>\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"note\\\">\\n              <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item; let i = index\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <button mat-icon-button (click)=\\\"openRejectDialog(item, i)\\\" *ngIf=\\\"item.statusType == 'false'\\\">\\n                    <mat-icon aria-label=\\\"Open reject note\\\" class=\\\"{ 'text-danger': item.note }\\\">note</mat-icon>\\n                  </button>\\n                  <button mat-icon-button (click)=\\\"removeRow('sales', i)\\\" *ngIf=\\\"dataSource$.getValue().length > 1 && i != (dataSource$.getValue().length - 1)\\\">\\n                    <mat-icon aria-label=\\\"Delete the current row\\\" color=\\\"warn\\\">remove_circle</mat-icon>\\n                  </button>\\n                </div>\\n              </mat-cell>\\n            </ng-container>\\n          </mat-table>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n\\n    <!-- OVERRIDES AND EXPENSES -->\\n    <div class=\\\"overrides-expenses-panel\\\">\\n      <div class=\\\"d-flex justify-content-between py-3\\\">\\n\\n        <!-- OVERRIDES CARD -->\\n        <mat-card class=\\\"widthp-50 mr-2\\\" *ngIf=\\\"!disableOverrides\\\">\\n          <mat-card-header>\\n            <mat-card-title class=\\\"d-flex justify-content-between w-100\\\">\\n              <h3 *ngIf=\\\"!disableOverrides\\\">Overrides</h3>\\n              <button mat-icon-button\\n                type=\\\"button\\\"\\n                class=\\\"float-right mx-1\\\"\\n                (click)=\\\"addOverrideRow(true)\\\"\\n                *ngIf=\\\"overrideDataSource$.getValue().length === 0 && !disableOverrides\\\"\\n              >\\n                <mat-icon aria-label=\\\"Add override\\\" color=\\\"accent\\\">add_circle</mat-icon>\\n              </button>\\n            </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <mat-table #overrideTable\\n              [dataSource]=\\\"overrideDataSource\\\"\\n              class=\\\"form-table\\\"\\n              *ngIf=\\\"overrideDataSource$.getValue().length > 0\\\"\\n              formArrayName=\\\"overrides\\\"\\n            >\\n              <mat-header-row *matHeaderRowDef=\\\"overrideColumns; sticky: true\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let row; columns: overrideColumns; let idx = index\\\"></mat-row>\\n\\n              <!-- AGENT ID -->\\n              <ng-container matColumnDef=\\\"agentId\\\">\\n                <mat-header-cell *matHeaderCellDef>Agent</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field [hideRequiredMarker]=\\\"true\\\">\\n                    <mat-select\\n                      placeholder=\\\"Select an Agent\\\"\\n                      (selectionChange)=\\\"overrideRowEdit('agentId', item, $event, i)\\\"\\n                      formControlName=\\\"agentId\\\"\\n                      [value]=\\\"item.agentId\\\"\\n                      required\\n                    >\\n                      <mat-option *ngFor=\\\"let agent of overrideAgents\\\" [value]=\\\"agent.agentId\\\">\\n                        {{agent.firstName}} {{agent.lastName}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- NUMBER OF SALES -->\\n              <ng-container matColumnDef=\\\"sales\\\">\\n                <mat-header-cell *matHeaderCellDef>Sales</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      (change)=\\\"overrideRowEdit('sales', item, $event, i)\\\"\\n                      formControlName=\\\"sales\\\"\\n                      [value]=\\\"item.sales\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- COMMISSION -->\\n              <ng-container matColumnDef=\\\"commission\\\">\\n                <mat-header-cell *matHeaderCellDef>Commission</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      (change)=\\\"overrideRowEdit('commission', item, $event, i)\\\"\\n                      formControlName=\\\"commission\\\"\\n                      [value]=\\\"item.commission\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- TOTAL -->\\n              <ng-container matColumnDef=\\\"total\\\">\\n                <mat-header-cell *matHeaderCellDef>Total</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      (change)=\\\"overrideRowEdit('total', item, $event, i)\\\"\\n                      formControlName=\\\"total\\\"\\n                      [value]=\\\"item.total\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- DELETE -->\\n              <ng-container matColumnDef=\\\"delete\\\">\\n                <mat-header-cell *matHeaderCellDef>&nbsp;</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\">\\n                  <button mat-icon-button (click)=\\\"removeRow('overrides', i)\\\" *ngIf=\\\"item.overrideId == null\\\">\\n                    <mat-icon aria-label=\\\"Delete the current row\\\" color=\\\"warn\\\">remove_circle</mat-icon>\\n                  </button>\\n                </mat-cell>\\n              </ng-container>\\n            </mat-table>\\n          </mat-card-content>\\n        </mat-card>\\n\\n        <!-- EXPENSES CARD -->\\n        <mat-card [ngClass]=\\\"{'widthp-50': !disableOverrides, 'ml-2': !disableOverrides, 'w-100': disableOverrides}\\\">\\n          <mat-card-header>\\n            <mat-card-title class=\\\"d-flex justify-content-between\\\">\\n              <h3>Expenses</h3>\\n              <button mat-icon-button\\n                class=\\\"float-right mx-1\\\"\\n                (click)=\\\"addExpenseRow()\\\"\\n                *ngIf=\\\"expenseDataSource$.getValue().length === 0\\\"\\n              >\\n                <mat-icon aria-label=\\\"Add expense\\\" color=\\\"accent\\\">add_circle</mat-icon>\\n              </button>\\n            </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <mat-table #expenseTable\\n              [dataSource]=\\\"expenseDataSource\\\"\\n              class=\\\"form-table\\\"\\n              *ngIf=\\\"expenseDataSource$.getValue().length > 0\\\"\\n              formArrayName=\\\"expenses\\\"\\n            >\\n              <!-- TITLE -->\\n              <ng-container matColumnDef=\\\"title\\\">\\n                <mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      [value]=\\\"item.title\\\"\\n                      (change)=\\\"expenseRowEdit('title', item, $event, i)\\\"\\n                      formControlName=\\\"title\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- AMOUNT -->\\n              <ng-container matColumnDef=\\\"amount\\\">\\n                <mat-header-cell *matHeaderCellDef>Amount</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      [value]=\\\"item.amount\\\"\\n                      (change)=\\\"expenseRowEdit('amount', item, $event, i)\\\"\\n                      formControlName=\\\"amount\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- DESCRIPTION -->\\n              <ng-container matColumnDef=\\\"description\\\">\\n                <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                  <mat-form-field>\\n                    <input matInput\\n                      [value]=\\\"item.description\\\"\\n                      (change)=\\\"expenseRowEdit('description', item, $event, i)\\\"\\n                      formControlName=\\\"description\\\"\\n                      required\\n                    >\\n                  </mat-form-field>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- DELETE -->\\n              <ng-container matColumnDef=\\\"delete\\\">\\n                <mat-header-cell *matHeaderCellDef>&nbsp;</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let item: let i = index\\\">\\n                  <button mat-icon-button (click)=\\\"removeRow('expenses', i)\\\" *ngIf=\\\"item.expenseId == null\\\">\\n                    <mat-icon aria-label=\\\"Delete the current row\\\" color=\\\"warn\\\">remove_circle</mat-icon>\\n                  </button>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <mat-header-row *matHeaderRowDef=\\\"expenseColumns; sticky:true\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let row; columns: expenseColumns\\\"></mat-row>\\n            </mat-table>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n      <div class=\\\"d-flex justify-content-between card-container\\\">\\n        <button mat-button class=\\\"m-3 float-left\\\">Cancel</button>\\n        <button mat-raised-button\\n          color=\\\"accent\\\"\\n          class=\\\"m-3 float-right\\\"\\n          (click)=\\\"validateInvoice()\\\"\\n        >Save</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"d-flex justify-content-center mobile-warning\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <h4 class=\\\"text-center\\\">\\n          Sorry, but you can only enter sales and make edits from a computer.\\n        </h4>\\n      </mat-card-header>\\n    </mat-card>\\n  </div>\\n</form>\\n\"","module.exports = \".sales-card {\\n  width: 100%;\\n  max-width: 1150px; }\\n\\n.widthp-50 {\\n  width: 50%; }\\n\\n@media screen and (max-width: 750px) {\\n  .desktop-only {\\n    display: none; } }\\n\\n@media screen and (min-width: 751px) {\\n  .mobile-warning {\\n    display: none !important; } }\\n\\n.mobile-warning mat-card {\\n  max-width: 95%; }\\n\\n.max-width-90 {\\n  max-width: 90px !important; }\\n\\n.form-table mat-cell {\\n  margin: 0 1rem 0 0; }\\n\\n.form-table mat-form-field:not(.custom-width) {\\n  width: 100%; }\\n\\n.custom-width .w-100 {\\n  width: 100px !important; }\\n\\n.custom-width .w-40 {\\n  width: 40px !important; }\\n\\n.custom-width .w-140 {\\n  width: 140px !important; }\\n\\n.mat-header-row {\\n  border-bottom-style: solid; }\\n\\n.mat-header-cell {\\n  margin-right: 1rem; }\\n\\n.mat-row {\\n  border-bottom-style: none; }\\n\\n.mat-column-note {\\n  flex: 0 0 40px;\\n  margin: 0 !important; }\\n\\n.clickable {\\n  cursor: pointer; }\\n\\n.mat-column-agentId {\\n  max-width: 200px; }\\n\\n.mat-column-commission {\\n  max-width: 80px; }\\n\\n.mat-column-sales {\\n  max-width: 75px; }\\n\\n.mat-column-total {\\n  max-width: 80px; }\\n\\n.mat-column-delete {\\n  max-width: 30px;\\n  margin: 0 !important; }\\n\\n.required-field-error {\\n  background-color: red; }\\n\\n.overrides-expenses-panel {\\n  max-width: 1150px;\\n  margin: 0 auto; }\\n\\n.toolbar-icon {\\n  padding: 0 1.5rem; }\\n\\n.toolbar-spacer {\\n  flex: 1 1 auto; }\\n\\n.align-center {\\n  width: 100%;\\n  max-width: 1150px;\\n  margin: 0 auto; }\\n\\n.sales-table {\\n  max-height: 400px;\\n  overflow: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, NgForm, FormArray } from '@angular/forms';\nimport { User, ICampaign, IPayrollMap, IAgent, IOverride, IAgentSale, IUserDetail, InvoiceDto } from '../models';\nimport { FileSelectDirective, FileUploader } from 'ng2-file-upload';\n\nimport { MessageService } from '@app/message.service';\nimport { CampaignService } from '../campaigns/campaign.service';\nimport { UserService } from '../user-features/user.service';\nimport { PayrollService } from './payroll.service';\n\n// import * as XLSX from 'xlsx';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {\n  MatDatepickerInputEvent,\n  MatDialog\n} from '@angular/material';\nimport { RejectNoteDialogComponent } from './dialogs/reject-note.component';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\nimport { IExpense } from '../models/expense.model';\nimport { States, IState } from '@app/shared/models/state.model';\n\ninterface IPayrollInvoice {\n  agentId: number,\n  campaignId: number,\n  issueDate: string | moment.Moment | Date,\n  weekEnding: string | moment.Moment | Date,\n  sales?: IAgentSale[],\n  overrides?: IOverride[],\n  expenses?: IExpense[]\n}\n\ninterface DialogResult {\n    agent:IAgentSale,\n    index:number\n}\n\n@Component({\n  selector: 'app-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.scss'],\n  viewProviders: [FileSelectDirective]\n})\nexport class PayrollComponent implements OnInit {\n\n  $indexVal:number = -1;\n  form:FormGroup;\n  invoiceInfo:FormGroup;\n\n  displayedColumns = ['saleDate', 'firstName', 'lastName', 'address', 'city', 'state', 'postalCode', 'statusType', 'amount', 'note'];\n  pastedDataSource:Observable<IAgentSale[]>;\n  dataSource$:BehaviorSubject<IAgentSale[]> = new BehaviorSubject<IAgentSale[]>([]);\n  dataSource:Observable<IAgentSale[]>;\n  overrideColumns = ['agentId', 'sales', 'commission', 'total', 'delete'];\n  overrideDataSource$:BehaviorSubject<IOverride[]> = new BehaviorSubject<IOverride[]>([]);\n  overrideDataSource:Observable<IOverride[]>;\n  expenseColumns = ['title', 'description', 'amount', 'delete'];\n  expenseDataSource$:BehaviorSubject<IExpense[]> = new BehaviorSubject<IExpense[]>([]);\n  expenseDataSource:Observable<IExpense[]>;\n\n  uploader: FileUploader = new FileUploader({ removeAfterUpload: true });\n\n  overrideAgents: IAgent[];\n\n  states:IState[] = States.$get();\n  user:User;\n  user$:Observable<User>;\n  agent: IAgent; // currently selected agent\n  agents:IAgent[];\n  agents$:Observable<IAgent[]>;\n  campaigns:ICampaign[];\n  showRejectNotes: boolean = false;\n  data: any;\n  wsHeaders$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  wsHeaders: string[];\n  wsData$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  wsData: any[] = [];\n\n  newFileUpload: boolean;\n  mapped: IPayrollMap;\n  users: User[];\n  users$:Observable<User[]>;\n  selectedOverrideAgent = new FormControl('', []);\n\n  selectedAgentId:number;\n  selectedCampaignId:number;\n  issueDate:string | moment.Moment | Date;\n  weekEnding:string | moment.Moment | Date;\n\n  invoice: IPayrollInvoice;\n\n  isMappedByUsername: boolean;\n  userDetail: IUserDetail;\n  salesId: number;\n\n  disableOverrides:boolean = true;\n\n  constructor(\n    private campaignApi: CampaignService,\n    private msg: MessageService,\n    private userService: UserService,\n    public dialog: MatDialog,\n    private payrollService: PayrollService,\n    private fb: FormBuilder\n  ) {\n    this.dataSource = this.dataSource$.asObservable();\n    this.overrideDataSource = this.overrideDataSource$.asObservable();\n    this.expenseDataSource = this.expenseDataSource$.asObservable();\n    this.agents$ = this.userService.agents;\n    this.user$ = this.userService.user;\n\n    // gets active list of users to fill dropdown on invoice page\n    this.userService.users.subscribe(next => { this.users = next; });\n\n    this.userService.userDetail.subscribe((next: IUserDetail) => {\n      this.userDetail = next;\n    });\n  }\n\n  ngOnInit() {\n    this.agents$.subscribe((agents:IAgent[]) => { this.agents = agents; });\n    this.user$.subscribe((user:User) => {\n      this.user = user;\n      this.campaignApi.getCampaigns(user.sessionUser.sessionClient)\n        .then((campaigns:ICampaign[]) => {\n          this.campaigns = campaigns;\n        })\n        .catch(this.msg.showWebApiError);\n\n      this.userService.loadAgents(true);\n    });\n\n    this.userService.reloadUserPromise();\n    this.userService.loadAgents();\n\n    this.isMappedByUsername = true;\n\n    this.createForm();\n\n    this.mapped = {\n      agentId: null,\n      agentName: null,\n      entries: []\n    }\n\n    // assume that the page is going to have data at page load\n    this.newFileUpload = false;\n\n    this.showRejectNotes = _.find(this.dataSource, ['statusType', false]) !== null;\n\n    this.wsHeaders$.subscribe(next => {\n      this.wsHeaders = next;\n    });\n\n    this.wsData$.subscribe(next => {\n      if(next !== undefined) this.wsData.push(next);\n    });\n  }\n\n  private createForm():void {\n    let salesArray = this.createFormGroup(this.dataSource$.getValue());\n    let overridesArray = this.createFormGroup(this.overrideDataSource$.getValue(), 'overrides');\n    let expensesArray = this.createFormGroup(this.expenseDataSource$.getValue(), 'expenses');\n\n    this.form = this.fb.group({\n      agentId: this.fb.control(this.selectedAgentId || '', Validators.required),\n      campaignId: this.fb.control(this.selectedCampaignId || '', Validators.required),\n      issueDate: this.fb.control(this.issueDate || '', Validators.required),\n      weekEnding: this.fb.control(this.weekEnding || '', Validators.required),\n      sales: this.fb.array(salesArray),\n      overrides: this.fb.array(overridesArray),\n      expenses: this.fb.array(expensesArray)\n    });\n\n    this.payrollService.sales.subscribe(sales => {\n      if(!sales.length || sales == null) return;\n      this.dataSource$.next(sales);\n\n      this.form.controls.sales = this.fb.array(this.createFormGroup(sales));\n      this.form.updateValueAndValidity();\n    });\n\n    this.payrollService.overrides.subscribe(overrides => {\n      if(!overrides.length || overrides == null) return;\n      this.overrideDataSource$.next(overrides);\n\n      this.form.controls.overrides = this.fb.array(this.createFormGroup(overrides, 'overrides'));\n      this.form.updateValueAndValidity();\n    })\n\n    this.payrollService.expenses.subscribe(expenses => {\n      if(!expenses.length || expenses == null) return;\n      this.expenseDataSource$.next(expenses);\n\n      this.form.controls.expenses = this.fb.array(this.createFormGroup(expenses, 'expenses'));\n      this.form.updateValueAndValidity();\n    })\n  }\n\n  private createFormGroup(data:any[], keyType:string = null):FormGroup[] {\n    let formGroups:FormGroup[] = [];\n    let keys = ['saleDate', 'firstName', 'lastName', 'address', 'city', 'state', 'postalCode', 'statusType', 'amount'];\n\n    if(keyType != null) {\n      keys = keyType == 'overrides'\n        ? ['agentId', 'sales', 'commission', 'total']\n        : keyType == 'expenses'\n          ? ['title', 'description', 'amount']\n          : keys;\n    }\n\n    // loop through each row of the dataset\n    for(let i = 0; i < data.length; i++) {\n      let group = {};\n      // loop through the keys\n      for(let j = 0; j < keys.length; j++) {\n        // append this rows properties as form controls to the form group\n        group[keys[j]] = this.fb.control(data[i][keys[j]], Validators.required);\n      }\n      formGroups.push(this.fb.group(group));\n    }\n    return formGroups;\n  }\n\n\n\n  clickFileUploader():void {\n    document.getElementById('file-uploader').click();\n  }\n\n  getErrorMessage(f: NgForm): any {\n    let form = f.form;\n    return form.controls.selectedAgent.errors.required ? 'You must select an agent' :\n      form.controls.selectedCampaign.errors.required ? 'You must select a campaign' :\n      form.controls.selectedIssueDate.errors.required ? 'You must select an issue date' :\n      form.controls.selectedWeekending.errors.required ? 'You must select a weekending' : null;\n  }\n\n  saleDateEvent(item:IAgentSale, event: MatDatepickerInputEvent<any>) {\n    let fieldValue:moment.Moment = event.value;\n    let data = this.dataSource$.getValue();\n\n    item.saleDate = fieldValue.format('YYYY-MM-DD');\n\n    if(this.hasEditedLastRow(data)) {\n      data.push(this.insertPayrollRow());\n      const newDataSource:IAgentSale[] = data;\n      this.dataSource$.next(newDataSource);\n      this.form.controls.sales = this.fb.array(this.createFormGroup(this.dataSource$.getValue()));\n    }\n  }\n\n  /**\n   * Check if the last row in the array has any data in it. If it does,\n   * we set our boolean to true that inserts a new row at the bottom of the table.\n   */\n  private hasEditedLastRow(data:any): boolean {\n    let testValidity = data[data.length - 1];\n    let result:boolean;\n    for(let p in testValidity) {\n      result = testValidity[p] != null;\n      if(result) break;\n    }\n    return result;\n  }\n\n  /**\n   * Handles changes to the sales rows and updates underlying objects and validity on form.\n   *\n   * @param prop\n   * @param item\n   * @param event\n   * @param pos\n   */\n  handleRowEdit(prop:string, item:IAgentSale, event:any): void {\n    let fieldValue: any = event.target.value;\n\n    // set item property to field value\n    item[prop] = fieldValue;\n\n    // Insert a new row at the bottom of the table if there are is not an empty last row.\n    if(this.hasEditedLastRow(this.dataSource$.getValue())) {\n      let current = this.dataSource$.getValue();\n      current.push(this.insertPayrollRow());\n      this.payrollService.sales$.next(current);\n    }\n  }\n\n  overrideRowEdit(prop: string, item:IOverride, event:any, index:number = null): void {\n    let fieldValue:any = (prop == 'agentId') ? event.value : event.target.value;\n\n    // set item property to field value\n    item[prop] = +fieldValue;\n\n    if(index != null) {\n      let form = this.form.controls.overrides as FormArray;\n      let patch = {};\n      patch[prop] = fieldValue;\n      (<FormGroup>form.controls[index]).patchValue(patch);\n\n      if(prop == 'sales'\n        || prop == 'commission'\n        && item.sales > 0\n        && item.commission > 0\n      ) {\n        item.total = item.sales * item.commission;\n        (<FormGroup>form.controls[index]).patchValue({\n          total: item.total\n        });\n      }\n    }\n\n    if(this.hasEditedLastRow(this.overrideDataSource$.getValue())) {\n      let current = this.overrideDataSource$.getValue();\n      current.push(this.insertOverrideRow());\n      this.payrollService.overrides$.next(current);\n    }\n  }\n\n  expenseRowEdit(prop:string, item:IExpense, event:any, index:number): void {\n    let fieldValue: any = event.target.value;\n\n    // set item property to field value\n    item[prop] = fieldValue;\n\n    if(index != null) {\n      let form = this.form.controls.expenses as FormArray;\n      let patch = {};\n      patch[prop] = fieldValue;\n      (<FormGroup>form.controls[index]).patchValue(patch);\n    }\n\n    if(this.hasEditedLastRow(this.expenseDataSource$.getValue())) {\n      let current = this.expenseDataSource$.getValue();\n      current.push(this.insertExpenseRow());\n      this.payrollService.expenses$.next(current);\n    }\n  }\n\n  openRejectDialog(item:IAgentSale, index:number): void {\n    this.dialog\n      .open(RejectNoteDialogComponent, {\n        width: '400px',\n        data: { item: item, index: index }\n      })\n      .afterClosed().subscribe((result:DialogResult) => {\n        if(result == null) return;\n        let agent = result.agent;\n        let index = result.index;\n        this.dataSource[index] = agent;\n      });\n  }\n\n  updateSelectedAgent():void {\n    if(this.overrideAgents == null\n      || this.overrideAgents.length == 0) {\n        this.userService.refreshAgents()\n          .then((agents:IAgent[]) => {\n            this.agent = _.find(agents, {'agentId': this.invoice.agentId});\n            this.disableOverrides = !this.agent.isManager;\n          });\n    } else {\n      this.agent = _.find(this.agents, {'agentId': this.invoice.agentId});\n      this.disableOverrides = !this.agent.isManager\n    }\n  }\n\n\n\n  validateInvoice():any {\n    const dataSource = this.dataSource$.getValue();\n    const overrideDataSource = this.overrideDataSource$.getValue();\n    const expenseDataSource = this.expenseDataSource$.getValue();\n    const lastSalesRow = dataSource.length - 1;\n    const lastOverrideRow = overrideDataSource.length - 1;\n    const lastExpenseRow = expenseDataSource.length - 1;\n    const salesFormArray = this.form.controls.sales as FormArray;\n    const overridesFormArray = this.form.controls.overrides as FormArray;\n    const expensesFormArray = this.form.controls.expenses as FormArray;\n\n    if(this.form.invalid && (<FormGroup>salesFormArray.controls[lastSalesRow]).dirty) return;\n\n    this.removeEmptyDataSourceRow(salesFormArray, dataSource, lastSalesRow, 'dataSource$');\n    this.removeEmptyDataSourceRow(overridesFormArray, overrideDataSource, lastOverrideRow, 'overrideDataSource$');\n    this.removeEmptyDataSourceRow(expensesFormArray, expenseDataSource, lastExpenseRow, 'expenseDataSource$');\n    this.form.updateValueAndValidity();\n\n    this.saveInvoice(\n      dataSource,\n      overrideDataSource,\n      expenseDataSource\n    );\n  }\n\n  removeEmptyDataSourceRow(formArray:FormArray, dataSource:any[], pos:number, destinationDataSource:string):void {\n    let hasData:boolean;\n    const row = dataSource[pos];\n\n    for(const p in row) {\n      hasData = row[p] != null;\n      if(hasData) break;\n    }\n    if(hasData) return;\n\n    formArray.removeAt(pos);\n    dataSource.splice(pos, 1);\n    this[destinationDataSource].next(dataSource);\n  }\n\n  removeEmptyOverride(i:number):void {\n    let data = this.overrideDataSource$.getValue();\n\n    if(!_.isEmpty(data[i])) return;\n\n    data.splice(i, 1);\n    this.overrideDataSource$.next(data);\n  }\n\n  removeEmptyExpense(i:number):void {\n    let data = this.expenseDataSource$.getValue();\n\n    if(!_.isEmpty(data[i])) return;\n\n    data.splice(i, 1);\n    this.expenseDataSource$.next(data);\n  }\n\n  saveInvoice(\n    sales: IAgentSale[],\n    overrides: IOverride[],\n    expenses: IExpense[]\n  ): void {\n    console.log('Form is invalid: ' + this.form.invalid);\n    console.dir(this.form);\n    if(this.form.invalid) return;\n\n    let data:InvoiceDto = {\n      invoiceId: null,\n      agentId: this.selectedAgentId,\n      campaignId: this.selectedCampaignId,\n      agentSales: sales,\n      overrides: overrides,\n      expenses: expenses,\n      issueDate: this.issueDate,\n      weekEnding: this.weekEnding\n    };\n\n    for(let i = 0; i < data.agentSales.length; i++) {\n      data.agentSales[i].agentId = this.selectedAgentId;\n    }\n\n    for(let i = 0; i < data.expenses.length; i++) {\n      data.expenses[i].agentId = this.selectedAgentId;\n    }\n\n    console.dir(data);\n\n    this.payrollService\n      .saveNewInvoice(this.user.sessionUser.sessionClient, this.agent.agentId, data)\n      .subscribe(result => {\n        console.dir(result);\n      });\n\n    // let dto: InvoiceDto = <InvoiceDto>{\n    //   invoiceId: null,\n    //   agentId: form.control,\n    //   campaignId: form.controls.campaign.value,\n    //   agentSales: sales,\n    //   overrides: overrides,\n    //   expenses: expenses,\n    //   issueDate: form.controls.issueDate.value,\n    //   weekEnding: form.controls.weekEnding.value\n    // }\n\n    // this.payrollService\n    //   .saveInvoice(dto)\n    //   .then((result: InvoiceDto) => {\n    //     console.dir(result);\n    //   });\n\n  }\n\n  /**\n   * finds the currently selected agent and checks to see if they're a manager so\n   * that we can properly set the var that shows/hides the overrides panel.\n   */\n  changeAgent():void {\n    this.agent = _.find(this.agents, {'agentId':this.form.value.agentId}) as IAgent;\n    this.disableOverrides = !(this.agent.isActive && this.agent.isManager);\n  }\n\n  /**\n   * Checks to make sure agent has suboridnates prior to expanding the\n   * dataset and adding an override row.\n   *\n   * @param wasSectionHidden\n   *\n   */\n  addOverrideRow(wasSectionHidden:boolean = false):void {\n    if(wasSectionHidden && this.agent.agentId != null) {\n      if(this.agent == null)\n        this.agent = _.find(this.agents, {'agentId': this.selectedAgentId});\n\n      this.userService.getAgentsByManagerId(this.agent.managerId)\n        .then((agents:IAgent[]) => {\n          this.overrideAgents = agents;\n          this.payrollService.addEmptyOverride();\n        })\n        .catch(this.msg.showWebApiError);\n    } else {\n      if(this.overrideAgents == null || this.overrideAgents.length == 0) {\n        this.msg.addMessage('Please make sure you select an agent before you start entering overrides.', 'dismiss', 6000);\n        return;\n      }\n\n      this.payrollService.addEmptyOverride();\n    }\n  }\n\n  addExpenseRow(): void {\n    this.payrollService.addEmptyExpense();\n  }\n\n  removeRow(sourceType: string, index: number): void {\n    let data;\n    switch(sourceType) {\n      case 'overrides':\n        data = this.overrideDataSource$.getValue();\n        data.splice(index, 1);\n        this.overrideDataSource$.next(data);\n        this.payrollService.updateDataSource(sourceType, this.overrideDataSource$.getValue());\n        break;\n      case 'expenses':\n        data = this.expenseDataSource$.getValue();\n        data.splice(index, 1);\n        this.expenseDataSource$.next(data);\n        this.payrollService.updateDataSource(sourceType, this.expenseDataSource$.getValue());\n        break;\n      case 'sales':\n      default:\n        data = this.dataSource$.getValue();\n        data.splice(index, 1);\n        this.dataSource$.next(data);\n        this.payrollService.updateDataSource(sourceType, this.dataSource$.getValue());\n        break;\n    }\n  }\n\n\n\n\n\n  private insertPayrollRow(): IAgentSale {\n    return {\n      invoiceId: null,\n      agentSalesId: null,\n      agentId: null,\n      saleDate: null,\n      firstName: null,\n      lastName: null,\n      address: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      statusType: null,\n      amount: null,\n      note: null,\n      createdAt: null,\n      updatedAt: null\n    }\n  }\n\n  private insertOverrideRow(): IOverride {\n    return {\n      overrideId: null,\n      agentId: null,\n      invoiceId: null,\n      commission: null,\n      sales: null,\n      total: null\n    }\n  }\n\n  private insertExpenseRow(): IExpense {\n    return {\n      expenseId: null,\n      agentId: null,\n      invoiceId: null,\n      title: null,\n      description: null,\n      amount: null,\n      updatedAt: null,\n      modifiedBy: null,\n      createdAt: null\n    }\n  }\n\n\n}\n\n\n  // updateMapping(f:FormGroup):void {\n  //   if(f.controls.selectedAgent.invalid) this.msg.addMessage('Oops! Looks like we encountered an error, please refresh and try again.', 'dismiss', 6000);\n\n  //   this.mapped.agentId = f.controls.selectedAgent.value;\n  //   let user = _.find(this.users, { id: this.mapped.agentId });\n  //   this.mapped.agentName = user.firstName + ' ' + user.lastName;\n\n  //   let sales: IAgentSale[] = this.dataSource$.getValue();\n  //   let salesTableHasData: boolean = false;\n  //   _.each(sales, (sale: IAgentSale) => {\n  //     for(let s in sale) {\n  //       // check if there are any values in the first row and on... then do the check.\n  //       if(salesTableHasData) break;\n  //       salesTableHasData = sale[s] !== null;\n  //     }\n  //   });\n\n  //   if(salesTableHasData) {\n  //     let dialogRef = this.dialog.open(ChangeAgentDialogComponent, {\n  //       width: '250px',\n  //     });\n\n  //     dialogRef.afterClosed().subscribe((result: boolean) => {\n  //       if(result) {\n  //         this.mapped.entries = [];\n  //         this.mapped.entries.push(this.insertPayrollRow());\n  //         this.dataSource$.next(this.mapped.entries);\n  //         this.overrideDataSource$.next([]);\n  //         this.expenseDataSource$.next([]);\n  //       }\n  //     });\n  //   }\n  // }\n\n    // private createForm() {\n  //   this.form = this.fb.group({\n  //     sales: this.fb.array(this.dataSource$.getValue()),\n  //     overrides: this.fb.array(this.overrideDataSource$.getValue()),\n  //     expenses: this.fb.array(this.expenseDataSource$.getValue())\n  //   });\n  // }\n\n  // private resetForm() {\n  //   this.form = this.fb.group({\n  //     sales: this.fb.array(this.dataSource$.getValue()),\n  //     overrides: this.fb.array(this.overrideDataSource$.getValue()),\n  //     expenses: this.fb.array(this.expenseDataSource$.getValue())\n  //   });\n  // }\n\n  // openSalesMappingDialog(headers: any, rows: IAgentSale[]): void {\n  //   // move this to import button click event... and highlight field that user needs to interact with before they continue\n  //   if(!(this.invoice.agentId > 0)) {\n  //     this.msg.addMessage('Please make sure you select a salesperson before continuing.', 'dismiss', 5000);\n  //     return;\n  //   } else if (!(this.invoice.campaignId > 0)) {\n  //     this.msg.addMessage('Please select a campaign before continuing.', 'dismiss', 5000);\n  //     return;\n  //   }\n\n  //   this.dialog\n  //     .open(SelectMapperComponent, {\n  //       width: '500px',\n  //       data: {}\n  //     })\n  //     .afterClosed()\n  //     .subscribe((mapBy:string) => {\n  //       if(mapBy == undefined) return;\n\n  //       // if the user is mapping by something other than username, we need to do the work to get the correct sales ID to map with here...\n  //       if(mapBy === 'salesId') {\n  //         // need to get user details here and get their sales id for the currently selected campaign and store the current sales id\n  //         // to something that we can use... maybe store this as \"currentSalesId\" in the payroll service or something, so that it is\n  //         // easily accessible from multiple components...?\n  //         console.log('map by ' + mapBy);\n\n  //         this.userService.getUserDetail()\n  //           .then((detail:IUserDetail) => {\n  //             if(detail == null) {\n  //               this.msg.addMessage('Fatal error. Please refresh and try again.', 'dismiss', 6000);\n  //             } else {\n  //               switch(this.selectedCampaign.value) {\n  //                 case this.userDetail.saleOneCampaignId:\n  //                   this.salesId = this.userDetail.saleOneId;\n  //                   break;\n  //                 case this.userDetail.saleTwoCampaignId:\n  //                   this.salesId = this.userDetail.saleTwoId;\n  //                   break;\n  //                 case this.userDetail.saleThreeCampaignId:\n  //                   this.salesId = this.userDetail.saleThreeId;\n  //                   break;\n  //                 default:\n  //                   this.salesId = 0;\n  //                   break;\n  //               }\n\n  //               if(this.salesId === 0)\n  //                 this.msg.addMessage('Please make sure that you have a sales ID for the specified campaign saved in your profile.', 'dismiss', 6000);\n  //             }\n  //           });\n\n  //         console.dir(this.userDetail);\n  //       } else {\n  //         console.log(\"map by \" + mapBy);\n  //       }\n\n  //       let dialogRef = this.dialog.open(SalesMappingComponent, {\n  //         width: '500px',\n  //         data: { headers: headers, rows: rows }\n  //       });\n\n  //       dialogRef.afterClosed().subscribe((result: IPayrollMap) => {\n  //         if(result.entries == null) {\n  //           this.msg.addMessage('Something went wrong. Please try again.', 'dismiss', 6000);\n  //           return;\n  //         }\n\n  //         if(result != undefined && result.entries.length > 0) {\n  //           this.mapped.entries = result.entries;\n  //           // make sure our results only match the employee that the user has selected in the top left...\n  //           _.remove(this.mapped.entries, (e: IAgentSale) => {\n  //             return e.agentName.toLowerCase().trim() !== this.mapped.agentName.toLowerCase().trim();\n  //           });\n\n  //           for(let i = 0; i < this.mapped.entries.length; i++) {\n  //             let data = this.mapped.entries[i];\n  //             if(data['zip']) {\n  //               data.postalCode = data['zip'];\n  //               delete data['zip'];\n  //             }\n  //           }\n\n  //           if(this.mapped.entries.length === 0) this.msg.addMessage('Looks like there are no results for that agent. Please try again.', 'dismiss', 5000);\n\n  //           // if(this.newFileUpload) {\n  //           //   for(let i = 0; i < this.mapped.entries.length; i++) {\n  //           //     this.mapped.entries[i].agentSalesId = i + 1;\n  //           //   }\n  //           // }\n  //           this.mapped.entries.push(this.insertPayrollRow());\n  //           console.dir(this.mapped.entries);\n  //           this.payrollService.updateDataSource('sales', this.mapped.entries);\n  //         }\n  //       });\n  //     });\n  // }\n\n  // chooseFile(e:any):void {\n  //   this.newFileUpload = true;\n  //   let file:File = e.target.files[0];\n  //   let reader:FileReader = new FileReader();\n\n  //   reader.onload = (e: any) => {\n  //     const bstr: string = e.target.result;\n  //     const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n  //     // grab first sheet\n  //     let wsname: string;\n  //     let ws: XLSX.WorkSheet;\n  //     if(wb.SheetNames.length > 1) {\n  //       wsname = wb.SheetNames[1] === 'Data' ? wb.SheetNames[1] : 'Data';\n  //       ws = wb.Sheets[wsname];\n  //     } else {\n  //       wsname = wb.SheetNames[0];\n  //       ws = wb.Sheets[wsname];\n  //     }\n\n  //     // save data\n  //     this.data = <any>(XLSX.utils.sheet_to_json(ws, { header: 1 }));\n  //     let entry = [];\n  //     let rows = [];\n\n  //     for(var h = 0; h < this.data.length; h++) {\n  //       let row = this.data[h];\n  //       if(h === 0) {\n  //         for(var i = 0; i < row.length; i++) {\n  //           row[i] = row[i].toLowerCase().split(' ').map(function(w, idx){\n  //             if(idx > 0 && w.length > 2) {\n  //               return w.charAt(0).toUpperCase() + w.substr(1);\n  //             } else {\n  //               return w;\n  //             }\n  //           }).join(' ');\n\n  //           entry.push(row[i]);\n  //         }\n  //         this.wsHeaders$.next(row);\n  //       } else { // data form worksheet\n  //         if(row.length > 0) rows.push(row);\n  //       }\n  //     }\n\n  //     this.openSalesMappingDialog(entry, rows);\n  //   };\n\n  //   if(file) reader.readAsBinaryString(file);\n  // }\n","import { Injectable } from '@angular/core';\nimport { FileUploader, FileItem } from 'ng2-file-upload';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport * as XLSX from 'xlsx';\nimport { InvoiceDto, IAgentSale, IOverride, IExpense, IAgent } from '../models';\nimport { environment } from '@env/environment';\n\ninterface DataStore {\n  sales: IAgentSale[],\n  overrides: IOverride[],\n  expenses: IExpense[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollService {\n  private apiUrl:string = environment.apiUrl;\n  data: any;\n\n  dataStore: DataStore = {\n    sales: <IAgentSale[]>[this.insertSalesRow()],\n    overrides: <IOverride[]>[],\n    expenses: <IExpense[]>[]\n  }\n\n  sales: Observable<IAgentSale[]>;\n  sales$: BehaviorSubject<IAgentSale[]>;\n  overrides: Observable<IOverride[]>;\n  overrides$: BehaviorSubject<IOverride[]>;\n  expenses: Observable<IExpense[]>;\n  expenses$: BehaviorSubject<IExpense[]>;\n\n  constructor(private http: HttpClient) {\n    this.sales$ = new BehaviorSubject<IAgentSale[]>(this.dataStore.sales);\n    this.sales = this.sales$.asObservable();\n    this.overrides$ = new BehaviorSubject<IOverride[]>(this.dataStore.overrides);\n    this.overrides = this.overrides$.asObservable();\n    this.expenses$ = new BehaviorSubject<IExpense[]>(this.dataStore.expenses);\n    this.expenses = this.expenses$.asObservable();\n  }\n\n  reloadSales(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.sales$.next(this.dataStore.sales);\n    });\n  }\n\n  reloadOverrides(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.overrides$.next(this.dataStore.overrides);\n    });\n  }\n\n  reloadExpenses(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.expenses$.next(this.dataStore.expenses);\n    });\n  }\n\n  addEmptyOverride(): void {\n    this.dataStore.overrides.push(this.insertOverrideRow());\n    this.overrides$.next(this.dataStore.overrides);\n  }\n\n  addEmptyExpense(): void {\n    this.dataStore.expenses.push(this.insertExpenseRow());\n    this.expenses$.next(this.dataStore.expenses);\n  }\n\n\n  saveInvoice(invoiceDto: InvoiceDto, invoiceId: number = null): Promise<InvoiceDto> {\n    let url = invoiceId === null ?\n      this.apiUrl + 'api/invoices' :\n      this.apiUrl + 'api/invoices/' + invoiceId;\n    return <Promise<InvoiceDto>>this.http.post(url, invoiceDto).toPromise();\n  }\n\n  saveNewInvoice(\n    clientId:number,\n    agentId:number,\n    data:InvoiceDto\n  ):Observable<InvoiceDto> {\n    let url = this.apiUrl + '/api/clients/' + clientId + '/agents/'\n      + agentId + '/invoices';\n    return this.http.post<InvoiceDto>(url, data);\n  }\n\n  /**\n   * Can pass any of the three datasources with descriptive string that will update their\n   * behavior subject and private data stores.\n   *\n   * @param sourceType string\n   * @param data any\n   */\n  updateDataSource(sourceType: string, data: any): void {\n    switch(sourceType) {\n      case 'overrides':\n        this.dataStore.overrides = data;\n        this.overrides$.next(this.dataStore.overrides);\n        break;\n      case 'expenses':\n        this.dataStore.expenses = data;\n        this.expenses$.next(this.dataStore.expenses);\n        break;\n      case 'sales':\n      default:\n        this.dataStore.sales = data;\n        this.sales$.next(this.dataStore.sales);\n        break;\n    }\n  }\n\n\n\n  // private methods\n\n  insertSalesRow(): IAgentSale {\n    return {\n      invoiceId: null,\n      agentSalesId: null,\n      agentId: null,\n      saleDate: null,\n      firstName: null,\n      lastName: null,\n      address: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      statusType: null,\n      amount: null,\n      note: null,\n      createdAt: null,\n      updatedAt: null\n    }\n  }\n\n  private insertOverrideRow(): IOverride {\n    return {\n      overrideId: null,\n      agentId: null,\n      invoiceId: null,\n      commission: null,\n      sales: null,\n      total: null\n    }\n  }\n\n  private insertExpenseRow(): IExpense {\n    return {\n      expenseId: null,\n      agentId: null,\n      invoiceId: null,\n      title: null,\n      description: null,\n      amount: null,\n      updatedAt: null,\n      modifiedBy: null,\n      createdAt: null\n    }\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n    transform(value: string, args?: any): any {\n        value = value + '';\n        let npa = value.substr(0, 3);\n        let npx = value.substr(3, 3);\n        let xxxx = value.substr(6, 4);\n        return `(${npa}) ${npx}-${xxxx}`;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PhonePipe} from '@app/pipes/phone.pipe';\nimport { MaterialModule } from '@app/material/material.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [PhonePipe],\n    exports: [PhonePipe]\n})\nexport class PipesModule {}\n","module.exports = \"<p>\\n  public-home works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vs-public-home',\n  templateUrl: './public-home.component.html',\n  styleUrls: ['./public-home.component.scss']\n})\nexport class PublicHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ChangeDetectorRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[scrollLock]',\n  inputs: ['trapScroll']\n})\nexport class ScrollLockDirective implements OnInit, OnChanges, OnDestroy {\n\n  trapScroll:boolean | string;\n\n  private element:HTMLElement;\n\n  constructor(elementRef:ElementRef, private zone:NgZone, private cd:ChangeDetectorRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnChanges():void {\n    this.trapScroll = this.parseBoolean(this.trapScroll);\n\n    if(this.element.tabIndex >= -1) {\n      this.element.tabIndex = -1;\n    } else {\n      this.element.removeAttribute('tabIndex');\n    }\n\n    this.cd.detectChanges();\n  }\n\n  ngOnDestroy():void {\n    this.element.removeEventListener('wheel', this.handleEvent, false);\n  }\n\n  ngOnInit():void {\n    this.zone.runOutsideAngular(\n      ():void => {\n        // NOTE: All modern browsers support \"wheel\". As such, we'll apply this\n        // as a progressive enhancement and not worry about older browsers.\n        this.element.addEventListener(\"wheel\", this.handleEvent, false);\n        this.element.addEventListener(\"keydown\", this.handleEvent, false);\n      }\n    )\n  }\n\n  // private methods\n\n  private handleEvent = (event: WheelEvent | KeyboardEvent):void => {\n    if(!this.isTrappingEvent(event)) return;\n\n    // Regardless of whether or not we're going to allow this event to be applied\n    // locally, we want to stop the event from propagating above this container. This way,\n    // we make sure that an acestor instance higher up in the DOM, doesn't accidentally interfere\n    // with the default behavior being applied locally.\n    event.stopPropagation();\n\n    if(this.eventShouldBePrevented(event)) event.preventDefault();\n  }\n\n  private eventShouldBePrevented(event:WheelEvent | KeyboardEvent):boolean {\n    let target = <HTMLElement>event.target;\n\n    // check for embedded scrolling opportunities\n    while(target !== this.element) {\n      // if the event will cause scrolling in an embedded event, then we do not\n      // want to prevent the default behavior of the event.\n      if(this.isScrollableElement(target)) return false;\n      target = <HTMLElement>target.parentNode;\n    }\n\n    // if we've made it this far, there weren't any embedded scrollable elements to\n    // inspect. As such, we can now examine the container. If the event will cause\n    // scrolling in container element, then we DO NOT want to prevent\n    return true;\n  }\n\n  private isScrollableElement(element:HTMLElement):boolean {\n    if(getComputedStyle(element).overflowY === 'hidden') return false;\n    return element.scrollHeight !== element.clientHeight;\n  }\n\n  private isTrappingEvent(event:WheelEvent | KeyboardEvent):boolean {\n    if(!this.trapScroll) return false;\n    return true;\n  }\n\n  private parseBoolean(value:boolean | string):boolean {\n    return value == true;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<mat-card-title>Choose a mapping method.</mat-card-title>\\n<mat-card-content>\\n  The best method to map is to use the agent's sales id. However, it is imperative that you make sure both the sales ID is updated in their\\n  profile and is displayed properly in the invoice. The fallback option would be to match the agent by name, but this requires that the name\\n  typed into the invoice matches identically to the agent's profile.\\n</mat-card-content>\\n<mat-card-actions class=\\\"d-flex justify-content-between mx-0\\\">\\n  <button type=\\\"button\\\" mat-button (click)=\\\"closeDialog('username')\\\">Username</button>\\n  <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog('salesId')\\\">Sales ID</button>\\n</mat-card-actions>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-select-mapper',\n  templateUrl: './select-mapper.component.html',\n  styleUrls: ['./select-mapper.component.css']\n})\nexport class SelectMapperComponent implements OnInit {\n\n  isMappedByUsername: boolean;\n  toggleTitle: string;\n\n  constructor(\n    public ref: MatDialogRef<SelectMapperComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.isMappedByUsername = false;\n  }\n\n  ngOnInit() {\n    this.toggleTitle = this.isMappedByUsername ? 'Map invoice by Username' : 'Map invoice by Sales ID';\n  }\n\n  closeDialog(mapBy: string): void {\n    this.ref.close(mapBy);\n  }\n\n}\n","import {Injectable, OnInit} from '@angular/core';\nimport {User} from './models/user.model';\nimport {Observable, BehaviorSubject, Subject, ReplaySubject} from 'rxjs';\nimport {MatSidenav} from '@angular/material';\nimport {LocalStorage, JSONSchema} from '@ngx-pwa/local-storage';\nimport {ILocalStorage, IToken, IClient} from './models';\nimport {HttpRequest} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {IRole} from '@app/models/role.model';\nimport {environment} from '../environments/environment';\n\nimport * as moment from 'moment';\nimport {map} from 'rxjs/operators';\n\ndeclare var window: any;\n\nconst rootUrl = environment.rootUrl;\n\nconst schema: JSONSchema = {\n    properties: {\n        expires: {type: 'integer'},\n        data: {type: 'object'}\n    },\n    required: ['expires', 'data']\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n    static defaultUserUrl = 'my-information';\n\n    sessionUser: Observable<User>;\n    private sidenav: MatSidenav;\n    private navOpened: boolean;\n    opened$: Subject<boolean> = new Subject<boolean>();\n\n    dataStore: {user: User; token: IToken} = {\n        user: null,\n        token: null\n    };\n\n    navigateQueue: string[] = [];\n    loggedInService: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private userLoggedIn: boolean;\n\n    // FIXME: This doesn't work... If we subscribe to this for multiple types it will update everytime and the child files\n    // will try to change the data type\n    private storageItem$: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    storageItem: Observable<any>;\n\n    private userItem$: Subject<User> = new ReplaySubject<User>(1);\n    userItem: Observable<User>;\n\n    private tokenItem$: Subject<IToken> = new ReplaySubject<IToken>(1);\n    tokenItem: Observable<IToken>;\n\n    loading$: Subject<boolean> = new Subject<boolean>();\n    loadingState: Observable<boolean>;\n\n    private hasTokenSubject = new ReplaySubject<boolean>(1);\n    isLoginSubject = new BehaviorSubject<boolean>(this.hasToken());\n\n    constructor(private localStorage: LocalStorage, private router: Router) {\n        // make sure we're removing expired cookies on app boot\n        this.pruneExpiredStorage();\n        for (let p in this.dataStore) {\n            this.getItem(p);\n        }\n\n        this.userItem = this.userItem$.asObservable();\n        this.tokenItem = this.tokenItem$.asObservable();\n        this.loadingState = this.loading$.asObservable();\n    }\n\n    get isUserLoggedIn(): boolean {\n        return this.userLoggedIn;\n    }\n\n    private hasToken(): boolean {\n        this.hasTokenSubject.subscribe((hasToken: boolean) => {\n            this.userLoggedIn = hasToken;\n        });\n        this.localStorage\n            .getItem('token')\n            .toPromise()\n            .then((item: ILocalStorage<IToken>) => {\n                if (item == null) return;\n                if (Date.now() >= item.expires) {\n                    this.removeItem('token');\n                    this.isLoginSubject.next(false);\n                } else {\n                    this.dataStore.token = item.data;\n                    this.tokenItem$.next(item.data);\n                    this.isLoginSubject.next(true);\n                }\n            });\n        return this.userLoggedIn;\n    }\n\n    login(token: ILocalStorage<IToken>): void {\n        this.setToken(token.data);\n        this.setItem('token', token);\n        this.hideLoader();\n        this.navigateTo('/');\n    }\n\n    logout(): void {\n        this.clearStorage();\n        this.isLoginSubject.next(false);\n        this.hasTokenSubject.next(false);\n        window.location.href = rootUrl + '/#/login';\n    }\n\n    getUserItem(): Observable<User> {\n        return this.userItem$.asObservable();\n    }\n\n    get userHomePage() {\n        return SessionService.defaultUserUrl;\n    }\n\n    /**\n     * Updates the app's loading spinner status. It is recommended to use the hide/show methods though.\n     *\n     * @param loading\n     */\n    updateLoadingState(loading: boolean): void {\n        this.loading$.next(loading);\n    }\n\n    // hide the loading graphics\n    hideLoader(): void {\n        this.loading$.next(false);\n    }\n\n    // show the loading graphics\n    showLoader(): void {\n        this.loading$.next(true);\n    }\n\n    /**\n     * Access router instance and redirect user to the view of your choice.\n     *\n     * @param view string\n     */\n    navigateTo(view: string): void {\n        this.navigateQueue.push(view);\n        this.router.navigateByUrl(view);\n    }\n\n    navigateByUrl(url: string): void {\n        this.router.navigateByUrl(url);\n    }\n\n    /**\n     * Navigate back to a page the user has been to very the navigation queue.\n     *\n     * @param index\n     */\n    navigateBack(index: number = 1): Promise<any> {\n        return this.router.navigateByUrl(this.navigateQueue[index]);\n    }\n\n    /**\n     * Updates the user item in the session\n     *\n     * @param user\n     */\n    setUser(user: User) {\n        this.userItem$.next(user);\n    }\n\n    /**\n     * What is this doing????\n     *\n     * @param sidenav\n     */\n    setSidenav(sidenav: MatSidenav) {\n        this.sidenav = sidenav;\n    }\n\n    open(): Promise<any> {\n        return this.sidenav.open();\n    }\n\n    close(): Promise<any> {\n        return this.sidenav.close();\n    }\n\n    toggle(isOpen?: boolean): Promise<any> {\n        return this.sidenav.toggle(isOpen);\n    }\n\n    setToken(token: IToken): void {\n        this.isLoginSubject.next(true);\n        this.hasTokenSubject.next(true);\n        this.dataStore.token = token;\n        this.tokenItem$.next(token);\n    }\n\n    setItem<T>(itemName: string, data: ILocalStorage<T>): void {\n        if (this.dataStore[itemName]) this.dataStore[itemName] = data.data;\n        data.expires =\n            data.expires == null ? moment().valueOf() + moment.duration(3, 'days').milliseconds() : data.expires;\n        this.localStorage.setItemSubscribe(itemName, data);\n    }\n\n    getItem(itemName: string): void {\n        itemName = itemName.trim().toLowerCase();\n        this.localStorage.getItem(itemName).subscribe((next: ILocalStorage<any>) => {\n            if (next == null) {\n                return;\n            } else if (Date.now() >= next.expires) {\n                this.hasTokenSubject.next(false);\n                this.isLoginSubject.next(false);\n                this.removeItem(itemName);\n            } else if (itemName === 'user') {\n                this.hasTokenSubject.next(true);\n                this.isLoginSubject.next(true);\n                this.dataStore.user = next.data;\n                this.userItem$.next(<User>next.data);\n            } else if (itemName === 'token') {\n                this.hasTokenSubject.next(true);\n                this.isLoginSubject.next(true);\n                this.dataStore.token = next.data;\n                this.tokenItem$.next(<IToken>next.data);\n            }\n            this.loggedInService.next(this.userLoggedIn);\n        });\n    }\n\n    /**\n     * Exposes our localstorage user via the session service.\n     */\n    isUserAuthenticated(): Observable<ILocalStorage<User>> {\n        return this.localStorage.getItem('user');\n    }\n\n    /**\n     * Explicit method to load user item from storage.\n     *\n     */\n    loadUserStorageItem(): void {\n        this.localStorage.getItem('user').subscribe((item: ILocalStorage<User>) => {\n            if (item == null) {\n                this.userLoggedIn = false;\n                return;\n            }\n\n            if (item.expires <= moment().valueOf()) {\n                this.userLoggedIn = false;\n                this.removeItem('user');\n            } else {\n                this.userLoggedIn = true;\n                this.dataStore.user = item.data;\n                this.userItem$.next(item.data);\n            }\n\n            this.loggedInService.next(this.userLoggedIn);\n        });\n    }\n\n    /**\n     * Explicit method to load token item from storage.\n     *\n     */\n    loadTokenStorageItem(): void {\n        this.pruneExpiredStorage();\n        this.localStorage.getItem('token').subscribe((item: ILocalStorage<IToken>) => {\n            if (item == null) return;\n\n            if (item.expires <= Date.now()) {\n                this.userLoggedIn = false;\n                this.removeItem('token');\n            } else {\n                this.userLoggedIn = this.userLoggedIn || true;\n                this.dataStore.token = item.data;\n                this.tokenItem$.next(item.data);\n            }\n            this.loggedInService.next(this.userLoggedIn);\n        });\n    }\n\n    /**\n     * Removes an item from the localstorage.\n     *\n     * @param itemName\n     */\n    removeItem(itemName: string): void {\n        this.localStorage.removeItemSubscribe(itemName);\n    }\n\n    /**\n     * Forces an item from localstorage. Returns the observable.\n     *\n     * @param itemName\n     */\n    expediteItem(itemName: string): Observable<any> {\n        return this.localStorage.getItem(itemName);\n    }\n\n    /**\n     * Returns a promise with the user from local storage.\n     */\n    getUserAuthenticationStatus(): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.localStorage.getItem('user').subscribe((item: ILocalStorage<User>) => {\n                if (item == null) reject('Not logged in.');\n                if (item.expires <= Date.now()) {\n                    this.removeItem('user');\n                    reject('Login has expired. Please log back in.');\n                } else {\n                    resolve(item.data);\n                }\n            });\n        });\n    }\n\n    isExpiredItem(key: string, expires: number): boolean {\n        let result = false;\n        if (Date.now() > expires) {\n            this.removeItem(key);\n            result = true;\n        }\n        return result;\n    }\n\n    /**\n     * Iterates through all stored objects in localstorage\n     * and checks their expiration dates. If the object has passed\n     * its expiration date, it is invalidated and the object is\n     * removed.\n     *\n     */\n    pruneExpiredStorage(): void {\n        let values = [],\n            keys = Object.keys(localStorage),\n            i = keys.length;\n\n        while (i--) {\n            values.push({\n                key: keys[i],\n                data: this.localStorage.getItem(keys[i])\n            });\n        }\n\n        for (let v = 0; v < values.length; v++) {\n            let item = values[v];\n            if (Date.now() > item.data.expires) {\n                this.removeItem(item.key);\n            }\n        }\n    }\n\n    clearStorage(): void {\n        this.localStorage.clearSubscribe();\n        this.userItem$.next(null);\n        this.tokenItem$.next(null);\n    }\n\n    /**\n     * When the user has been logged in, we need to make sure we are appending these to every HTTP call,\n     * so that the user can make authorized calls to the server.\n     *\n     */\n    getTokenRequest(request: HttpRequest<any>): HttpRequest<any> {\n        return request.clone({\n            setHeaders: {\n                Authorization: 'Bearer ' + this.dataStore.token.access_token\n            }\n        });\n    }\n}\n","export * from './shared.module';\n","\nexport interface IState {\n  name:string,\n  abbreviation:string\n}\n\nexport class States {\n  static readonly list:IState[] = [\n    {\n        \"name\": \"Alabama\",\n        \"abbreviation\": \"AL\"\n    },\n    {\n        \"name\": \"Alaska\",\n        \"abbreviation\": \"AK\"\n    },\n    {\n        \"name\": \"American Samoa\",\n        \"abbreviation\": \"AS\"\n    },\n    {\n        \"name\": \"Arizona\",\n        \"abbreviation\": \"AZ\"\n    },\n    {\n        \"name\": \"Arkansas\",\n        \"abbreviation\": \"AR\"\n    },\n    {\n        \"name\": \"California\",\n        \"abbreviation\": \"CA\"\n    },\n    {\n        \"name\": \"Colorado\",\n        \"abbreviation\": \"CO\"\n    },\n    {\n        \"name\": \"Connecticut\",\n        \"abbreviation\": \"CT\"\n    },\n    {\n        \"name\": \"Delaware\",\n        \"abbreviation\": \"DE\"\n    },\n    {\n        \"name\": \"District Of Columbia\",\n        \"abbreviation\": \"DC\"\n    },\n    {\n        \"name\": \"Federated States Of Micronesia\",\n        \"abbreviation\": \"FM\"\n    },\n    {\n        \"name\": \"Florida\",\n        \"abbreviation\": \"FL\"\n    },\n    {\n        \"name\": \"Georgia\",\n        \"abbreviation\": \"GA\"\n    },\n    {\n        \"name\": \"Guam\",\n        \"abbreviation\": \"GU\"\n    },\n    {\n        \"name\": \"Hawaii\",\n        \"abbreviation\": \"HI\"\n    },\n    {\n        \"name\": \"Idaho\",\n        \"abbreviation\": \"ID\"\n    },\n    {\n        \"name\": \"Illinois\",\n        \"abbreviation\": \"IL\"\n    },\n    {\n        \"name\": \"Indiana\",\n        \"abbreviation\": \"IN\"\n    },\n    {\n        \"name\": \"Iowa\",\n        \"abbreviation\": \"IA\"\n    },\n    {\n        \"name\": \"Kansas\",\n        \"abbreviation\": \"KS\"\n    },\n    {\n        \"name\": \"Kentucky\",\n        \"abbreviation\": \"KY\"\n    },\n    {\n        \"name\": \"Louisiana\",\n        \"abbreviation\": \"LA\"\n    },\n    {\n        \"name\": \"Maine\",\n        \"abbreviation\": \"ME\"\n    },\n    {\n        \"name\": \"Marshall Islands\",\n        \"abbreviation\": \"MH\"\n    },\n    {\n        \"name\": \"Maryland\",\n        \"abbreviation\": \"MD\"\n    },\n    {\n        \"name\": \"Massachusetts\",\n        \"abbreviation\": \"MA\"\n    },\n    {\n        \"name\": \"Michigan\",\n        \"abbreviation\": \"MI\"\n    },\n    {\n        \"name\": \"Minnesota\",\n        \"abbreviation\": \"MN\"\n    },\n    {\n        \"name\": \"Mississippi\",\n        \"abbreviation\": \"MS\"\n    },\n    {\n        \"name\": \"Missouri\",\n        \"abbreviation\": \"MO\"\n    },\n    {\n        \"name\": \"Montana\",\n        \"abbreviation\": \"MT\"\n    },\n    {\n        \"name\": \"Nebraska\",\n        \"abbreviation\": \"NE\"\n    },\n    {\n        \"name\": \"Nevada\",\n        \"abbreviation\": \"NV\"\n    },\n    {\n        \"name\": \"New Hampshire\",\n        \"abbreviation\": \"NH\"\n    },\n    {\n        \"name\": \"New Jersey\",\n        \"abbreviation\": \"NJ\"\n    },\n    {\n        \"name\": \"New Mexico\",\n        \"abbreviation\": \"NM\"\n    },\n    {\n        \"name\": \"New York\",\n        \"abbreviation\": \"NY\"\n    },\n    {\n        \"name\": \"North Carolina\",\n        \"abbreviation\": \"NC\"\n    },\n    {\n        \"name\": \"North Dakota\",\n        \"abbreviation\": \"ND\"\n    },\n    {\n        \"name\": \"Northern Mariana Islands\",\n        \"abbreviation\": \"MP\"\n    },\n    {\n        \"name\": \"Ohio\",\n        \"abbreviation\": \"OH\"\n    },\n    {\n        \"name\": \"Oklahoma\",\n        \"abbreviation\": \"OK\"\n    },\n    {\n        \"name\": \"Oregon\",\n        \"abbreviation\": \"OR\"\n    },\n    {\n        \"name\": \"Palau\",\n        \"abbreviation\": \"PW\"\n    },\n    {\n        \"name\": \"Pennsylvania\",\n        \"abbreviation\": \"PA\"\n    },\n    {\n        \"name\": \"Puerto Rico\",\n        \"abbreviation\": \"PR\"\n    },\n    {\n        \"name\": \"Rhode Island\",\n        \"abbreviation\": \"RI\"\n    },\n    {\n        \"name\": \"South Carolina\",\n        \"abbreviation\": \"SC\"\n    },\n    {\n        \"name\": \"South Dakota\",\n        \"abbreviation\": \"SD\"\n    },\n    {\n        \"name\": \"Tennessee\",\n        \"abbreviation\": \"TN\"\n    },\n    {\n        \"name\": \"Texas\",\n        \"abbreviation\": \"TX\"\n    },\n    {\n        \"name\": \"Utah\",\n        \"abbreviation\": \"UT\"\n    },\n    {\n        \"name\": \"Vermont\",\n        \"abbreviation\": \"VT\"\n    },\n    {\n        \"name\": \"Virgin Islands\",\n        \"abbreviation\": \"VI\"\n    },\n    {\n        \"name\": \"Virginia\",\n        \"abbreviation\": \"VA\"\n    },\n    {\n        \"name\": \"Washington\",\n        \"abbreviation\": \"WA\"\n    },\n    {\n        \"name\": \"West Virginia\",\n        \"abbreviation\": \"WV\"\n    },\n    {\n        \"name\": \"Wisconsin\",\n        \"abbreviation\": \"WI\"\n    },\n    {\n        \"name\": \"Wyoming\",\n        \"abbreviation\": \"WY\"\n    }\n  ];\n\n  constructor() {}\n\n  static $get = ():IState[] => States.list;\n}\n","import * as moment from 'moment';\nimport { Moment } from 'moment';\n\nexport interface Moment extends Moment {\n    toDateString?():string\n}\n\nexport class MomentExtensions {\n\n    constructor() {\n        (<any>moment.fn).toDateString = this.toDateString;\n    }\n\n    toDateString = function():string {\n        return moment(this).clone().format('YYYY-MM-DD');\n    }\n\n    static init = () => new MomentExtensions();\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MomentModule } from 'angular2-moment';\nimport { CampaignsModule } from '../campaigns/campaigns.module';\nimport { UserFeaturesModule } from '../user-features/user-features.module';\nimport { ClientSelectorComponent } from '../client-selector/client-selector.component';\nimport { SelectMapperComponent } from '../select-mapper/select-mapper.component';\nimport { LoadingSpinnerComponent } from '../loading-spinner/loading-spinner.component';\nimport { BaseModule } from '@app/base/base.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MaterialModule,\n    FormsModule,\n    MomentModule,\n    CampaignsModule,\n    UserFeaturesModule,\n    ReactiveFormsModule,\n    BaseModule\n  ],\n  entryComponents: [\n    ClientSelectorComponent,\n    SelectMapperComponent,\n    LoadingSpinnerComponent\n  ],\n  declarations: [],\n  providers: []\n})\nexport class SharedModule { }\n","module.exports = \"<mat-toolbar color=\\\"primary\\\" *ngIf=\\\"user != null\\\">\\n    <mat-toolbar-row>\\n        <i class=\\\"material-icons md-48 mt-3\\\">account_circle</i>\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        <button mat-button (click)=\\\"toggleSidenav()\\\" class=\\\"sidenav-close\\\">\\n            <i class=\\\"material-icons\\\">close</i>\\n        </button>\\n    </mat-toolbar-row>\\n    <mat-toolbar-row class=\\\"d-flex flex-column align-items-start mb-2 mt-3\\\">\\n        {{user.firstName}} {{user.lastName}}\\n        <small>{{user.email}}</small>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<mat-nav-list *ngIf=\\\"user != null\\\">\\n    <!-- all users -->\\n    <a mat-list-item routerLink=\\\"dashboard\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n        <i class=\\\"material-icons px-1\\\">pie_chart</i>\\n        <span>My Work</span>\\n    </a>\\n    <a mat-list-item routerLink=\\\"my-information\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n        <i class=\\\"material-icons px-1\\\">info_outline</i>\\n        <span>My Information</span>\\n    </a>\\n    <a mat-list-item \\n        routerLink=\\\"daily-tracker\\\" \\n        routerLinkActive=\\\"mat-router-link-active\\\"\\n        *ngIf=\\\"user.role.role < roleType.supervisor && user.role.isSalesAdmin\\\"\\n    >\\n        <i class=\\\"material-icons px-1\\\">ballot</i>\\n        <span>Daily Tracker</span>\\n    </a>\\n\\n    <!-- agents only -->\\n    <ng-template *ngIf=\\\"user.role.role < roleType.companyAdmin\\\">\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">monetization_on</i>\\n            <span>My Pay</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">library_books</i>\\n            <span>My Documents</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">chat_bubble</i>\\n            <span>Messages</span>\\n        </a>\\n    </ng-template>\\n\\n    <!-- do we have hr level links? -->\\n\\n    <!-- company admin+ -->\\n    <ng-container *ngIf=\\\"user.role.role >= roleType.companyAdmin\\\">\\n        <a mat-list-item routerLink=\\\"daily-tracker\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n            <i class=\\\"material-icons px-1\\\">ballot</i>\\n            <span>Daily Tracker</span>\\n        </a>\\n        <a mat-list-item routerLink=\\\"client-information\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n            <i class=\\\"material-icons px-1\\\">business</i>\\n            <span>Client Information</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">payment</i>\\n            <span>Paystubs</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">dashboard</i>\\n            <span>Blog</span>\\n        </a>\\n        <a mat-list-item routerLink=\\\"agents\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n            <i class=\\\"material-icons px-1\\\">person</i>\\n            <span>Agents</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">monetization_on</i>\\n            <span>Pay Status</span>\\n        </a>\\n        <!-- <a mat-list-item routerLink=\\\"payroll-tools\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n      <i class=\\\"material-icons px-1\\\">build</i>\\n      <span>Payroll Entry</span>\\n    </a> -->\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">assignment_ind</i>\\n            <span>Overrides</span>\\n        </a>\\n        <a mat-list-item routerLink=\\\"campaigns\\\" routerLinkActive=\\\"mat-router-link-active\\\">\\n            <i class=\\\"material-icons px-1\\\">assignment</i>\\n            <span>Campaigns</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">library_books</i>\\n            <span>Documents</span>\\n        </a>\\n        <a mat-list-item class=\\\"hide\\\">\\n            <i class=\\\"material-icons px-1\\\">face</i>\\n            <span>Customers</span>\\n        </a>\\n        <!-- end of admin links -->\\n    </ng-container>\\n\\n    <!-- all users -->\\n    <a mat-list-item class=\\\"hide\\\">\\n        <i class=\\\"material-icons px-1\\\">info_outline</i>\\n        <span>About</span>\\n    </a>\\n</mat-nav-list>\"","module.exports = \"@media screen and (min-width: 481px) {\\n  .sidenav-close {\\n    display: none; } }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { User } from '../models';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport { SidenavService } from '@app/sidenav/sidenav.service';\n\n@Component({\n  selector: 'side-nav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() private sidenav: MatSidenav;\n\n  roleType = {\n    systemAdmin: 7,\n    companyAdmin: 6,\n    humanResources: 5,\n    regManager: 4,\n    manager: 3,\n    supervisor: 2,\n    user: 1\n  }\n\n  user:User;\n  role:any;\n\n  constructor(\n    private session:SessionService,\n    private navService:SidenavService\n  ) {\n    this.session.getUserItem().subscribe(u => this.user = u);\n  }\n\n  ngOnInit() {\n    // this.session.getUserItem().subscribe(u => this.user = u);\n\n\n    /**\n     * Subscribe to router events, so that anytime the user clicks a\n     * link in the sidenav, the router event will signal here and we will\n     * close the sidenav.\n     */\n    // this.router.events.subscribe(() => {\n    //   this.sidenav.close();\n    // });\n  }\n\n  toggleSidenav():void {\n      this.navService.toggle();\n  }\n\n}\n","import {Injectable, OnChanges, SimpleChanges} from '@angular/core';\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SidenavService {\n    private sidenav:MatSidenav;\n    opened$:Subject<boolean> = new Subject<boolean>();\n\n    constructor() {\n        // if(this.sidenav != null) \n        //     this.opened$.next(this.sidenav.opened);\n        // else\n        //     this.opened$.next(false);\n    }\n\n    open():Promise<MatDrawerToggleResult> {\n        this.opened$.next(true);\n        return this.sidenav.open();\n    }\n\n    close():Promise<MatDrawerToggleResult> {\n        this.opened$.next(false);\n        if(this.sidenav == null) return;\n        return this.sidenav.close();\n    }\n\n    toggle(isOpen?:boolean):Promise<MatDrawerToggleResult> {\n        if(this.sidenav != null) \n            this.opened$.next(!this.sidenav.opened);\n        return this.sidenav.toggle(isOpen);\n    }\n\n    setSidenav(nav:MatSidenav):void {\n        this.sidenav = nav;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SessionService } from './session.service';\nimport { User } from './models';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  user:User;\n  apiUrl:string;\n  userLoggedIn:boolean;\n\n  constructor(private session:SessionService, private auth:AuthService) {\n    this.session.userItem.subscribe((next:User) => { this.user = next; });\n    this.apiUrl = this.auth.apiUrl;\n\n    // get user authenticated status from the session service.\n    this.session\n      .isLoginSubject\n      .subscribe((authenticated:boolean) => {\n        this.userLoggedIn = authenticated;\n      });\n  }\n\n  intercept(request:HttpRequest<any>, next:HttpHandler):Observable<HttpEvent<any>> {\n    this.session.navigateQueue.push(request.url);\n\n    // if the url is nothing our WebAPI, we are not going to append HTTP headers\n    let url = this.apiUrl.substring(7, 11);\n    if(request.url.indexOf(url) == -1 || !this.userLoggedIn) {\n      return next.handle(request);\n    } else {\n      return next.handle(this.session.getTokenRequest(request));\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, RequiredValidator } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material/material.module';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { WeatherService } from '../weather.service';\n\nimport { MyInformationComponent } from '../my-information/my-information.component';\nimport { UserService } from './user.service';\nimport { PayrollComponent } from '../payroll/payroll.component';\nimport { ChangeAgentDialogComponent } from '../payroll/dialogs/change-agent.component';\nimport { RejectNoteDialogComponent } from '../payroll/dialogs/reject-note.component';\nimport { SalesMappingComponent } from '../payroll/dialogs/sales-mapping.component';\n\n// import { HotTableModule } from '@handsontable/angular';\n\nimport { MaskSsn } from '../masks/ssn.directive';\nimport { RequiredValidatorDirective } from '../validators/required-validator.directive';\nimport { CampaignsModule } from '@app/campaigns/campaigns.module';\nimport { VsPasteDirective } from '@app/payroll/paste.directive';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    CampaignsModule\n  ],\n  declarations: [\n    MyInformationComponent,\n    PayrollComponent,\n    ChangeAgentDialogComponent,\n    MaskSsn,\n    RejectNoteDialogComponent,\n    SalesMappingComponent,\n    RequiredValidatorDirective,\n    VsPasteDirective\n  ],\n  entryComponents: [\n    RejectNoteDialogComponent,\n    SalesMappingComponent,\n    ChangeAgentDialogComponent\n  ],\n  providers: [WeatherService, UserService]\n})\nexport class UserFeaturesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, IUserDetail, IAgent, ILocalStorage } from '../models/index';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { SessionService } from '../session.service';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { environment } from '@env/environment';\nimport { IUserDetailInfo } from '@app/models/user-detail-info.model';\n\ninterface DataStore {\n  user: User,\n  users: User[],\n  detail: IUserDetail,\n  agents: IAgent[]\n}\n\n@Injectable()\nexport class UserService {\n  private apiUrl:string = environment.apiUrl;\n  private api = environment.apiUrl + 'api/';\n\n  dataStore: DataStore = {\n    user: null,\n    users: null,\n    detail: null,\n    agents: null\n  }\n\n  user: Observable<User>;\n  user$:Subject<User> = new ReplaySubject<User>(1);\n  users: Observable<User[]>;\n  private users$:Subject<User[]> = new ReplaySubject<User[]>(1);\n  agents: Observable<IAgent[]>;\n  private agents$:Subject<IAgent[]> = new ReplaySubject<IAgent[]>(1);\n  userDetail: Observable<IUserDetail>;\n  userDetail$:Subject<IUserDetail> = new ReplaySubject<IUserDetail>(1);\n\n  constructor(private http: HttpClient, private session: SessionService) {\n    this.user = this.user$.asObservable();\n    this.users = this.users$.asObservable();\n    this.userDetail = this.userDetail$.asObservable();\n    this.agents = this.agents$.asObservable();\n\n    this.session.userItem.subscribe((user:User) => {\n      this.user$.next(user);\n      this.dataStore.user = user;\n      this.dataStore.detail = user.detail;\n      this.userDetail$.next(user.detail);\n    });\n  }\n\n  ngOnInit() {\n    this.session.getItem('user');\n  }\n\n  setUser(user:User):void {\n    this.user$.next(user);\n  }\n\n  reloadUserPromise(): Promise<void> {\n    return new Promise<void>(\n      resolve => {\n        if(this.dataStore.user == null) {\n          this.session.getItem('user');\n        }\n        this.user$.next(this.dataStore.user);\n      }\n    )\n  }\n\n  reloadUsers(): Promise<boolean> {\n    return new Promise<boolean>(\n      resolve => {\n        this.users$.next(this.dataStore.users);\n        return true;\n      }\n    )\n  }\n\n  /**\n   * Get's session user's detail.\n   */\n  getUserDetail():Promise<IUserDetail> {\n    return new Promise<IUserDetail>((resolve, reject) => {\n      if(this.dataStore.detail == null) reject();\n      this.userDetail$.next(this.dataStore.detail);\n      resolve(this.dataStore.detail);\n    });\n  }\n\n  reloadUserDetail():void {\n    this.userDetail$.next(this.dataStore.detail);\n  }\n\n  reloadUser():void {\n    if(this.dataStore.user == null) {\n      this.user$.next(this.session.dataStore.user);\n    } else {\n      this.user$.next(this.dataStore.user);\n    }\n  }\n\n  /**\n   * Gets a user's detail entity.\n   *\n   * @param userId\n   */\n  getUserDetailById(userId:number):Promise<IUserDetail> {\n    return this.http.get(this.apiUrl + 'api/users/' + userId + '/detail')\n      .toPromise()\n      .then((detail:IUserDetail) => {\n        return detail;\n      });\n  }\n\n  loadUsersByActiveState(activeOnly: boolean = true): void {\n    this.http.get(this.apiUrl + 'api/users/all/statuses/' + activeOnly)\n      .subscribe((data: User[]) => {\n        this.dataStore.users = data;\n        this.users$.next(this.dataStore.users);\n      });\n  }\n\n  /**\n   *\n   *\n   * @param activeOnly\n   */\n  loadAgents(activeOnly:boolean = true): void {\n    this.http.get(this.apiUrl + 'api/agents')\n      .subscribe((data: IAgent[]) => {\n        this.dataStore.agents = data;\n        this.agents$.next(this.dataStore.agents);\n      });\n  }\n\n  /**\n   * Get all agents, return a promise asynchronously.\n   */\n  refreshAgents():Promise<IAgent[]> {\n    return new Promise<IAgent[]>(resolve => {\n      if(this.dataStore.agents == null) this.loadAgents(true);\n      resolve(this.dataStore.agents);\n    });\n  }\n\n  getAgentByUserId(userId: number):Promise<IAgent> {\n    if(this.dataStore.agents == null) this.loadAgents(true);\n    return new Promise((resolve) => {\n      let agent = _.filter(this.dataStore.agents, (a: IAgent) => { return a.userId == userId; }) as IAgent;\n      resolve(agent);\n    });\n  }\n\n  getAgentsByManagerId(managerId:number): Promise<IAgent[]> {\n    if(this.dataStore.agents == null) {\n      return new Promise(resolve => {\n        this.http.get(this.apiUrl + 'api/agents')\n          .subscribe((agents:IAgent[]) => {\n            this.dataStore.agents = agents;\n            this.agents$.next(agents);\n            agents = _.filter(agents, (a:IAgent) => { return a.managerId == managerId; });\n            resolve(agents);\n          });\n      });\n    } else {\n      return new Promise(resolve => {\n        let agents:IAgent[] = _.filter(this.dataStore.agents, (agent: IAgent) => { return agent.managerId == managerId; });\n        resolve(agents);\n      });\n    }\n  }\n\n  /**\n   * Get a user entity by user id for use, this is not to be used for session user info.\n   *\n   * @param userId\n   */\n  getUser(userId:number):Promise<User> {\n    return this.http.get(this.apiUrl + 'api/users/' + userId)\n      .toPromise()\n      .then((user:User) => {\n        return user;\n      });\n  }\n\n  /**\n   * Get a user by username... ONLY use if the user is authenticated. This route should\n   * be covered with middleware on the server.\n   *\n   * @param username\n   */\n  loadUser(username: string): void {\n    this.http.get(this.apiUrl + 'api/users/' + username + '/session')\n      .subscribe((data: User) => {\n        this.dataStore.detail = data.detail;\n        this.userDetail$.next(data.detail);\n\n        this.dataStore.user = data;\n        this.session.setUser(this.dataStore.user);\n        this.user$.next(this.dataStore.user);\n        this.setLocalStorageUser(this.dataStore.user);\n      });\n  }\n\n  storeNgUser(user:User):void {\n      this.dataStore.detail = user.detail;\n      this.userDetail$.next(user.detail);\n\n      this.dataStore.user = user;\n      this.session.setUser(this.dataStore.user);\n      this.user$.next(this.dataStore.user);\n      this.setLocalStorageUser(this.dataStore.user);\n  }\n\n  updateUser(user: User, detail: IUserDetail): void {\n    this.http.post(this.apiUrl + 'api/users/' + user.id, { user: user, detail: detail })\n      .subscribe((data: any) => {\n        if(data.user) {\n          this.dataStore.user = data.user;\n          this.session.setUser(this.dataStore.user);\n        } else {\n          this.dataStore.user = data;\n        }\n\n        if(data.detail != null) {\n          this.dataStore.detail = data.detail;\n          this.userDetail$.next(this.dataStore.detail);\n        }\n\n        this.user$.next(this.dataStore.user);\n        this.setLocalStorageUser(this.dataStore.user);\n      }\n    );\n  }\n\n  updateUserEntity(user:User):Promise<User> {\n    return this.http.post(this.apiUrl + 'api/users/' + user.id, user)\n      .toPromise()\n      .then((user:User) => {\n        return user;\n      });\n  }\n\n  saveNewUserAgentEntity(user:User, agent:IAgent, detail:IUserDetail, clientId:number, role:number):Observable<boolean> {\n    let dto = { user: user, agent: agent, detail: detail, role: role };\n    return this.http.post<boolean>(`${this.apiUrl}api/users/clients/${clientId}/new-user-agent`, dto);\n  }\n\n  /**\n   * @description This will allow us to the update the current signed in user's cached session information\n   * without having to persist anything back to the server. This should only be used if the updated information\n   * on the user's session is non-related to the user's table (e.g. The current client selected has options changed\n   * and the logged in user's object needs to know about those changes).\n   *\n   * @param user\n   * @return void\n   */\n  cacheUser(user: User): void {\n    this.dataStore.user = user;\n    this.user$.next(this.dataStore.user);\n    this.setLocalStorageUser(this.dataStore.user);\n  }\n\n  loadUserDetail(userId:number = null): void {\n    userId = userId || this.dataStore.user.id;\n    this.http.get(this.apiUrl + 'api/users/' + userId + '/detail')\n      .subscribe((data: IUserDetail) => {\n        if(data == null) return;\n        this.dataStore.detail = data;\n        this.userDetail$.next(this.dataStore.detail);\n      });\n  }\n\n  /**\n   * For use to update a user's detail information and return promise.\n   *\n   * @param detail\n   */\n  saveDetailEntity(detail:IUserDetail):Promise<IUserDetail> {\n    let executionUrl = detail.userDetailId != null\n      ? this.apiUrl + 'api/users/' + detail.userId + '/details/' + detail.userDetailId\n      : this.apiUrl + 'api/users/' + detail.userId + '/details';\n    return this.http.post(executionUrl, detail)\n      .toPromise()\n      .then((detail:IUserDetail) => {\n        return detail;\n      });\n  }\n\n  /**\n   * Update user detail sale info\n   *\n   * @param detail\n   */\n  updateDetailSaleInfo(detail:IUserDetail):Promise<IUserDetail> {\n    let url = this.api + 'users/' + detail.userId + '/details/' + detail.userDetailId + '/sale-info';\n    return this.http.post(url, detail)\n      .toPromise()\n      .then((detail:IUserDetail) => {\n        return detail;\n      });\n  }\n\n  updateDetailAgentInfo(detail:IUserDetailInfo):Promise<IUserDetailInfo> {\n    let url = this.api + 'users/' + detail.userId + '/details/' + detail.userDetailId + '/agent-info';\n    return this.http.post(url, detail)\n      .toPromise()\n      .then((detail:IUserDetailInfo) => {\n        return detail;\n      });\n  }\n\n  /**\n   * Only for use on session user, this will update session user details.\n   *\n   * @param detail\n   */\n  updateDetail(detail: IUserDetail): void {\n    this.http.post(this.apiUrl + 'api/users/' + detail.userId + '/details/' + detail.userDetailId, detail)\n      .subscribe((data: IUserDetail) => {\n        this.dataStore.detail = data;\n        this.userDetail$.next(this.dataStore.detail);\n      }\n    );\n  }\n\n  logout(): void {\n    this.dataStore.user = null;\n    this.user$.next(null);\n    this.dataStore.detail = null;\n    this.userDetail$.next(null);\n  }\n\n  /**\n   * This sets the session user. It will save/overwrite any existing user information for the logged in\n   * user on the session cookie.\n   *\n   * @param user\n   */\n  private setLocalStorageUser(user: User): void {\n    let data: ILocalStorage<User> = <ILocalStorage<User>>{\n      expires: moment().valueOf() + (1000 * (60 * 24 * 3)),\n      data: user\n    };\n    this.session.setItem('user', data);\n  }\n\n}\n","import { Directive, ElementRef, Renderer2, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[requiredValidator]'\n})\nexport class RequiredValidatorDirective {\n\n  protected _elementClass: string[] = [];\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    console.dir(el);\n\n    if(el.nativeElement.firstElementChild !== null) console.dir(el.nativeElement.firstElementChild.validity);\n  }\n\n  @HostListener('mouseleave') fieldBlur() {\n    // this.el.nativeElement.validity.valid = false;\n      // this.invalidateField();\n\n    if(!this.el.nativeElement.validity.valid) this.invalidateField();\n  }\n\n  @HostBinding('class')\n  get elementClass(): string {\n    return this._elementClass.join(' ');\n  }\n\n  private invalidateField(): void {\n    // this.renderer.addClass(this.el.nativeElement, 'mat-form-field-invalid');\n    // this.renderer.addClass(this.el.nativeElement, 'mat-input-invalid');\n    // this.renderer.addClass(this.el.nativeElement, 'text-danger');\n\n    this._elementClass.push('mat-form-field-invalid');\n    this._elementClass.push('mat-input-invalid');\n    this._elementClass.push('text-danger');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class WeatherService {\n  private APIKEY: string = '2580c0421b529216d4197f97870a52a6';\n\n  constructor(private http: HttpClient) { }\n\n  getWeatherByGeoLocale(long: number, lat: number): Promise<any> {\n    return this.http.get('http://api.openweathermap.org/data/2.5/weather?lat='+ lat +'&lon=' + long + '&APPID=' + this.APIKEY).toPromise();\n  }\n\n}\n","export const environment = {\n  production: true,\n  rootUrl: 'https://verostack.io',\n  apiUrl: 'https://verostack.io/'\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  rootUrl: 'http://verostack:8888',\n  apiUrl: 'http://verostack:8888/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}